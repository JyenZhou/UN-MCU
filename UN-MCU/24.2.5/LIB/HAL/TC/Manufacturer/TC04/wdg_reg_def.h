//----------------------------------------------------------------------
//         COPYRIGHT (C) 2022 TINYCHIP SEMICONDUCTOR                    
    //              CONFIDENTIAL & ALL RIGHTS RESERVED                      
//----------------------------------------------------------------------
// File name      : wdg_reg_def.h                                       
// Author         : mfpan                                               
// E-Mail         : mfpan@tinychip.com.cn                               
//----------------------------------------------------------------------
// Description    :                                                     
// Register Header File of WDG                                       
//----------------------------------------------------------------------
// Reversion History:                                                   
// 2022-10-21 17:24:15 -- automatically generated by reg_gen.pl Revision 1.11          
//----------------------------------------------------------------------

#ifndef   WDG_DEF_H__
#define   WDG_DEF_H__

// Register Offset Macro Definition
#define WDG_CTRL_OFFSET                                         0x0000
#define WDG_CNT_MAX_OFFSET                                      0x0004
#define WDG_CCR_OFFSET                                          0x0010
#define WDG_ICR_OFFSET                                          0x0014
#define WDG_LOCK_OFFSET                                         0x0018
#define WDG_STATUS_OFFSET                                       0x001C

// Register Address Macro Definition
#define WDG_CTRL_ADDR                                           ( WDG_BASE_ADDR + WDG_CTRL_OFFSET)
#define WDG_CNT_MAX_ADDR                                        ( WDG_BASE_ADDR + WDG_CNT_MAX_OFFSET)
#define WDG_CCR_ADDR                                            ( WDG_BASE_ADDR + WDG_CCR_OFFSET)
#define WDG_ICR_ADDR                                            ( WDG_BASE_ADDR + WDG_ICR_OFFSET)
#define WDG_LOCK_ADDR                                           ( WDG_BASE_ADDR + WDG_LOCK_OFFSET)
#define WDG_STATUS_ADDR                                         ( WDG_BASE_ADDR + WDG_STATUS_OFFSET)

// Register Field Macro Definition
#define WDG_CTRL_DBG_STOP_SHIFT                             8
#define WDG_CTRL_DBG_STOP_MASK                              0x00000100
#define WDG_CTRL_DBG_STOP_SET(n)                            (((uint32_t)(n) << 8  ) & 0x00000100)
#define WDG_CTRL_DBG_STOP_CLR                               0xFFFFFEFF

#define WDG_CTRL_REO_SHIFT                                  1
#define WDG_CTRL_REO_MASK                                   0x00000002
#define WDG_CTRL_REO_SET(n)                                 (((uint32_t)(n) << 1  ) & 0x00000002)
#define WDG_CTRL_REO_CLR                                    0xFFFFFFFD

#define WDG_CTRL_WE_SHIFT                                   0
#define WDG_CTRL_WE_MASK                                    0x00000001
#define WDG_CTRL_WE_SET(n)                                  (((uint32_t)(n) << 0  ) & 0x00000001)
#define WDG_CTRL_WE_CLR                                     0xFFFFFFFE

#define WDG_CNT_MAX_MAX_CNT_SHIFT                           0
#define WDG_CNT_MAX_MAX_CNT_MASK                            0x00000FFF
#define WDG_CNT_MAX_MAX_CNT_SET(n)                          (((uint32_t)(n) << 0  ) & 0x00000FFF)
#define WDG_CNT_MAX_MAX_CNT_CLR                             0xFFFFF000

#define WDG_CCR_CCR_SHIFT                                   0
#define WDG_CCR_CCR_MASK                                    0x00000001
#define WDG_CCR_CCR_SET(n)                                  (((uint32_t)(n) << 0  ) & 0x00000001)
#define WDG_CCR_CCR_CLR                                     0xFFFFFFFE

#define WDG_ICR_COI_SHIFT                                   0
#define WDG_ICR_COI_MASK                                    0x00000001
#define WDG_ICR_COI_SET(n)                                  (((uint32_t)(n) << 0  ) & 0x00000001)
#define WDG_ICR_COI_CLR                                     0xFFFFFFFE

#define WDG_LOCK_PASSWORD_SHIFT                             0
#define WDG_LOCK_PASSWORD_MASK                              0xFFFFFFFF
#define WDG_LOCK_PASSWORD_SET(n)                            (((uint32_t)(n) << 0  ) & 0xFFFFFFFF)
#define WDG_LOCK_PASSWORD_CLR                               0x00000000

#define WDG_STATUS_IOVF_SHIFT                               12
#define WDG_STATUS_IOVF_MASK                                0x00001000
#define WDG_STATUS_IOVF_SET(n)                              (((uint32_t)(n) << 12 ) & 0x00001000)
#define WDG_STATUS_IOVF_CLR                                 0xFFFFEFFF

#define WDG_STATUS_WCNT_SHIFT                               0
#define WDG_STATUS_WCNT_MASK                                0x00000FFF
#define WDG_STATUS_WCNT_SET(n)                              (((uint32_t)(n) << 0  ) & 0x00000FFF)
#define WDG_STATUS_WCNT_CLR                                 0xFFFFF000

// Register Structure Definition
typedef struct
{
    __IO uint32_t WE              : 1  ; // 0  : 0 
    __IO uint32_t REO             : 1  ; // 1  : 1 
    __IO uint32_t RESERVED1       : 6  ; // 7  : 2 
    __IO uint32_t DBG_STOP        : 1  ; // 8  : 8 
    __IO uint32_t RESERVED0       : 23 ; // 31 : 9 
} WDG_CTRL_FIELD_T;

typedef struct
{
    __IO uint32_t MAX_CNT         : 12 ; // 11 : 0 
    __IO uint32_t RESERVED0       : 20 ; // 31 : 12 
} WDG_CNT_MAX_FIELD_T;

typedef struct
{
    __IO uint32_t CCR             : 1  ; // 0  : 0 
    __IO uint32_t RESERVED0       : 31 ; // 31 : 1 
} WDG_CCR_FIELD_T;

typedef struct
{
    __IO uint32_t COI             : 1  ; // 0  : 0 
    __IO uint32_t RESERVED0       : 31 ; // 31 : 1 
} WDG_ICR_FIELD_T;

typedef struct
{
    __IO uint32_t PASSWORD        : 32 ; // 31 : 0 
} WDG_LOCK_FIELD_T;

typedef struct
{
    __IO uint32_t WCNT            : 12 ; // 11 : 0 
    __IO uint32_t IOVF            : 1  ; // 12 : 12 
    __IO uint32_t RESERVED0       : 19 ; // 31 : 13 
} WDG_STATUS_FIELD_T;

// Register Map Structure Definition
typedef struct
{
    union 
    { 
        __IO  uint32_t CTRL              ; // 0x0000
        WDG_CTRL_FIELD_T CTRL_F          ;
    };

    union 
    { 
        __IO  uint32_t CNT_MAX           ; // 0x0004
        WDG_CNT_MAX_FIELD_T CNT_MAX_F    ;
    };

    uint32_t RESERVED0[2]                ;

    union 
    { 
        __IO  uint32_t CCR               ; // 0x0010
        WDG_CCR_FIELD_T CCR_F            ;
    };

    union 
    { 
        __IO  uint32_t ICR               ; // 0x0014
        WDG_ICR_FIELD_T ICR_F            ;
    };

    union 
    { 
        __IO  uint32_t LOCK              ; // 0x0018
        WDG_LOCK_FIELD_T LOCK_F          ;
    };

    union 
    { 
        __IO  uint32_t STATUS            ; // 0x001C
        WDG_STATUS_FIELD_T STATUS_F      ;
    };

} WDG_REG_TypeDef;

#endif
