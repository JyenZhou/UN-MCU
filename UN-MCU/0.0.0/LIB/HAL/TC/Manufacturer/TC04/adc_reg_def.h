//----------------------------------------------------------------------
//         COPYRIGHT (C) 2022 TINYCHIP SEMICONDUCTOR                    
    //              CONFIDENTIAL & ALL RIGHTS RESERVED                      
//----------------------------------------------------------------------
// File name      : adc_reg_def.h                                       
// Author         : mfpan                                               
// E-Mail         : mfpan@tinychip.com.cn                               
//----------------------------------------------------------------------
// Description    :                                                     
// Register Header File of ADC                                       
//----------------------------------------------------------------------
// Reversion History:                                                   
// 2022-10-21 17:24:14 -- automatically generated by reg_gen.pl Revision 1.11          
//----------------------------------------------------------------------

#ifndef   ADC_DEF_H__
#define   ADC_DEF_H__

// Register Offset Macro Definition
#define ADC_ADC_FIFO_DATA_OFFSET                                0x0000
#define ADC_ADC_FIFO_STATE_OFFSET                               0x0004
#define ADC_ADC_IMR_OFFSET                                      0x0008
#define ADC_ADC_ICR_OFFSET                                      0x000C
#define ADC_ADC_ISR_OFFSET                                      0x0010
#define ADC_ADC_IRSR_OFFSET                                     0x0014
#define ADC_ADC_CONF0_OFFSET                                    0x0018
#define ADC_ADC_CONF1_OFFSET                                    0x001C
#define ADC_ADC_CONF2_OFFSET                                    0x0020
#define ADC_ADC_CONF_PAIR_OFFSET                                0x0024
#define ADC_ADC_CONF_COMP_OFFSET                                0x0028
#define ADC_ADC_RAW_OUT_OFFSET                                  0x002C
#define ADC_ADC_IRQ_STATUS_OFFSET                               0x0030
#define ADC_ADC_ANA_TOP_OFFSET                                  0x0034
#define ADC_ADC_PGA_CTRL_OFFSET                                 0x0038
#define ADC_ADC_PGA_CHNL0_OFFSET                                0x003C
#define ADC_ADC_PGA_CHNL1_OFFSET                                0x0040
#define ADC_ADC_PGA_CHNL2_OFFSET                                0x0044
#define ADC_ADC_PGA_CHNL3_OFFSET                                0x0048
#define ADC_ADC_PGA_CHNL4_OFFSET                                0x004C
#define ADC_ADC_PGA_CHNL5_OFFSET                                0x0050
#define ADC_ADC_PGA_CHNL6_OFFSET                                0x0054
#define ADC_ADC_PGA_CHNL7_OFFSET                                0x0058
#define ADC_TRIM_ADSAR_VALUE0_OFFSET                            0x0100
#define ADC_TRIM_ADSAR_VALUE1_OFFSET                            0x0104
#define ADC_TRIM_ADSAR_VALUE2_OFFSET                            0x0108
#define ADC_TRIM_ADSAR_VALUE3_OFFSET                            0x010C
#define ADC_TRIM_ADSAR_VALUE4_OFFSET                            0x0110
#define ADC_TRIM_ADSAR_VALUE5_OFFSET                            0x0114
#define ADC_TRIM_ADSAR_VALUE6_OFFSET                            0x0118
#define ADC_TRIM_ADSAR_VALUE7_OFFSET                            0x011C
#define ADC_TRIM_ADSAR_VALUE8_OFFSET                            0x0120
#define ADC_TRIM_ADSAR_COEFF0_OFFSET                            0x0124
#define ADC_TRIM_ADSAR_COEFF1_OFFSET                            0x0128

// Register Address Macro Definition
#define ADC_ADC_FIFO_DATA_ADDR                                  ( ADC_BASE_ADDR + ADC_ADC_FIFO_DATA_OFFSET)
#define ADC_ADC_FIFO_STATE_ADDR                                 ( ADC_BASE_ADDR + ADC_ADC_FIFO_STATE_OFFSET)
#define ADC_ADC_IMR_ADDR                                        ( ADC_BASE_ADDR + ADC_ADC_IMR_OFFSET)
#define ADC_ADC_ICR_ADDR                                        ( ADC_BASE_ADDR + ADC_ADC_ICR_OFFSET)
#define ADC_ADC_ISR_ADDR                                        ( ADC_BASE_ADDR + ADC_ADC_ISR_OFFSET)
#define ADC_ADC_IRSR_ADDR                                       ( ADC_BASE_ADDR + ADC_ADC_IRSR_OFFSET)
#define ADC_ADC_CONF0_ADDR                                      ( ADC_BASE_ADDR + ADC_ADC_CONF0_OFFSET)
#define ADC_ADC_CONF1_ADDR                                      ( ADC_BASE_ADDR + ADC_ADC_CONF1_OFFSET)
#define ADC_ADC_CONF2_ADDR                                      ( ADC_BASE_ADDR + ADC_ADC_CONF2_OFFSET)
#define ADC_ADC_CONF_PAIR_ADDR                                  ( ADC_BASE_ADDR + ADC_ADC_CONF_PAIR_OFFSET)
#define ADC_ADC_CONF_COMP_ADDR                                  ( ADC_BASE_ADDR + ADC_ADC_CONF_COMP_OFFSET)
#define ADC_ADC_RAW_OUT_ADDR                                    ( ADC_BASE_ADDR + ADC_ADC_RAW_OUT_OFFSET)
#define ADC_ADC_IRQ_STATUS_ADDR                                 ( ADC_BASE_ADDR + ADC_ADC_IRQ_STATUS_OFFSET)
#define ADC_ADC_ANA_TOP_ADDR                                    ( ADC_BASE_ADDR + ADC_ADC_ANA_TOP_OFFSET)
#define ADC_ADC_PGA_CTRL_ADDR                                   ( ADC_BASE_ADDR + ADC_ADC_PGA_CTRL_OFFSET)
#define ADC_ADC_PGA_CHNL0_ADDR                                  ( ADC_BASE_ADDR + ADC_ADC_PGA_CHNL0_OFFSET)
#define ADC_ADC_PGA_CHNL1_ADDR                                  ( ADC_BASE_ADDR + ADC_ADC_PGA_CHNL1_OFFSET)
#define ADC_ADC_PGA_CHNL2_ADDR                                  ( ADC_BASE_ADDR + ADC_ADC_PGA_CHNL2_OFFSET)
#define ADC_ADC_PGA_CHNL3_ADDR                                  ( ADC_BASE_ADDR + ADC_ADC_PGA_CHNL3_OFFSET)
#define ADC_ADC_PGA_CHNL4_ADDR                                  ( ADC_BASE_ADDR + ADC_ADC_PGA_CHNL4_OFFSET)
#define ADC_ADC_PGA_CHNL5_ADDR                                  ( ADC_BASE_ADDR + ADC_ADC_PGA_CHNL5_OFFSET)
#define ADC_ADC_PGA_CHNL6_ADDR                                  ( ADC_BASE_ADDR + ADC_ADC_PGA_CHNL6_OFFSET)
#define ADC_ADC_PGA_CHNL7_ADDR                                  ( ADC_BASE_ADDR + ADC_ADC_PGA_CHNL7_OFFSET)
#define ADC_TRIM_ADSAR_VALUE0_ADDR                              ( ADC_BASE_ADDR + ADC_TRIM_ADSAR_VALUE0_OFFSET)
#define ADC_TRIM_ADSAR_VALUE1_ADDR                              ( ADC_BASE_ADDR + ADC_TRIM_ADSAR_VALUE1_OFFSET)
#define ADC_TRIM_ADSAR_VALUE2_ADDR                              ( ADC_BASE_ADDR + ADC_TRIM_ADSAR_VALUE2_OFFSET)
#define ADC_TRIM_ADSAR_VALUE3_ADDR                              ( ADC_BASE_ADDR + ADC_TRIM_ADSAR_VALUE3_OFFSET)
#define ADC_TRIM_ADSAR_VALUE4_ADDR                              ( ADC_BASE_ADDR + ADC_TRIM_ADSAR_VALUE4_OFFSET)
#define ADC_TRIM_ADSAR_VALUE5_ADDR                              ( ADC_BASE_ADDR + ADC_TRIM_ADSAR_VALUE5_OFFSET)
#define ADC_TRIM_ADSAR_VALUE6_ADDR                              ( ADC_BASE_ADDR + ADC_TRIM_ADSAR_VALUE6_OFFSET)
#define ADC_TRIM_ADSAR_VALUE7_ADDR                              ( ADC_BASE_ADDR + ADC_TRIM_ADSAR_VALUE7_OFFSET)
#define ADC_TRIM_ADSAR_VALUE8_ADDR                              ( ADC_BASE_ADDR + ADC_TRIM_ADSAR_VALUE8_OFFSET)
#define ADC_TRIM_ADSAR_COEFF0_ADDR                              ( ADC_BASE_ADDR + ADC_TRIM_ADSAR_COEFF0_OFFSET)
#define ADC_TRIM_ADSAR_COEFF1_ADDR                              ( ADC_BASE_ADDR + ADC_TRIM_ADSAR_COEFF1_OFFSET)

// Register Field Macro Definition
#define ADC_ADC_FIFO_DATA_FIFO_RDATA_SHIFT                                     0
#define ADC_ADC_FIFO_DATA_FIFO_RDATA_MASK                                      0xFFFFFFFF
#define ADC_ADC_FIFO_DATA_FIFO_RDATA_SET(n)                                    (((uint32_t)(n) << 0  ) & 0xFFFFFFFF)
#define ADC_ADC_FIFO_DATA_FIFO_RDATA_CLR                                       0x00000000

#define ADC_ADC_FIFO_STATE_ENTRY_VALID_SHIFT                                   0
#define ADC_ADC_FIFO_STATE_ENTRY_VALID_MASK                                    0x00000007
#define ADC_ADC_FIFO_STATE_ENTRY_VALID_SET(n)                                  (((uint32_t)(n) << 0  ) & 0x00000007)
#define ADC_ADC_FIFO_STATE_ENTRY_VALID_CLR                                     0xFFFFFFF8

#define ADC_ADC_IMR_IMR_SHIFT                                                  0
#define ADC_ADC_IMR_IMR_MASK                                                   0x0000001F
#define ADC_ADC_IMR_IMR_SET(n)                                                 (((uint32_t)(n) << 0  ) & 0x0000001F)
#define ADC_ADC_IMR_IMR_CLR                                                    0xFFFFFFE0

#define ADC_ADC_ICR_ICR_SHIFT                                                  0
#define ADC_ADC_ICR_ICR_MASK                                                   0x0000001F
#define ADC_ADC_ICR_ICR_SET(n)                                                 (((uint32_t)(n) << 0  ) & 0x0000001F)
#define ADC_ADC_ICR_ICR_CLR                                                    0xFFFFFFE0

#define ADC_ADC_ISR_ISR_SHIFT                                                  0
#define ADC_ADC_ISR_ISR_MASK                                                   0x0000001F
#define ADC_ADC_ISR_ISR_SET(n)                                                 (((uint32_t)(n) << 0  ) & 0x0000001F)
#define ADC_ADC_ISR_ISR_CLR                                                    0xFFFFFFE0

#define ADC_ADC_IRSR_IRSR_SHIFT                                                0
#define ADC_ADC_IRSR_IRSR_MASK                                                 0x0000001F
#define ADC_ADC_IRSR_IRSR_SET(n)                                               (((uint32_t)(n) << 0  ) & 0x0000001F)
#define ADC_ADC_IRSR_IRSR_CLR                                                  0xFFFFFFE0

#define ADC_ADC_CONF0_TW_TRIG_NUM_SHIFT                                        16
#define ADC_ADC_CONF0_TW_TRIG_NUM_MASK                                         0xFFFF0000
#define ADC_ADC_CONF0_TW_TRIG_NUM_SET(n)                                       (((uint32_t)(n) << 16 ) & 0xFFFF0000)
#define ADC_ADC_CONF0_TW_TRIG_NUM_CLR                                          0x0000FFFF

#define ADC_ADC_CONF0_CH_PAIR3_EN_SHIFT                                        15
#define ADC_ADC_CONF0_CH_PAIR3_EN_MASK                                         0x00008000
#define ADC_ADC_CONF0_CH_PAIR3_EN_SET(n)                                       (((uint32_t)(n) << 15 ) & 0x00008000)
#define ADC_ADC_CONF0_CH_PAIR3_EN_CLR                                          0xFFFF7FFF

#define ADC_ADC_CONF0_CH_PAIR2_EN_SHIFT                                        14
#define ADC_ADC_CONF0_CH_PAIR2_EN_MASK                                         0x00004000
#define ADC_ADC_CONF0_CH_PAIR2_EN_SET(n)                                       (((uint32_t)(n) << 14 ) & 0x00004000)
#define ADC_ADC_CONF0_CH_PAIR2_EN_CLR                                          0xFFFFBFFF

#define ADC_ADC_CONF0_CH_PAIR1_EN_SHIFT                                        13
#define ADC_ADC_CONF0_CH_PAIR1_EN_MASK                                         0x00002000
#define ADC_ADC_CONF0_CH_PAIR1_EN_SET(n)                                       (((uint32_t)(n) << 13 ) & 0x00002000)
#define ADC_ADC_CONF0_CH_PAIR1_EN_CLR                                          0xFFFFDFFF

#define ADC_ADC_CONF0_CH_PAIR0_EN_SHIFT                                        12
#define ADC_ADC_CONF0_CH_PAIR0_EN_MASK                                         0x00001000
#define ADC_ADC_CONF0_CH_PAIR0_EN_SET(n)                                       (((uint32_t)(n) << 12 ) & 0x00001000)
#define ADC_ADC_CONF0_CH_PAIR0_EN_CLR                                          0xFFFFEFFF

#define ADC_ADC_CONF0_FIFO_THRHLD_SHIFT                                        10
#define ADC_ADC_CONF0_FIFO_THRHLD_MASK                                         0x00000C00
#define ADC_ADC_CONF0_FIFO_THRHLD_SET(n)                                       (((uint32_t)(n) << 10 ) & 0x00000C00)
#define ADC_ADC_CONF0_FIFO_THRHLD_CLR                                          0xFFFFF3FF

#define ADC_ADC_CONF0_FIFO_FORMAT_SHIFT                                        8
#define ADC_ADC_CONF0_FIFO_FORMAT_MASK                                         0x00000300
#define ADC_ADC_CONF0_FIFO_FORMAT_SET(n)                                       (((uint32_t)(n) << 8  ) & 0x00000300)
#define ADC_ADC_CONF0_FIFO_FORMAT_CLR                                          0xFFFFFCFF

#define ADC_ADC_CONF0_IRQ_MODE_SHIFT                                           4
#define ADC_ADC_CONF0_IRQ_MODE_MASK                                            0x00000070
#define ADC_ADC_CONF0_IRQ_MODE_SET(n)                                          (((uint32_t)(n) << 4  ) & 0x00000070)
#define ADC_ADC_CONF0_IRQ_MODE_CLR                                             0xFFFFFF8F

#define ADC_ADC_CONF0_TRIG_EN_SHIFT                                            2
#define ADC_ADC_CONF0_TRIG_EN_MASK                                             0x00000004
#define ADC_ADC_CONF0_TRIG_EN_SET(n)                                           (((uint32_t)(n) << 2  ) & 0x00000004)
#define ADC_ADC_CONF0_TRIG_EN_CLR                                              0xFFFFFFFB

#define ADC_ADC_CONF0_DMA_EN_SHIFT                                             1
#define ADC_ADC_CONF0_DMA_EN_MASK                                              0x00000002
#define ADC_ADC_CONF0_DMA_EN_SET(n)                                            (((uint32_t)(n) << 1  ) & 0x00000002)
#define ADC_ADC_CONF0_DMA_EN_CLR                                               0xFFFFFFFD

#define ADC_ADC_CONF0_SW_START_SHIFT                                           0
#define ADC_ADC_CONF0_SW_START_MASK                                            0x00000001
#define ADC_ADC_CONF0_SW_START_SET(n)                                          (((uint32_t)(n) << 0  ) & 0x00000001)
#define ADC_ADC_CONF0_SW_START_CLR                                             0xFFFFFFFE

#define ADC_ADC_CONF1_SMP_CYCLE_SHIFT                                          22
#define ADC_ADC_CONF1_SMP_CYCLE_MASK                                           0xFFC00000
#define ADC_ADC_CONF1_SMP_CYCLE_SET(n)                                         (((uint32_t)(n) << 22 ) & 0xFFC00000)
#define ADC_ADC_CONF1_SMP_CYCLE_CLR                                            0x003FFFFF

#define ADC_ADC_CONF1_WAIT_CYCLE_SHIFT                                         16
#define ADC_ADC_CONF1_WAIT_CYCLE_MASK                                          0x003F0000
#define ADC_ADC_CONF1_WAIT_CYCLE_SET(n)                                        (((uint32_t)(n) << 16 ) & 0x003F0000)
#define ADC_ADC_CONF1_WAIT_CYCLE_CLR                                           0xFFC0FFFF

#define ADC_ADC_CONF1_AUTO_CHNL_SEL_SHIFT                                      15
#define ADC_ADC_CONF1_AUTO_CHNL_SEL_MASK                                       0x00008000
#define ADC_ADC_CONF1_AUTO_CHNL_SEL_SET(n)                                     (((uint32_t)(n) << 15 ) & 0x00008000)
#define ADC_ADC_CONF1_AUTO_CHNL_SEL_CLR                                        0xFFFF7FFF

#define ADC_ADC_CONF1_CHNL_AVG_EN_SHIFT                                        14
#define ADC_ADC_CONF1_CHNL_AVG_EN_MASK                                         0x00004000
#define ADC_ADC_CONF1_CHNL_AVG_EN_SET(n)                                       (((uint32_t)(n) << 14 ) & 0x00004000)
#define ADC_ADC_CONF1_CHNL_AVG_EN_CLR                                          0xFFFFBFFF

#define ADC_ADC_CONF1_CHNL_SAMP_NUM_DUMMY_SHIFT                                11
#define ADC_ADC_CONF1_CHNL_SAMP_NUM_DUMMY_MASK                                 0x00003800
#define ADC_ADC_CONF1_CHNL_SAMP_NUM_DUMMY_SET(n)                               (((uint32_t)(n) << 11 ) & 0x00003800)
#define ADC_ADC_CONF1_CHNL_SAMP_NUM_DUMMY_CLR                                  0xFFFFC7FF

#define ADC_ADC_CONF1_CHNL_SAMP_NUM_SHIFT                                      6
#define ADC_ADC_CONF1_CHNL_SAMP_NUM_MASK                                       0x000007C0
#define ADC_ADC_CONF1_CHNL_SAMP_NUM_SET(n)                                     (((uint32_t)(n) << 6  ) & 0x000007C0)
#define ADC_ADC_CONF1_CHNL_SAMP_NUM_CLR                                        0xFFFFF83F

#define ADC_ADC_CONF1_TRIG_NUM_SHIFT                                           3
#define ADC_ADC_CONF1_TRIG_NUM_MASK                                            0x00000038
#define ADC_ADC_CONF1_TRIG_NUM_SET(n)                                          (((uint32_t)(n) << 3  ) & 0x00000038)
#define ADC_ADC_CONF1_TRIG_NUM_CLR                                             0xFFFFFFC7

#define ADC_ADC_CONF1_SCAN_CHNUM_SHIFT                                         0
#define ADC_ADC_CONF1_SCAN_CHNUM_MASK                                          0x00000007
#define ADC_ADC_CONF1_SCAN_CHNUM_SET(n)                                        (((uint32_t)(n) << 0  ) & 0x00000007)
#define ADC_ADC_CONF1_SCAN_CHNUM_CLR                                           0xFFFFFFF8

#define ADC_ADC_CONF2_PGA_INITCYCLE_SHIFT                                      16
#define ADC_ADC_CONF2_PGA_INITCYCLE_MASK                                       0x03FF0000
#define ADC_ADC_CONF2_PGA_INITCYCLE_SET(n)                                     (((uint32_t)(n) << 16 ) & 0x03FF0000)
#define ADC_ADC_CONF2_PGA_INITCYCLE_CLR                                        0xFC00FFFF

#define ADC_ADC_CONF2_SAR_INITCYCLE_SHIFT                                      0
#define ADC_ADC_CONF2_SAR_INITCYCLE_MASK                                       0x000003FF
#define ADC_ADC_CONF2_SAR_INITCYCLE_SET(n)                                     (((uint32_t)(n) << 0  ) & 0x000003FF)
#define ADC_ADC_CONF2_SAR_INITCYCLE_CLR                                        0xFFFFFC00

#define ADC_ADC_CONF_PAIR_CH_PAIR3_SHIFT                                       24
#define ADC_ADC_CONF_PAIR_CH_PAIR3_MASK                                        0xFF000000
#define ADC_ADC_CONF_PAIR_CH_PAIR3_SET(n)                                      (((uint32_t)(n) << 24 ) & 0xFF000000)
#define ADC_ADC_CONF_PAIR_CH_PAIR3_CLR                                         0x00FFFFFF

#define ADC_ADC_CONF_PAIR_CH_PAIR2_SHIFT                                       16
#define ADC_ADC_CONF_PAIR_CH_PAIR2_MASK                                        0x00FF0000
#define ADC_ADC_CONF_PAIR_CH_PAIR2_SET(n)                                      (((uint32_t)(n) << 16 ) & 0x00FF0000)
#define ADC_ADC_CONF_PAIR_CH_PAIR2_CLR                                         0xFF00FFFF

#define ADC_ADC_CONF_PAIR_CH_PAIR1_SHIFT                                       8
#define ADC_ADC_CONF_PAIR_CH_PAIR1_MASK                                        0x0000FF00
#define ADC_ADC_CONF_PAIR_CH_PAIR1_SET(n)                                      (((uint32_t)(n) << 8  ) & 0x0000FF00)
#define ADC_ADC_CONF_PAIR_CH_PAIR1_CLR                                         0xFFFF00FF

#define ADC_ADC_CONF_PAIR_CH_PAIR0_SHIFT                                       0
#define ADC_ADC_CONF_PAIR_CH_PAIR0_MASK                                        0x000000FF
#define ADC_ADC_CONF_PAIR_CH_PAIR0_SET(n)                                      (((uint32_t)(n) << 0  ) & 0x000000FF)
#define ADC_ADC_CONF_PAIR_CH_PAIR0_CLR                                         0xFFFFFF00

#define ADC_ADC_CONF_COMP_CMP_CEILING_SHIFT                                    16
#define ADC_ADC_CONF_COMP_CMP_CEILING_MASK                                     0x3FFF0000
#define ADC_ADC_CONF_COMP_CMP_CEILING_SET(n)                                   (((uint32_t)(n) << 16 ) & 0x3FFF0000)
#define ADC_ADC_CONF_COMP_CMP_CEILING_CLR                                      0xC000FFFF

#define ADC_ADC_CONF_COMP_CMP_BOTTOM_SHIFT                                     0
#define ADC_ADC_CONF_COMP_CMP_BOTTOM_MASK                                      0x00003FFF
#define ADC_ADC_CONF_COMP_CMP_BOTTOM_SET(n)                                    (((uint32_t)(n) << 0  ) & 0x00003FFF)
#define ADC_ADC_CONF_COMP_CMP_BOTTOM_CLR                                       0xFFFFC000

#define ADC_ADC_RAW_OUT_RAW_OUT17_SHIFT                                        0
#define ADC_ADC_RAW_OUT_RAW_OUT17_MASK                                         0x0001FFFF
#define ADC_ADC_RAW_OUT_RAW_OUT17_SET(n)                                       (((uint32_t)(n) << 0  ) & 0x0001FFFF)
#define ADC_ADC_RAW_OUT_RAW_OUT17_CLR                                          0xFFFE0000

#define ADC_ADC_IRQ_STATUS_IRQ_COMP_STATUS_SHIFT                               0
#define ADC_ADC_IRQ_STATUS_IRQ_COMP_STATUS_MASK                                0x7FFFFFFF
#define ADC_ADC_IRQ_STATUS_IRQ_COMP_STATUS_SET(n)                              (((uint32_t)(n) << 0  ) & 0x7FFFFFFF)
#define ADC_ADC_IRQ_STATUS_IRQ_COMP_STATUS_CLR                                 0x80000000

#define ADC_ADC_ANA_TOP_CTRL_SAR_MUX_SHIFT                                     24
#define ADC_ADC_ANA_TOP_CTRL_SAR_MUX_MASK                                      0xFF000000
#define ADC_ADC_ANA_TOP_CTRL_SAR_MUX_SET(n)                                    (((uint32_t)(n) << 24 ) & 0xFF000000)
#define ADC_ADC_ANA_TOP_CTRL_SAR_MUX_CLR                                       0x00FFFFFF

#define ADC_ADC_ANA_TOP_CTRL_SAR_MUX_PGA_SHIFT                                 16
#define ADC_ADC_ANA_TOP_CTRL_SAR_MUX_PGA_MASK                                  0x00030000
#define ADC_ADC_ANA_TOP_CTRL_SAR_MUX_PGA_SET(n)                                (((uint32_t)(n) << 16 ) & 0x00030000)
#define ADC_ADC_ANA_TOP_CTRL_SAR_MUX_PGA_CLR                                   0xFFFCFFFF

#define ADC_ADC_ANA_TOP_CTRL_SAR_15_14_SHIFT                                   14
#define ADC_ADC_ANA_TOP_CTRL_SAR_15_14_MASK                                    0x0000C000
#define ADC_ADC_ANA_TOP_CTRL_SAR_15_14_SET(n)                                  (((uint32_t)(n) << 14 ) & 0x0000C000)
#define ADC_ADC_ANA_TOP_CTRL_SAR_15_14_CLR                                     0xFFFF3FFF

#define ADC_ADC_ANA_TOP_CTRL_SAR_TEST_VREFP_EN_SHIFT                           13
#define ADC_ADC_ANA_TOP_CTRL_SAR_TEST_VREFP_EN_MASK                            0x00002000
#define ADC_ADC_ANA_TOP_CTRL_SAR_TEST_VREFP_EN_SET(n)                          (((uint32_t)(n) << 13 ) & 0x00002000)
#define ADC_ADC_ANA_TOP_CTRL_SAR_TEST_VREFP_EN_CLR                             0xFFFFDFFF

#define ADC_ADC_ANA_TOP_CTRL_SAR_TEST_LDO_EN_SHIFT                             12
#define ADC_ADC_ANA_TOP_CTRL_SAR_TEST_LDO_EN_MASK                              0x00001000
#define ADC_ADC_ANA_TOP_CTRL_SAR_TEST_LDO_EN_SET(n)                            (((uint32_t)(n) << 12 ) & 0x00001000)
#define ADC_ADC_ANA_TOP_CTRL_SAR_TEST_LDO_EN_CLR                               0xFFFFEFFF

#define ADC_ADC_ANA_TOP_CTRL_SAR_VREFP_VOL_SEL_SHIFT                           11
#define ADC_ADC_ANA_TOP_CTRL_SAR_VREFP_VOL_SEL_MASK                            0x00000800
#define ADC_ADC_ANA_TOP_CTRL_SAR_VREFP_VOL_SEL_SET(n)                          (((uint32_t)(n) << 11 ) & 0x00000800)
#define ADC_ADC_ANA_TOP_CTRL_SAR_VREFP_VOL_SEL_CLR                             0xFFFFF7FF

#define ADC_ADC_ANA_TOP_CTRL_SAR_BUF_VREFP_EN_SHIFT                            10
#define ADC_ADC_ANA_TOP_CTRL_SAR_BUF_VREFP_EN_MASK                             0x00000400
#define ADC_ADC_ANA_TOP_CTRL_SAR_BUF_VREFP_EN_SET(n)                           (((uint32_t)(n) << 10 ) & 0x00000400)
#define ADC_ADC_ANA_TOP_CTRL_SAR_BUF_VREFP_EN_CLR                              0xFFFFFBFF

#define ADC_ADC_ANA_TOP_CTRL_SAR_VREF_GEN_EN_SHIFT                             9
#define ADC_ADC_ANA_TOP_CTRL_SAR_VREF_GEN_EN_MASK                              0x00000200
#define ADC_ADC_ANA_TOP_CTRL_SAR_VREF_GEN_EN_SET(n)                            (((uint32_t)(n) << 9  ) & 0x00000200)
#define ADC_ADC_ANA_TOP_CTRL_SAR_VREF_GEN_EN_CLR                               0xFFFFFDFF

#define ADC_ADC_ANA_TOP_CTRL_SAR_TEST_EN_SHIFT                                 8
#define ADC_ADC_ANA_TOP_CTRL_SAR_TEST_EN_MASK                                  0x00000100
#define ADC_ADC_ANA_TOP_CTRL_SAR_TEST_EN_SET(n)                                (((uint32_t)(n) << 8  ) & 0x00000100)
#define ADC_ADC_ANA_TOP_CTRL_SAR_TEST_EN_CLR                                   0xFFFFFEFF

#define ADC_ADC_ANA_TOP_CTRL_SAR_COMP_LP_SHIFT                                 7
#define ADC_ADC_ANA_TOP_CTRL_SAR_COMP_LP_MASK                                  0x00000080
#define ADC_ADC_ANA_TOP_CTRL_SAR_COMP_LP_SET(n)                                (((uint32_t)(n) << 7  ) & 0x00000080)
#define ADC_ADC_ANA_TOP_CTRL_SAR_COMP_LP_CLR                                   0xFFFFFF7F

#define ADC_ADC_ANA_TOP_CTRL_SAR_VCM_SEL_SHIFT                                 5
#define ADC_ADC_ANA_TOP_CTRL_SAR_VCM_SEL_MASK                                  0x00000060
#define ADC_ADC_ANA_TOP_CTRL_SAR_VCM_SEL_SET(n)                                (((uint32_t)(n) << 5  ) & 0x00000060)
#define ADC_ADC_ANA_TOP_CTRL_SAR_VCM_SEL_CLR                                   0xFFFFFF9F

#define ADC_ADC_ANA_TOP_CTRL_SAR_REFP_SEL_SHIFT                                3
#define ADC_ADC_ANA_TOP_CTRL_SAR_REFP_SEL_MASK                                 0x00000018
#define ADC_ADC_ANA_TOP_CTRL_SAR_REFP_SEL_SET(n)                               (((uint32_t)(n) << 3  ) & 0x00000018)
#define ADC_ADC_ANA_TOP_CTRL_SAR_REFP_SEL_CLR                                  0xFFFFFFE7

#define ADC_ADC_ANA_TOP_CTRL_SAR_REFN_SEL_SHIFT                                1
#define ADC_ADC_ANA_TOP_CTRL_SAR_REFN_SEL_MASK                                 0x00000006
#define ADC_ADC_ANA_TOP_CTRL_SAR_REFN_SEL_SET(n)                               (((uint32_t)(n) << 1  ) & 0x00000006)
#define ADC_ADC_ANA_TOP_CTRL_SAR_REFN_SEL_CLR                                  0xFFFFFFF9

#define ADC_ADC_ANA_TOP_CTRL_SAR_EN_SHIFT                                      0
#define ADC_ADC_ANA_TOP_CTRL_SAR_EN_MASK                                       0x00000001
#define ADC_ADC_ANA_TOP_CTRL_SAR_EN_SET(n)                                     (((uint32_t)(n) << 0  ) & 0x00000001)
#define ADC_ADC_ANA_TOP_CTRL_SAR_EN_CLR                                        0xFFFFFFFE

#define ADC_ADC_PGA_CTRL_CTRL_PGA_20_8_SHIFT                                   8
#define ADC_ADC_PGA_CTRL_CTRL_PGA_20_8_MASK                                    0x001FFF00
#define ADC_ADC_PGA_CTRL_CTRL_PGA_20_8_SET(n)                                  (((uint32_t)(n) << 8  ) & 0x001FFF00)
#define ADC_ADC_PGA_CTRL_CTRL_PGA_20_8_CLR                                     0xFFE000FF

#define ADC_ADC_PGA_CTRL_CTRL_PGA_CAL_EN_SHIFT                                 7
#define ADC_ADC_PGA_CTRL_CTRL_PGA_CAL_EN_MASK                                  0x00000080
#define ADC_ADC_PGA_CTRL_CTRL_PGA_CAL_EN_SET(n)                                (((uint32_t)(n) << 7  ) & 0x00000080)
#define ADC_ADC_PGA_CTRL_CTRL_PGA_CAL_EN_CLR                                   0xFFFFFF7F

#define ADC_ADC_PGA_CTRL_CTRL_PGA_EN_SHIFT                                     0
#define ADC_ADC_PGA_CTRL_CTRL_PGA_EN_MASK                                      0x00000001
#define ADC_ADC_PGA_CTRL_CTRL_PGA_EN_SET(n)                                    (((uint32_t)(n) << 0  ) & 0x00000001)
#define ADC_ADC_PGA_CTRL_CTRL_PGA_EN_CLR                                       0xFFFFFFFE

#define ADC_ADC_PGA_CHNL0_CTRL_PGA_STG2_GAIN_0_SHIFT                           27
#define ADC_ADC_PGA_CHNL0_CTRL_PGA_STG2_GAIN_0_MASK                            0x38000000
#define ADC_ADC_PGA_CHNL0_CTRL_PGA_STG2_GAIN_0_SET(n)                          (((uint32_t)(n) << 27 ) & 0x38000000)
#define ADC_ADC_PGA_CHNL0_CTRL_PGA_STG2_GAIN_0_CLR                             0xC7FFFFFF

#define ADC_ADC_PGA_CHNL0_CTRL_PGA_STG1_GAIN_0_SHIFT                           24
#define ADC_ADC_PGA_CHNL0_CTRL_PGA_STG1_GAIN_0_MASK                            0x07000000
#define ADC_ADC_PGA_CHNL0_CTRL_PGA_STG1_GAIN_0_SET(n)                          (((uint32_t)(n) << 24 ) & 0x07000000)
#define ADC_ADC_PGA_CHNL0_CTRL_PGA_STG1_GAIN_0_CLR                             0xF8FFFFFF

#define ADC_ADC_PGA_CHNL0_CTRL_IDAC2_CURRENT_DIR_0_SHIFT                       20
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC2_CURRENT_DIR_0_MASK                        0x00100000
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC2_CURRENT_DIR_0_SET(n)                      (((uint32_t)(n) << 20 ) & 0x00100000)
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC2_CURRENT_DIR_0_CLR                         0xFFEFFFFF

#define ADC_ADC_PGA_CHNL0_CTRL_IDAC2_CURRENT_0_SHIFT                           8
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC2_CURRENT_0_MASK                            0x000FFF00
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC2_CURRENT_0_SET(n)                          (((uint32_t)(n) << 8  ) & 0x000FFF00)
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC2_CURRENT_0_CLR                             0xFFF000FF

#define ADC_ADC_PGA_CHNL0_CTRL_IDAC1_CURRENT_DIR_0_SHIFT                       7
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC1_CURRENT_DIR_0_MASK                        0x00000080
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC1_CURRENT_DIR_0_SET(n)                      (((uint32_t)(n) << 7  ) & 0x00000080)
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC1_CURRENT_DIR_0_CLR                         0xFFFFFF7F

#define ADC_ADC_PGA_CHNL0_CTRL_IDAC1_CURRENT_0_SHIFT                           1
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC1_CURRENT_0_MASK                            0x0000007E
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC1_CURRENT_0_SET(n)                          (((uint32_t)(n) << 1  ) & 0x0000007E)
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC1_CURRENT_0_CLR                             0xFFFFFF81

#define ADC_ADC_PGA_CHNL0_CTRL_IDAC_EN_0_SHIFT                                 0
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC_EN_0_MASK                                  0x00000001
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC_EN_0_SET(n)                                (((uint32_t)(n) << 0  ) & 0x00000001)
#define ADC_ADC_PGA_CHNL0_CTRL_IDAC_EN_0_CLR                                   0xFFFFFFFE

#define ADC_ADC_PGA_CHNL1_CTRL_PGA_STG2_GAIN_1_SHIFT                           27
#define ADC_ADC_PGA_CHNL1_CTRL_PGA_STG2_GAIN_1_MASK                            0x38000000
#define ADC_ADC_PGA_CHNL1_CTRL_PGA_STG2_GAIN_1_SET(n)                          (((uint32_t)(n) << 27 ) & 0x38000000)
#define ADC_ADC_PGA_CHNL1_CTRL_PGA_STG2_GAIN_1_CLR                             0xC7FFFFFF

#define ADC_ADC_PGA_CHNL1_CTRL_PGA_STG1_GAIN_1_SHIFT                           24
#define ADC_ADC_PGA_CHNL1_CTRL_PGA_STG1_GAIN_1_MASK                            0x07000000
#define ADC_ADC_PGA_CHNL1_CTRL_PGA_STG1_GAIN_1_SET(n)                          (((uint32_t)(n) << 24 ) & 0x07000000)
#define ADC_ADC_PGA_CHNL1_CTRL_PGA_STG1_GAIN_1_CLR                             0xF8FFFFFF

#define ADC_ADC_PGA_CHNL1_CTRL_IDAC2_CURRENT_DIR_1_SHIFT                       20
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC2_CURRENT_DIR_1_MASK                        0x00100000
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC2_CURRENT_DIR_1_SET(n)                      (((uint32_t)(n) << 20 ) & 0x00100000)
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC2_CURRENT_DIR_1_CLR                         0xFFEFFFFF

#define ADC_ADC_PGA_CHNL1_CTRL_IDAC2_CURRENT_1_SHIFT                           8
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC2_CURRENT_1_MASK                            0x000FFF00
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC2_CURRENT_1_SET(n)                          (((uint32_t)(n) << 8  ) & 0x000FFF00)
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC2_CURRENT_1_CLR                             0xFFF000FF

#define ADC_ADC_PGA_CHNL1_CTRL_IDAC1_CURRENT_DIR_1_SHIFT                       7
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC1_CURRENT_DIR_1_MASK                        0x00000080
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC1_CURRENT_DIR_1_SET(n)                      (((uint32_t)(n) << 7  ) & 0x00000080)
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC1_CURRENT_DIR_1_CLR                         0xFFFFFF7F

#define ADC_ADC_PGA_CHNL1_CTRL_IDAC1_CURRENT_1_SHIFT                           1
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC1_CURRENT_1_MASK                            0x0000007E
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC1_CURRENT_1_SET(n)                          (((uint32_t)(n) << 1  ) & 0x0000007E)
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC1_CURRENT_1_CLR                             0xFFFFFF81

#define ADC_ADC_PGA_CHNL1_CTRL_IDAC_EN_1_SHIFT                                 0
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC_EN_1_MASK                                  0x00000001
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC_EN_1_SET(n)                                (((uint32_t)(n) << 0  ) & 0x00000001)
#define ADC_ADC_PGA_CHNL1_CTRL_IDAC_EN_1_CLR                                   0xFFFFFFFE

#define ADC_ADC_PGA_CHNL2_CTRL_PGA_STG2_GAIN_2_SHIFT                           27
#define ADC_ADC_PGA_CHNL2_CTRL_PGA_STG2_GAIN_2_MASK                            0x38000000
#define ADC_ADC_PGA_CHNL2_CTRL_PGA_STG2_GAIN_2_SET(n)                          (((uint32_t)(n) << 27 ) & 0x38000000)
#define ADC_ADC_PGA_CHNL2_CTRL_PGA_STG2_GAIN_2_CLR                             0xC7FFFFFF

#define ADC_ADC_PGA_CHNL2_CTRL_PGA_STG1_GAIN_2_SHIFT                           24
#define ADC_ADC_PGA_CHNL2_CTRL_PGA_STG1_GAIN_2_MASK                            0x07000000
#define ADC_ADC_PGA_CHNL2_CTRL_PGA_STG1_GAIN_2_SET(n)                          (((uint32_t)(n) << 24 ) & 0x07000000)
#define ADC_ADC_PGA_CHNL2_CTRL_PGA_STG1_GAIN_2_CLR                             0xF8FFFFFF

#define ADC_ADC_PGA_CHNL2_CTRL_IDAC2_CURRENT_DIR_2_SHIFT                       20
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC2_CURRENT_DIR_2_MASK                        0x00100000
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC2_CURRENT_DIR_2_SET(n)                      (((uint32_t)(n) << 20 ) & 0x00100000)
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC2_CURRENT_DIR_2_CLR                         0xFFEFFFFF

#define ADC_ADC_PGA_CHNL2_CTRL_IDAC2_CURRENT_2_SHIFT                           8
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC2_CURRENT_2_MASK                            0x000FFF00
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC2_CURRENT_2_SET(n)                          (((uint32_t)(n) << 8  ) & 0x000FFF00)
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC2_CURRENT_2_CLR                             0xFFF000FF

#define ADC_ADC_PGA_CHNL2_CTRL_IDAC1_CURRENT_DIR_2_SHIFT                       7
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC1_CURRENT_DIR_2_MASK                        0x00000080
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC1_CURRENT_DIR_2_SET(n)                      (((uint32_t)(n) << 7  ) & 0x00000080)
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC1_CURRENT_DIR_2_CLR                         0xFFFFFF7F

#define ADC_ADC_PGA_CHNL2_CTRL_IDAC1_CURRENT_2_SHIFT                           1
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC1_CURRENT_2_MASK                            0x0000007E
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC1_CURRENT_2_SET(n)                          (((uint32_t)(n) << 1  ) & 0x0000007E)
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC1_CURRENT_2_CLR                             0xFFFFFF81

#define ADC_ADC_PGA_CHNL2_CTRL_IDAC_EN_2_SHIFT                                 0
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC_EN_2_MASK                                  0x00000001
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC_EN_2_SET(n)                                (((uint32_t)(n) << 0  ) & 0x00000001)
#define ADC_ADC_PGA_CHNL2_CTRL_IDAC_EN_2_CLR                                   0xFFFFFFFE

#define ADC_ADC_PGA_CHNL3_CTRL_PGA_STG2_GAIN_3_SHIFT                           27
#define ADC_ADC_PGA_CHNL3_CTRL_PGA_STG2_GAIN_3_MASK                            0x38000000
#define ADC_ADC_PGA_CHNL3_CTRL_PGA_STG2_GAIN_3_SET(n)                          (((uint32_t)(n) << 27 ) & 0x38000000)
#define ADC_ADC_PGA_CHNL3_CTRL_PGA_STG2_GAIN_3_CLR                             0xC7FFFFFF

#define ADC_ADC_PGA_CHNL3_CTRL_PGA_STG1_GAIN_3_SHIFT                           24
#define ADC_ADC_PGA_CHNL3_CTRL_PGA_STG1_GAIN_3_MASK                            0x07000000
#define ADC_ADC_PGA_CHNL3_CTRL_PGA_STG1_GAIN_3_SET(n)                          (((uint32_t)(n) << 24 ) & 0x07000000)
#define ADC_ADC_PGA_CHNL3_CTRL_PGA_STG1_GAIN_3_CLR                             0xF8FFFFFF

#define ADC_ADC_PGA_CHNL3_CTRL_IDAC2_CURRENT_DIR_3_SHIFT                       20
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC2_CURRENT_DIR_3_MASK                        0x00100000
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC2_CURRENT_DIR_3_SET(n)                      (((uint32_t)(n) << 20 ) & 0x00100000)
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC2_CURRENT_DIR_3_CLR                         0xFFEFFFFF

#define ADC_ADC_PGA_CHNL3_CTRL_IDAC2_CURRENT_3_SHIFT                           8
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC2_CURRENT_3_MASK                            0x000FFF00
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC2_CURRENT_3_SET(n)                          (((uint32_t)(n) << 8  ) & 0x000FFF00)
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC2_CURRENT_3_CLR                             0xFFF000FF

#define ADC_ADC_PGA_CHNL3_CTRL_IDAC1_CURRENT_DIR_3_SHIFT                       7
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC1_CURRENT_DIR_3_MASK                        0x00000080
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC1_CURRENT_DIR_3_SET(n)                      (((uint32_t)(n) << 7  ) & 0x00000080)
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC1_CURRENT_DIR_3_CLR                         0xFFFFFF7F

#define ADC_ADC_PGA_CHNL3_CTRL_IDAC1_CURRENT_3_SHIFT                           1
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC1_CURRENT_3_MASK                            0x0000007E
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC1_CURRENT_3_SET(n)                          (((uint32_t)(n) << 1  ) & 0x0000007E)
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC1_CURRENT_3_CLR                             0xFFFFFF81

#define ADC_ADC_PGA_CHNL3_CTRL_IDAC_EN_3_SHIFT                                 0
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC_EN_3_MASK                                  0x00000001
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC_EN_3_SET(n)                                (((uint32_t)(n) << 0  ) & 0x00000001)
#define ADC_ADC_PGA_CHNL3_CTRL_IDAC_EN_3_CLR                                   0xFFFFFFFE

#define ADC_ADC_PGA_CHNL4_CTRL_PGA_STG2_GAIN_4_SHIFT                           27
#define ADC_ADC_PGA_CHNL4_CTRL_PGA_STG2_GAIN_4_MASK                            0x38000000
#define ADC_ADC_PGA_CHNL4_CTRL_PGA_STG2_GAIN_4_SET(n)                          (((uint32_t)(n) << 27 ) & 0x38000000)
#define ADC_ADC_PGA_CHNL4_CTRL_PGA_STG2_GAIN_4_CLR                             0xC7FFFFFF

#define ADC_ADC_PGA_CHNL4_CTRL_PGA_STG1_GAIN_4_SHIFT                           24
#define ADC_ADC_PGA_CHNL4_CTRL_PGA_STG1_GAIN_4_MASK                            0x07000000
#define ADC_ADC_PGA_CHNL4_CTRL_PGA_STG1_GAIN_4_SET(n)                          (((uint32_t)(n) << 24 ) & 0x07000000)
#define ADC_ADC_PGA_CHNL4_CTRL_PGA_STG1_GAIN_4_CLR                             0xF8FFFFFF

#define ADC_ADC_PGA_CHNL4_CTRL_IDAC2_CURRENT_DIR_4_SHIFT                       20
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC2_CURRENT_DIR_4_MASK                        0x00100000
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC2_CURRENT_DIR_4_SET(n)                      (((uint32_t)(n) << 20 ) & 0x00100000)
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC2_CURRENT_DIR_4_CLR                         0xFFEFFFFF

#define ADC_ADC_PGA_CHNL4_CTRL_IDAC2_CURRENT_4_SHIFT                           8
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC2_CURRENT_4_MASK                            0x000FFF00
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC2_CURRENT_4_SET(n)                          (((uint32_t)(n) << 8  ) & 0x000FFF00)
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC2_CURRENT_4_CLR                             0xFFF000FF

#define ADC_ADC_PGA_CHNL4_CTRL_IDAC1_CURRENT_DIR_4_SHIFT                       7
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC1_CURRENT_DIR_4_MASK                        0x00000080
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC1_CURRENT_DIR_4_SET(n)                      (((uint32_t)(n) << 7  ) & 0x00000080)
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC1_CURRENT_DIR_4_CLR                         0xFFFFFF7F

#define ADC_ADC_PGA_CHNL4_CTRL_IDAC1_CURRENT_4_SHIFT                           1
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC1_CURRENT_4_MASK                            0x0000007E
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC1_CURRENT_4_SET(n)                          (((uint32_t)(n) << 1  ) & 0x0000007E)
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC1_CURRENT_4_CLR                             0xFFFFFF81

#define ADC_ADC_PGA_CHNL4_CTRL_IDAC_EN_4_SHIFT                                 0
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC_EN_4_MASK                                  0x00000001
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC_EN_4_SET(n)                                (((uint32_t)(n) << 0  ) & 0x00000001)
#define ADC_ADC_PGA_CHNL4_CTRL_IDAC_EN_4_CLR                                   0xFFFFFFFE

#define ADC_ADC_PGA_CHNL5_CTRL_PGA_STG2_GAIN_5_SHIFT                           27
#define ADC_ADC_PGA_CHNL5_CTRL_PGA_STG2_GAIN_5_MASK                            0x38000000
#define ADC_ADC_PGA_CHNL5_CTRL_PGA_STG2_GAIN_5_SET(n)                          (((uint32_t)(n) << 27 ) & 0x38000000)
#define ADC_ADC_PGA_CHNL5_CTRL_PGA_STG2_GAIN_5_CLR                             0xC7FFFFFF

#define ADC_ADC_PGA_CHNL5_CTRL_PGA_STG1_GAIN_5_SHIFT                           24
#define ADC_ADC_PGA_CHNL5_CTRL_PGA_STG1_GAIN_5_MASK                            0x07000000
#define ADC_ADC_PGA_CHNL5_CTRL_PGA_STG1_GAIN_5_SET(n)                          (((uint32_t)(n) << 24 ) & 0x07000000)
#define ADC_ADC_PGA_CHNL5_CTRL_PGA_STG1_GAIN_5_CLR                             0xF8FFFFFF

#define ADC_ADC_PGA_CHNL5_CTRL_IDAC2_CURRENT_DIR_5_SHIFT                       20
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC2_CURRENT_DIR_5_MASK                        0x00100000
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC2_CURRENT_DIR_5_SET(n)                      (((uint32_t)(n) << 20 ) & 0x00100000)
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC2_CURRENT_DIR_5_CLR                         0xFFEFFFFF

#define ADC_ADC_PGA_CHNL5_CTRL_IDAC2_CURRENT_5_SHIFT                           8
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC2_CURRENT_5_MASK                            0x000FFF00
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC2_CURRENT_5_SET(n)                          (((uint32_t)(n) << 8  ) & 0x000FFF00)
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC2_CURRENT_5_CLR                             0xFFF000FF

#define ADC_ADC_PGA_CHNL5_CTRL_IDAC1_CURRENT_DIR_5_SHIFT                       7
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC1_CURRENT_DIR_5_MASK                        0x00000080
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC1_CURRENT_DIR_5_SET(n)                      (((uint32_t)(n) << 7  ) & 0x00000080)
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC1_CURRENT_DIR_5_CLR                         0xFFFFFF7F

#define ADC_ADC_PGA_CHNL5_CTRL_IDAC1_CURRENT_5_SHIFT                           1
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC1_CURRENT_5_MASK                            0x0000007E
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC1_CURRENT_5_SET(n)                          (((uint32_t)(n) << 1  ) & 0x0000007E)
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC1_CURRENT_5_CLR                             0xFFFFFF81

#define ADC_ADC_PGA_CHNL5_CTRL_IDAC_EN_5_SHIFT                                 0
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC_EN_5_MASK                                  0x00000001
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC_EN_5_SET(n)                                (((uint32_t)(n) << 0  ) & 0x00000001)
#define ADC_ADC_PGA_CHNL5_CTRL_IDAC_EN_5_CLR                                   0xFFFFFFFE

#define ADC_ADC_PGA_CHNL6_CTRL_PGA_STG2_GAIN_6_SHIFT                           27
#define ADC_ADC_PGA_CHNL6_CTRL_PGA_STG2_GAIN_6_MASK                            0x38000000
#define ADC_ADC_PGA_CHNL6_CTRL_PGA_STG2_GAIN_6_SET(n)                          (((uint32_t)(n) << 27 ) & 0x38000000)
#define ADC_ADC_PGA_CHNL6_CTRL_PGA_STG2_GAIN_6_CLR                             0xC7FFFFFF

#define ADC_ADC_PGA_CHNL6_CTRL_PGA_STG1_GAIN_6_SHIFT                           24
#define ADC_ADC_PGA_CHNL6_CTRL_PGA_STG1_GAIN_6_MASK                            0x07000000
#define ADC_ADC_PGA_CHNL6_CTRL_PGA_STG1_GAIN_6_SET(n)                          (((uint32_t)(n) << 24 ) & 0x07000000)
#define ADC_ADC_PGA_CHNL6_CTRL_PGA_STG1_GAIN_6_CLR                             0xF8FFFFFF

#define ADC_ADC_PGA_CHNL6_CTRL_IDAC2_CURRENT_DIR_6_SHIFT                       20
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC2_CURRENT_DIR_6_MASK                        0x00100000
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC2_CURRENT_DIR_6_SET(n)                      (((uint32_t)(n) << 20 ) & 0x00100000)
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC2_CURRENT_DIR_6_CLR                         0xFFEFFFFF

#define ADC_ADC_PGA_CHNL6_CTRL_IDAC2_CURRENT_6_SHIFT                           8
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC2_CURRENT_6_MASK                            0x000FFF00
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC2_CURRENT_6_SET(n)                          (((uint32_t)(n) << 8  ) & 0x000FFF00)
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC2_CURRENT_6_CLR                             0xFFF000FF

#define ADC_ADC_PGA_CHNL6_CTRL_IDAC1_CURRENT_DIR_6_SHIFT                       7
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC1_CURRENT_DIR_6_MASK                        0x00000080
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC1_CURRENT_DIR_6_SET(n)                      (((uint32_t)(n) << 7  ) & 0x00000080)
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC1_CURRENT_DIR_6_CLR                         0xFFFFFF7F

#define ADC_ADC_PGA_CHNL6_CTRL_IDAC1_CURRENT_6_SHIFT                           1
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC1_CURRENT_6_MASK                            0x0000007E
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC1_CURRENT_6_SET(n)                          (((uint32_t)(n) << 1  ) & 0x0000007E)
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC1_CURRENT_6_CLR                             0xFFFFFF81

#define ADC_ADC_PGA_CHNL6_CTRL_IDAC_EN_6_SHIFT                                 0
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC_EN_6_MASK                                  0x00000001
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC_EN_6_SET(n)                                (((uint32_t)(n) << 0  ) & 0x00000001)
#define ADC_ADC_PGA_CHNL6_CTRL_IDAC_EN_6_CLR                                   0xFFFFFFFE

#define ADC_ADC_PGA_CHNL7_CTRL_PGA_STG2_GAIN_7_SHIFT                           27
#define ADC_ADC_PGA_CHNL7_CTRL_PGA_STG2_GAIN_7_MASK                            0x38000000
#define ADC_ADC_PGA_CHNL7_CTRL_PGA_STG2_GAIN_7_SET(n)                          (((uint32_t)(n) << 27 ) & 0x38000000)
#define ADC_ADC_PGA_CHNL7_CTRL_PGA_STG2_GAIN_7_CLR                             0xC7FFFFFF

#define ADC_ADC_PGA_CHNL7_CTRL_PGA_STG1_GAIN_7_SHIFT                           24
#define ADC_ADC_PGA_CHNL7_CTRL_PGA_STG1_GAIN_7_MASK                            0x07000000
#define ADC_ADC_PGA_CHNL7_CTRL_PGA_STG1_GAIN_7_SET(n)                          (((uint32_t)(n) << 24 ) & 0x07000000)
#define ADC_ADC_PGA_CHNL7_CTRL_PGA_STG1_GAIN_7_CLR                             0xF8FFFFFF

#define ADC_ADC_PGA_CHNL7_CTRL_IDAC2_CURRENT_DIR_7_SHIFT                       20
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC2_CURRENT_DIR_7_MASK                        0x00100000
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC2_CURRENT_DIR_7_SET(n)                      (((uint32_t)(n) << 20 ) & 0x00100000)
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC2_CURRENT_DIR_7_CLR                         0xFFEFFFFF

#define ADC_ADC_PGA_CHNL7_CTRL_IDAC2_CURRENT_7_SHIFT                           8
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC2_CURRENT_7_MASK                            0x000FFF00
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC2_CURRENT_7_SET(n)                          (((uint32_t)(n) << 8  ) & 0x000FFF00)
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC2_CURRENT_7_CLR                             0xFFF000FF

#define ADC_ADC_PGA_CHNL7_CTRL_IDAC1_CURRENT_DIR_7_SHIFT                       7
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC1_CURRENT_DIR_7_MASK                        0x00000080
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC1_CURRENT_DIR_7_SET(n)                      (((uint32_t)(n) << 7  ) & 0x00000080)
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC1_CURRENT_DIR_7_CLR                         0xFFFFFF7F

#define ADC_ADC_PGA_CHNL7_CTRL_IDAC1_CURRENT_7_SHIFT                           1
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC1_CURRENT_7_MASK                            0x0000007E
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC1_CURRENT_7_SET(n)                          (((uint32_t)(n) << 1  ) & 0x0000007E)
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC1_CURRENT_7_CLR                             0xFFFFFF81

#define ADC_ADC_PGA_CHNL7_CTRL_IDAC_EN_7_SHIFT                                 0
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC_EN_7_MASK                                  0x00000001
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC_EN_7_SET(n)                                (((uint32_t)(n) << 0  ) & 0x00000001)
#define ADC_ADC_PGA_CHNL7_CTRL_IDAC_EN_7_CLR                                   0xFFFFFFFE

#define ADC_TRIM_ADSAR_VALUE0_SARADC_TRIM_VAL1_SHIFT                           16
#define ADC_TRIM_ADSAR_VALUE0_SARADC_TRIM_VAL1_MASK                            0xFFFF0000
#define ADC_TRIM_ADSAR_VALUE0_SARADC_TRIM_VAL1_SET(n)                          (((uint32_t)(n) << 16 ) & 0xFFFF0000)
#define ADC_TRIM_ADSAR_VALUE0_SARADC_TRIM_VAL1_CLR                             0x0000FFFF

#define ADC_TRIM_ADSAR_VALUE0_SARADC_TRIM_VAL0_SHIFT                           0
#define ADC_TRIM_ADSAR_VALUE0_SARADC_TRIM_VAL0_MASK                            0x0000FFFF
#define ADC_TRIM_ADSAR_VALUE0_SARADC_TRIM_VAL0_SET(n)                          (((uint32_t)(n) << 0  ) & 0x0000FFFF)
#define ADC_TRIM_ADSAR_VALUE0_SARADC_TRIM_VAL0_CLR                             0xFFFF0000

#define ADC_TRIM_ADSAR_VALUE1_SARADC_TRIM_VAL3_SHIFT                           16
#define ADC_TRIM_ADSAR_VALUE1_SARADC_TRIM_VAL3_MASK                            0xFFFF0000
#define ADC_TRIM_ADSAR_VALUE1_SARADC_TRIM_VAL3_SET(n)                          (((uint32_t)(n) << 16 ) & 0xFFFF0000)
#define ADC_TRIM_ADSAR_VALUE1_SARADC_TRIM_VAL3_CLR                             0x0000FFFF

#define ADC_TRIM_ADSAR_VALUE1_SARADC_TRIM_VAL2_SHIFT                           0
#define ADC_TRIM_ADSAR_VALUE1_SARADC_TRIM_VAL2_MASK                            0x0000FFFF
#define ADC_TRIM_ADSAR_VALUE1_SARADC_TRIM_VAL2_SET(n)                          (((uint32_t)(n) << 0  ) & 0x0000FFFF)
#define ADC_TRIM_ADSAR_VALUE1_SARADC_TRIM_VAL2_CLR                             0xFFFF0000

#define ADC_TRIM_ADSAR_VALUE2_SARADC_TRIM_VAL5_SHIFT                           16
#define ADC_TRIM_ADSAR_VALUE2_SARADC_TRIM_VAL5_MASK                            0xFFFF0000
#define ADC_TRIM_ADSAR_VALUE2_SARADC_TRIM_VAL5_SET(n)                          (((uint32_t)(n) << 16 ) & 0xFFFF0000)
#define ADC_TRIM_ADSAR_VALUE2_SARADC_TRIM_VAL5_CLR                             0x0000FFFF

#define ADC_TRIM_ADSAR_VALUE2_SARADC_TRIM_VAL4_SHIFT                           0
#define ADC_TRIM_ADSAR_VALUE2_SARADC_TRIM_VAL4_MASK                            0x0000FFFF
#define ADC_TRIM_ADSAR_VALUE2_SARADC_TRIM_VAL4_SET(n)                          (((uint32_t)(n) << 0  ) & 0x0000FFFF)
#define ADC_TRIM_ADSAR_VALUE2_SARADC_TRIM_VAL4_CLR                             0xFFFF0000

#define ADC_TRIM_ADSAR_VALUE3_SARADC_TRIM_VAL7_SHIFT                           16
#define ADC_TRIM_ADSAR_VALUE3_SARADC_TRIM_VAL7_MASK                            0xFFFF0000
#define ADC_TRIM_ADSAR_VALUE3_SARADC_TRIM_VAL7_SET(n)                          (((uint32_t)(n) << 16 ) & 0xFFFF0000)
#define ADC_TRIM_ADSAR_VALUE3_SARADC_TRIM_VAL7_CLR                             0x0000FFFF

#define ADC_TRIM_ADSAR_VALUE3_SARADC_TRIM_VAL6_SHIFT                           0
#define ADC_TRIM_ADSAR_VALUE3_SARADC_TRIM_VAL6_MASK                            0x0000FFFF
#define ADC_TRIM_ADSAR_VALUE3_SARADC_TRIM_VAL6_SET(n)                          (((uint32_t)(n) << 0  ) & 0x0000FFFF)
#define ADC_TRIM_ADSAR_VALUE3_SARADC_TRIM_VAL6_CLR                             0xFFFF0000

#define ADC_TRIM_ADSAR_VALUE4_SARADC_TRIM_VAL9_SHIFT                           16
#define ADC_TRIM_ADSAR_VALUE4_SARADC_TRIM_VAL9_MASK                            0xFFFF0000
#define ADC_TRIM_ADSAR_VALUE4_SARADC_TRIM_VAL9_SET(n)                          (((uint32_t)(n) << 16 ) & 0xFFFF0000)
#define ADC_TRIM_ADSAR_VALUE4_SARADC_TRIM_VAL9_CLR                             0x0000FFFF

#define ADC_TRIM_ADSAR_VALUE4_SARADC_TRIM_VAL8_SHIFT                           0
#define ADC_TRIM_ADSAR_VALUE4_SARADC_TRIM_VAL8_MASK                            0x0000FFFF
#define ADC_TRIM_ADSAR_VALUE4_SARADC_TRIM_VAL8_SET(n)                          (((uint32_t)(n) << 0  ) & 0x0000FFFF)
#define ADC_TRIM_ADSAR_VALUE4_SARADC_TRIM_VAL8_CLR                             0xFFFF0000

#define ADC_TRIM_ADSAR_VALUE5_SARADC_TRIM_VAL11_SHIFT                          16
#define ADC_TRIM_ADSAR_VALUE5_SARADC_TRIM_VAL11_MASK                           0xFFFF0000
#define ADC_TRIM_ADSAR_VALUE5_SARADC_TRIM_VAL11_SET(n)                         (((uint32_t)(n) << 16 ) & 0xFFFF0000)
#define ADC_TRIM_ADSAR_VALUE5_SARADC_TRIM_VAL11_CLR                            0x0000FFFF

#define ADC_TRIM_ADSAR_VALUE5_SARADC_TRIM_VAL10_SHIFT                          0
#define ADC_TRIM_ADSAR_VALUE5_SARADC_TRIM_VAL10_MASK                           0x0000FFFF
#define ADC_TRIM_ADSAR_VALUE5_SARADC_TRIM_VAL10_SET(n)                         (((uint32_t)(n) << 0  ) & 0x0000FFFF)
#define ADC_TRIM_ADSAR_VALUE5_SARADC_TRIM_VAL10_CLR                            0xFFFF0000

#define ADC_TRIM_ADSAR_VALUE6_SARADC_TRIM_VAL13_SHIFT                          16
#define ADC_TRIM_ADSAR_VALUE6_SARADC_TRIM_VAL13_MASK                           0xFFFF0000
#define ADC_TRIM_ADSAR_VALUE6_SARADC_TRIM_VAL13_SET(n)                         (((uint32_t)(n) << 16 ) & 0xFFFF0000)
#define ADC_TRIM_ADSAR_VALUE6_SARADC_TRIM_VAL13_CLR                            0x0000FFFF

#define ADC_TRIM_ADSAR_VALUE6_SARADC_TRIM_VAL12_SHIFT                          0
#define ADC_TRIM_ADSAR_VALUE6_SARADC_TRIM_VAL12_MASK                           0x0000FFFF
#define ADC_TRIM_ADSAR_VALUE6_SARADC_TRIM_VAL12_SET(n)                         (((uint32_t)(n) << 0  ) & 0x0000FFFF)
#define ADC_TRIM_ADSAR_VALUE6_SARADC_TRIM_VAL12_CLR                            0xFFFF0000

#define ADC_TRIM_ADSAR_VALUE7_SARADC_TRIM_VAL15_SHIFT                          16
#define ADC_TRIM_ADSAR_VALUE7_SARADC_TRIM_VAL15_MASK                           0xFFFF0000
#define ADC_TRIM_ADSAR_VALUE7_SARADC_TRIM_VAL15_SET(n)                         (((uint32_t)(n) << 16 ) & 0xFFFF0000)
#define ADC_TRIM_ADSAR_VALUE7_SARADC_TRIM_VAL15_CLR                            0x0000FFFF

#define ADC_TRIM_ADSAR_VALUE7_SARADC_TRIM_VAL14_SHIFT                          0
#define ADC_TRIM_ADSAR_VALUE7_SARADC_TRIM_VAL14_MASK                           0x0000FFFF
#define ADC_TRIM_ADSAR_VALUE7_SARADC_TRIM_VAL14_SET(n)                         (((uint32_t)(n) << 0  ) & 0x0000FFFF)
#define ADC_TRIM_ADSAR_VALUE7_SARADC_TRIM_VAL14_CLR                            0xFFFF0000

#define ADC_TRIM_ADSAR_VALUE8_SARADC_TRIM_VAL16_SHIFT                          0
#define ADC_TRIM_ADSAR_VALUE8_SARADC_TRIM_VAL16_MASK                           0x0000FFFF
#define ADC_TRIM_ADSAR_VALUE8_SARADC_TRIM_VAL16_SET(n)                         (((uint32_t)(n) << 0  ) & 0x0000FFFF)
#define ADC_TRIM_ADSAR_VALUE8_SARADC_TRIM_VAL16_CLR                            0xFFFF0000

#define ADC_TRIM_ADSAR_COEFF0_SARADC_COEFF_B_SHIFT                             16
#define ADC_TRIM_ADSAR_COEFF0_SARADC_COEFF_B_MASK                              0x0FFF0000
#define ADC_TRIM_ADSAR_COEFF0_SARADC_COEFF_B_SET(n)                            (((uint32_t)(n) << 16 ) & 0x0FFF0000)
#define ADC_TRIM_ADSAR_COEFF0_SARADC_COEFF_B_CLR                               0xF000FFFF

#define ADC_TRIM_ADSAR_COEFF0_SARADC_COEFF_A_SHIFT                             0
#define ADC_TRIM_ADSAR_COEFF0_SARADC_COEFF_A_MASK                              0x00000FFF
#define ADC_TRIM_ADSAR_COEFF0_SARADC_COEFF_A_SET(n)                            (((uint32_t)(n) << 0  ) & 0x00000FFF)
#define ADC_TRIM_ADSAR_COEFF0_SARADC_COEFF_A_CLR                               0xFFFFF000

#define ADC_TRIM_ADSAR_COEFF1_SARADC_COEFF_D_SHIFT                             16
#define ADC_TRIM_ADSAR_COEFF1_SARADC_COEFF_D_MASK                              0x0FFF0000
#define ADC_TRIM_ADSAR_COEFF1_SARADC_COEFF_D_SET(n)                            (((uint32_t)(n) << 16 ) & 0x0FFF0000)
#define ADC_TRIM_ADSAR_COEFF1_SARADC_COEFF_D_CLR                               0xF000FFFF

#define ADC_TRIM_ADSAR_COEFF1_SARADC_COEFF_C_SHIFT                             0
#define ADC_TRIM_ADSAR_COEFF1_SARADC_COEFF_C_MASK                              0x00000FFF
#define ADC_TRIM_ADSAR_COEFF1_SARADC_COEFF_C_SET(n)                            (((uint32_t)(n) << 0  ) & 0x00000FFF)
#define ADC_TRIM_ADSAR_COEFF1_SARADC_COEFF_C_CLR                               0xFFFFF000

// Register Structure Definition
typedef struct
{
    __IO uint32_t FIFO_RDATA               : 32 ; // 31 : 0 
} ADC_ADC_FIFO_DATA_FIELD_T;

typedef struct
{
    __IO uint32_t ENTRY_VALID              : 3  ; // 2  : 0 
    __IO uint32_t RESERVED0                : 29 ; // 31 : 3 
} ADC_ADC_FIFO_STATE_FIELD_T;

typedef struct
{
    __IO uint32_t IMR                      : 5  ; // 4  : 0 
    __IO uint32_t RESERVED0                : 27 ; // 31 : 5 
} ADC_ADC_IMR_FIELD_T;

typedef struct
{
    __IO uint32_t ICR                      : 5  ; // 4  : 0 
    __IO uint32_t RESERVED0                : 27 ; // 31 : 5 
} ADC_ADC_ICR_FIELD_T;

typedef struct
{
    __IO uint32_t ISR                      : 5  ; // 4  : 0 
    __IO uint32_t RESERVED0                : 27 ; // 31 : 5 
} ADC_ADC_ISR_FIELD_T;

typedef struct
{
    __IO uint32_t IRSR                     : 5  ; // 4  : 0 
    __IO uint32_t RESERVED0                : 27 ; // 31 : 5 
} ADC_ADC_IRSR_FIELD_T;

typedef struct
{
    __IO uint32_t SW_START                 : 1  ; // 0  : 0 
    __IO uint32_t DMA_EN                   : 1  ; // 1  : 1 
    __IO uint32_t TRIG_EN                  : 1  ; // 2  : 2 
    __IO uint32_t RESERVED1                : 1  ; // 3  : 3 
    __IO uint32_t IRQ_MODE                 : 3  ; // 6  : 4 
    __IO uint32_t RESERVED0                : 1  ; // 7  : 7 
    __IO uint32_t FIFO_FORMAT              : 2  ; // 9  : 8 
    __IO uint32_t FIFO_THRHLD              : 2  ; // 11 : 10 
    __IO uint32_t CH_PAIR_SEL              : 4  ; // 15 : 12
    /*
    __IO uint32_t CH_PAIR0_EN              : 1  ; // 12 : 12 
    __IO uint32_t CH_PAIR1_EN              : 1  ; // 13 : 13 
    __IO uint32_t CH_PAIR2_EN              : 1  ; // 14 : 14 
    __IO uint32_t CH_PAIR3_EN              : 1  ; // 15 : 15 
    */
    __IO uint32_t TW_TRIG_NUM              : 16 ; // 31 : 16 
} ADC_ADC_CONF0_FIELD_T;

typedef struct
{
    __IO uint32_t SCAN_CHNUM               : 3  ; // 2  : 0 
    __IO uint32_t TRIG_NUM                 : 3  ; // 5  : 3 
    __IO uint32_t CHNL_SAMP_NUM            : 5  ; // 10 : 6 
    __IO uint32_t CHNL_SAMP_NUM_DUMMY      : 3  ; // 13 : 11 
    __IO uint32_t CHNL_AVG_EN              : 1  ; // 14 : 14 
    __IO uint32_t AUTO_CHNL_SEL            : 1  ; // 15 : 15 
    __IO uint32_t WAIT_CYCLE               : 6  ; // 21 : 16 
    __IO uint32_t SMP_CYCLE                : 10 ; // 31 : 22 
} ADC_ADC_CONF1_FIELD_T;

typedef struct
{
    __IO uint32_t SAR_INITCYCLE            : 10 ; // 9  : 0 
    __IO uint32_t RESERVED1                : 6  ; // 15 : 10 
    __IO uint32_t PGA_INITCYCLE            : 10 ; // 25 : 16 
    __IO uint32_t RESERVED0                : 6  ; // 31 : 26 
} ADC_ADC_CONF2_FIELD_T;

typedef struct
{
    __IO uint32_t CH_PAIR0                 : 8  ; // 7  : 0 
    __IO uint32_t CH_PAIR1                 : 8  ; // 15 : 8 
    __IO uint32_t CH_PAIR2                 : 8  ; // 23 : 16 
    __IO uint32_t CH_PAIR3                 : 8  ; // 31 : 24 
} ADC_ADC_CONF_PAIR_FIELD_T;

typedef struct
{
    __IO uint32_t CMP_BOTTOM               : 14 ; // 13 : 0 
    __IO uint32_t RESERVED1                : 2  ; // 15 : 14 
    __IO uint32_t CMP_CEILING              : 14 ; // 29 : 16 
    __IO uint32_t RESERVED0                : 2  ; // 31 : 30 
} ADC_ADC_CONF_COMP_FIELD_T;

typedef struct
{
    __IO uint32_t RAW_OUT17                : 17 ; // 16 : 0 
    __IO uint32_t RESERVED0                : 15 ; // 31 : 17 
} ADC_ADC_RAW_OUT_FIELD_T;

typedef struct
{
    __IO uint32_t IRQ_COMP_STATUS          : 31 ; // 30 : 0 
    __IO uint32_t RESERVED0                : 1  ; // 31 : 31 
} ADC_ADC_IRQ_STATUS_FIELD_T;

typedef struct
{
    __IO uint32_t CTRL_SAR_EN              : 1  ; // 0  : 0 
    __IO uint32_t CTRL_SAR_REFN_SEL        : 2  ; // 2  : 1 
    __IO uint32_t CTRL_SAR_REFP_SEL        : 2  ; // 4  : 3 
    __IO uint32_t CTRL_SAR_VCM_SEL         : 2  ; // 6  : 5 
    __IO uint32_t CTRL_SAR_COMP_LP         : 1  ; // 7  : 7 
    __IO uint32_t CTRL_SAR_TEST_EN         : 1  ; // 8  : 8 
    __IO uint32_t CTRL_SAR_VREF_GEN_EN     : 1  ; // 9  : 9 
    __IO uint32_t CTRL_SAR_BUF_VREFP_EN    : 1  ; // 10 : 10 
    __IO uint32_t CTRL_SAR_VREFP_VOL_SEL   : 1  ; // 11 : 11 
    __IO uint32_t CTRL_SAR_TEST_LDO_EN     : 1  ; // 12 : 12 
    __IO uint32_t CTRL_SAR_TEST_VREFP_EN   : 1  ; // 13 : 13 
    __IO uint32_t CTRL_SAR_15_14           : 2  ; // 15 : 14 
    __IO uint32_t CTRL_SAR_MUX_PGA         : 2  ; // 17 : 16 
    __IO uint32_t RESERVED0                : 6  ; // 23 : 18 
    __IO uint32_t CTRL_SAR_MUX_INP         : 4  ; // 27 : 24
    __IO uint32_t CTRL_SAR_MUX_INN         : 4  ; // 31 : 28 
} ADC_ADC_ANA_TOP_FIELD_T;

typedef struct
{
    __IO uint32_t CTRL_PGA_EN              : 1  ; // 0  : 0 
    __IO uint32_t RESERVED1                : 6  ; // 6  : 1 
    __IO uint32_t CTRL_PGA_CAL_EN          : 1  ; // 7  : 7 
    __IO uint32_t CTRL_PGA_20_8            : 13 ; // 20 : 8 
    __IO uint32_t RESERVED0                : 11 ; // 31 : 21 
} ADC_ADC_PGA_CTRL_FIELD_T;

typedef struct
{
    __IO uint32_t CTRL_IDAC_EN             : 1  ; // 0  : 0 
    __IO uint32_t CTRL_IDAC1_CURRENT       : 6  ; // 6  : 1 
    __IO uint32_t CTRL_IDAC1_CURRENT_DIR   : 1  ; // 7  : 7 
    __IO uint32_t CTRL_IDAC2_CURRENT       : 12 ; // 19 : 8 
    __IO uint32_t CTRL_IDAC2_CURRENT_DIR   : 1  ; // 20 : 20 
    __IO uint32_t RESERVED1                : 3  ; // 23 : 21 
    __IO uint32_t CTRL_PGA_STG1_GAIN       : 3  ; // 26 : 24 
    __IO uint32_t CTRL_PGA_STG2_GAIN       : 3  ; // 29 : 27 
    __IO uint32_t RESERVED0                : 2  ; // 31 : 30 
} ADC_ADC_PGA_CHNL_FIELD_T;
/*
typedef struct
{
    __IO uint32_t CTRL_IDAC_EN_0           : 1  ; // 0  : 0 
    __IO uint32_t CTRL_IDAC1_CURRENT_0     : 6  ; // 6  : 1 
    __IO uint32_t CTRL_IDAC1_CURRENT_DIR_0 : 1  ; // 7  : 7 
    __IO uint32_t CTRL_IDAC2_CURRENT_0     : 12 ; // 19 : 8 
    __IO uint32_t CTRL_IDAC2_CURRENT_DIR_0 : 1  ; // 20 : 20 
    __IO uint32_t RESERVED1                : 3  ; // 23 : 21 
    __IO uint32_t CTRL_PGA_STG1_GAIN_0     : 3  ; // 26 : 24 
    __IO uint32_t CTRL_PGA_STG2_GAIN_0     : 3  ; // 29 : 27 
    __IO uint32_t RESERVED0                : 2  ; // 31 : 30 
} ADC_ADC_PGA_CHNL0_FIELD_T;

typedef struct
{
    __IO uint32_t CTRL_IDAC_EN_1           : 1  ; // 0  : 0 
    __IO uint32_t CTRL_IDAC1_CURRENT_1     : 6  ; // 6  : 1 
    __IO uint32_t CTRL_IDAC1_CURRENT_DIR_1 : 1  ; // 7  : 7 
    __IO uint32_t CTRL_IDAC2_CURRENT_1     : 12 ; // 19 : 8 
    __IO uint32_t CTRL_IDAC2_CURRENT_DIR_1 : 1  ; // 20 : 20 
    __IO uint32_t RESERVED1                : 3  ; // 23 : 21 
    __IO uint32_t CTRL_PGA_STG1_GAIN_1     : 3  ; // 26 : 24 
    __IO uint32_t CTRL_PGA_STG2_GAIN_1     : 3  ; // 29 : 27 
    __IO uint32_t RESERVED0                : 2  ; // 31 : 30 
} ADC_ADC_PGA_CHNL1_FIELD_T;

typedef struct
{
    __IO uint32_t CTRL_IDAC_EN_2           : 1  ; // 0  : 0 
    __IO uint32_t CTRL_IDAC1_CURRENT_2     : 6  ; // 6  : 1 
    __IO uint32_t CTRL_IDAC1_CURRENT_DIR_2 : 1  ; // 7  : 7 
    __IO uint32_t CTRL_IDAC2_CURRENT_2     : 12 ; // 19 : 8 
    __IO uint32_t CTRL_IDAC2_CURRENT_DIR_2 : 1  ; // 20 : 20 
    __IO uint32_t RESERVED1                : 3  ; // 23 : 21 
    __IO uint32_t CTRL_PGA_STG1_GAIN_2     : 3  ; // 26 : 24 
    __IO uint32_t CTRL_PGA_STG2_GAIN_2     : 3  ; // 29 : 27 
    __IO uint32_t RESERVED0                : 2  ; // 31 : 30 
} ADC_ADC_PGA_CHNL2_FIELD_T;

typedef struct
{
    __IO uint32_t CTRL_IDAC_EN_3           : 1  ; // 0  : 0 
    __IO uint32_t CTRL_IDAC1_CURRENT_3     : 6  ; // 6  : 1 
    __IO uint32_t CTRL_IDAC1_CURRENT_DIR_3 : 1  ; // 7  : 7 
    __IO uint32_t CTRL_IDAC2_CURRENT_3     : 12 ; // 19 : 8 
    __IO uint32_t CTRL_IDAC2_CURRENT_DIR_3 : 1  ; // 20 : 20 
    __IO uint32_t RESERVED1                : 3  ; // 23 : 21 
    __IO uint32_t CTRL_PGA_STG1_GAIN_3     : 3  ; // 26 : 24 
    __IO uint32_t CTRL_PGA_STG2_GAIN_3     : 3  ; // 29 : 27 
    __IO uint32_t RESERVED0                : 2  ; // 31 : 30 
} ADC_ADC_PGA_CHNL3_FIELD_T;

typedef struct
{
    __IO uint32_t CTRL_IDAC_EN_4           : 1  ; // 0  : 0 
    __IO uint32_t CTRL_IDAC1_CURRENT_4     : 6  ; // 6  : 1 
    __IO uint32_t CTRL_IDAC1_CURRENT_DIR_4 : 1  ; // 7  : 7 
    __IO uint32_t CTRL_IDAC2_CURRENT_4     : 12 ; // 19 : 8 
    __IO uint32_t CTRL_IDAC2_CURRENT_DIR_4 : 1  ; // 20 : 20 
    __IO uint32_t RESERVED1                : 3  ; // 23 : 21 
    __IO uint32_t CTRL_PGA_STG1_GAIN_4     : 3  ; // 26 : 24 
    __IO uint32_t CTRL_PGA_STG2_GAIN_4     : 3  ; // 29 : 27 
    __IO uint32_t RESERVED0                : 2  ; // 31 : 30 
} ADC_ADC_PGA_CHNL4_FIELD_T;

typedef struct
{
    __IO uint32_t CTRL_IDAC_EN_5           : 1  ; // 0  : 0 
    __IO uint32_t CTRL_IDAC1_CURRENT_5     : 6  ; // 6  : 1 
    __IO uint32_t CTRL_IDAC1_CURRENT_DIR_5 : 1  ; // 7  : 7 
    __IO uint32_t CTRL_IDAC2_CURRENT_5     : 12 ; // 19 : 8 
    __IO uint32_t CTRL_IDAC2_CURRENT_DIR_5 : 1  ; // 20 : 20 
    __IO uint32_t RESERVED1                : 3  ; // 23 : 21 
    __IO uint32_t CTRL_PGA_STG1_GAIN_5     : 3  ; // 26 : 24 
    __IO uint32_t CTRL_PGA_STG2_GAIN_5     : 3  ; // 29 : 27 
    __IO uint32_t RESERVED0                : 2  ; // 31 : 30 
} ADC_ADC_PGA_CHNL5_FIELD_T;

typedef struct
{
    __IO uint32_t CTRL_IDAC_EN_6           : 1  ; // 0  : 0 
    __IO uint32_t CTRL_IDAC1_CURRENT_6     : 6  ; // 6  : 1 
    __IO uint32_t CTRL_IDAC1_CURRENT_DIR_6 : 1  ; // 7  : 7 
    __IO uint32_t CTRL_IDAC2_CURRENT_6     : 12 ; // 19 : 8 
    __IO uint32_t CTRL_IDAC2_CURRENT_DIR_6 : 1  ; // 20 : 20 
    __IO uint32_t RESERVED1                : 3  ; // 23 : 21 
    __IO uint32_t CTRL_PGA_STG1_GAIN_6     : 3  ; // 26 : 24 
    __IO uint32_t CTRL_PGA_STG2_GAIN_6     : 3  ; // 29 : 27 
    __IO uint32_t RESERVED0                : 2  ; // 31 : 30 
} ADC_ADC_PGA_CHNL6_FIELD_T;

typedef struct
{
    __IO uint32_t CTRL_IDAC_EN_7           : 1  ; // 0  : 0 
    __IO uint32_t CTRL_IDAC1_CURRENT_7     : 6  ; // 6  : 1 
    __IO uint32_t CTRL_IDAC1_CURRENT_DIR_7 : 1  ; // 7  : 7 
    __IO uint32_t CTRL_IDAC2_CURRENT_7     : 12 ; // 19 : 8 
    __IO uint32_t CTRL_IDAC2_CURRENT_DIR_7 : 1  ; // 20 : 20 
    __IO uint32_t RESERVED1                : 3  ; // 23 : 21 
    __IO uint32_t CTRL_PGA_STG1_GAIN_7     : 3  ; // 26 : 24 
    __IO uint32_t CTRL_PGA_STG2_GAIN_7     : 3  ; // 29 : 27 
    __IO uint32_t RESERVED0                : 2  ; // 31 : 30 
} ADC_ADC_PGA_CHNL7_FIELD_T;
*/
typedef struct
{
    __IO uint32_t SARADC_TRIM_VAL0         : 16 ; // 15 : 0 
    __IO uint32_t SARADC_TRIM_VAL1         : 16 ; // 31 : 16 
} ADC_TRIM_ADSAR_VALUE0_FIELD_T;

typedef struct
{
    __IO uint32_t SARADC_TRIM_VAL2         : 16 ; // 15 : 0 
    __IO uint32_t SARADC_TRIM_VAL3         : 16 ; // 31 : 16 
} ADC_TRIM_ADSAR_VALUE1_FIELD_T;

typedef struct
{
    __IO uint32_t SARADC_TRIM_VAL4         : 16 ; // 15 : 0 
    __IO uint32_t SARADC_TRIM_VAL5         : 16 ; // 31 : 16 
} ADC_TRIM_ADSAR_VALUE2_FIELD_T;

typedef struct
{
    __IO uint32_t SARADC_TRIM_VAL6         : 16 ; // 15 : 0 
    __IO uint32_t SARADC_TRIM_VAL7         : 16 ; // 31 : 16 
} ADC_TRIM_ADSAR_VALUE3_FIELD_T;

typedef struct
{
    __IO uint32_t SARADC_TRIM_VAL8         : 16 ; // 15 : 0 
    __IO uint32_t SARADC_TRIM_VAL9         : 16 ; // 31 : 16 
} ADC_TRIM_ADSAR_VALUE4_FIELD_T;

typedef struct
{
    __IO uint32_t SARADC_TRIM_VAL10        : 16 ; // 15 : 0 
    __IO uint32_t SARADC_TRIM_VAL11        : 16 ; // 31 : 16 
} ADC_TRIM_ADSAR_VALUE5_FIELD_T;

typedef struct
{
    __IO uint32_t SARADC_TRIM_VAL12        : 16 ; // 15 : 0 
    __IO uint32_t SARADC_TRIM_VAL13        : 16 ; // 31 : 16 
} ADC_TRIM_ADSAR_VALUE6_FIELD_T;

typedef struct
{
    __IO uint32_t SARADC_TRIM_VAL14        : 16 ; // 15 : 0 
    __IO uint32_t SARADC_TRIM_VAL15        : 16 ; // 31 : 16 
} ADC_TRIM_ADSAR_VALUE7_FIELD_T;

typedef struct
{
    __IO uint32_t SARADC_TRIM_VAL16        : 16 ; // 15 : 0 
    __IO uint32_t RESERVED0                : 16 ; // 31 : 16 
} ADC_TRIM_ADSAR_VALUE8_FIELD_T;

typedef struct
{
    __IO uint32_t SARADC_COEFF_A           : 12 ; // 11 : 0 
    __IO uint32_t RESERVED1                : 4  ; // 15 : 12 
    __IO uint32_t SARADC_COEFF_B           : 12 ; // 27 : 16 
    __IO uint32_t RESERVED0                : 4  ; // 31 : 28 
} ADC_TRIM_ADSAR_COEFF0_FIELD_T;

typedef struct
{
    __IO uint32_t SARADC_COEFF_C           : 12 ; // 11 : 0 
    __IO uint32_t RESERVED1                : 4  ; // 15 : 12 
    __IO uint32_t SARADC_COEFF_D           : 12 ; // 27 : 16 
    __IO uint32_t RESERVED0                : 4  ; // 31 : 28 
} ADC_TRIM_ADSAR_COEFF1_FIELD_T;

// Register Map Structure Definition
typedef struct
{
    union 
    { 
        __IO  uint32_t ADC_FIFO_DATA                         ; // 0x0000
        ADC_ADC_FIFO_DATA_FIELD_T ADC_FIFO_DATA_F            ;
    };

    union 
    { 
        __IO  uint32_t ADC_FIFO_STATE                        ; // 0x0004
        ADC_ADC_FIFO_STATE_FIELD_T ADC_FIFO_STATE_F          ;
    };

    union 
    { 
        __IO  uint32_t ADC_IMR                               ; // 0x0008
        ADC_ADC_IMR_FIELD_T ADC_IMR_F                        ;
    };

    union 
    { 
        __IO  uint32_t ADC_ICR                               ; // 0x000C
        ADC_ADC_ICR_FIELD_T ADC_ICR_F                        ;
    };

    union 
    { 
        __IO  uint32_t ADC_ISR                               ; // 0x0010
        ADC_ADC_ISR_FIELD_T ADC_ISR_F                        ;
    };

    union 
    { 
        __IO  uint32_t ADC_IRSR                              ; // 0x0014
        ADC_ADC_IRSR_FIELD_T ADC_IRSR_F                      ;
    };

    union 
    { 
        __IO  uint32_t ADC_CONF0                             ; // 0x0018
        ADC_ADC_CONF0_FIELD_T ADC_CONF0_F                    ;
    };

    union 
    { 
        __IO  uint32_t ADC_CONF1                             ; // 0x001C
        ADC_ADC_CONF1_FIELD_T ADC_CONF1_F                    ;
    };

    union 
    { 
        __IO  uint32_t ADC_CONF2                             ; // 0x0020
        ADC_ADC_CONF2_FIELD_T ADC_CONF2_F                    ;
    };

    union 
    { 
        __IO  uint32_t ADC_CONF_PAIR                         ; // 0x0024
        ADC_ADC_CONF_PAIR_FIELD_T ADC_CONF_PAIR_F            ;
    };

    union 
    { 
        __IO  uint32_t ADC_CONF_COMP                         ; // 0x0028
        ADC_ADC_CONF_COMP_FIELD_T ADC_CONF_COMP_F            ;
    };

    union 
    { 
        __IO  uint32_t ADC_RAW_OUT                           ; // 0x002C
        ADC_ADC_RAW_OUT_FIELD_T ADC_RAW_OUT_F                ;
    };

    union 
    { 
        __IO  uint32_t ADC_IRQ_STATUS                        ; // 0x0030
        ADC_ADC_IRQ_STATUS_FIELD_T ADC_IRQ_STATUS_F          ;
    };

    union 
    { 
        __IO  uint32_t ADC_ANA_TOP                           ; // 0x0034
        ADC_ADC_ANA_TOP_FIELD_T ADC_ANA_TOP_F                ;
    };

    union 
    { 
        __IO  uint32_t ADC_PGA_CTRL                          ; // 0x0038
        ADC_ADC_PGA_CTRL_FIELD_T ADC_PGA_CTRL_F              ;
    };

    union 
    { 
        __IO  uint32_t ADC_PGA_CHNL0                         ; // 0x003C
        ADC_ADC_PGA_CHNL_FIELD_T ADC_PGA_CHNL0_F            ;
    };

    union 
    { 
        __IO  uint32_t ADC_PGA_CHNL1                         ; // 0x0040
        ADC_ADC_PGA_CHNL_FIELD_T ADC_PGA_CHNL1_F            ;
    };

    union 
    { 
        __IO  uint32_t ADC_PGA_CHNL2                         ; // 0x0044
        ADC_ADC_PGA_CHNL_FIELD_T ADC_PGA_CHNL2_F             ;
    };

    union 
    { 
        __IO  uint32_t ADC_PGA_CHNL3                         ; // 0x0048
        ADC_ADC_PGA_CHNL_FIELD_T ADC_PGA_CHNL3_F             ;
    };

    union 
    { 
        __IO  uint32_t ADC_PGA_CHNL4                         ; // 0x004C
        ADC_ADC_PGA_CHNL_FIELD_T ADC_PGA_CHNL4_F             ;
    };

    union 
    { 
        __IO  uint32_t ADC_PGA_CHNL5                         ; // 0x0050
        ADC_ADC_PGA_CHNL_FIELD_T ADC_PGA_CHNL5_F             ;
    };

    union 
    { 
        __IO  uint32_t ADC_PGA_CHNL6                         ; // 0x0054
        ADC_ADC_PGA_CHNL_FIELD_T ADC_PGA_CHNL6_F             ;
    };

    union 
    { 
        __IO  uint32_t ADC_PGA_CHNL7                         ; // 0x0058
        ADC_ADC_PGA_CHNL_FIELD_T ADC_PGA_CHNL7_F             ;
    };

    uint32_t RESERVED0[41]                                    ;

    union 
    { 
        __IO  uint32_t TRIM_ADSAR_VALUE0                     ; // 0x0100
        ADC_TRIM_ADSAR_VALUE0_FIELD_T TRIM_ADSAR_VALUE0_F    ;
    };

    union 
    { 
        __IO  uint32_t TRIM_ADSAR_VALUE1                     ; // 0x0104
        ADC_TRIM_ADSAR_VALUE1_FIELD_T TRIM_ADSAR_VALUE1_F    ;
    };

    union 
    { 
        __IO  uint32_t TRIM_ADSAR_VALUE2                     ; // 0x0108
        ADC_TRIM_ADSAR_VALUE2_FIELD_T TRIM_ADSAR_VALUE2_F    ;
    };

    union 
    { 
        __IO  uint32_t TRIM_ADSAR_VALUE3                     ; // 0x010C
        ADC_TRIM_ADSAR_VALUE3_FIELD_T TRIM_ADSAR_VALUE3_F    ;
    };

    union 
    { 
        __IO  uint32_t TRIM_ADSAR_VALUE4                     ; // 0x0110
        ADC_TRIM_ADSAR_VALUE4_FIELD_T TRIM_ADSAR_VALUE4_F    ;
    };

    union 
    { 
        __IO  uint32_t TRIM_ADSAR_VALUE5                     ; // 0x0114
        ADC_TRIM_ADSAR_VALUE5_FIELD_T TRIM_ADSAR_VALUE5_F    ;
    };

    union 
    { 
        __IO  uint32_t TRIM_ADSAR_VALUE6                     ; // 0x0118
        ADC_TRIM_ADSAR_VALUE6_FIELD_T TRIM_ADSAR_VALUE6_F    ;
    };

    union 
    { 
        __IO  uint32_t TRIM_ADSAR_VALUE7                     ; // 0x011C
        ADC_TRIM_ADSAR_VALUE7_FIELD_T TRIM_ADSAR_VALUE7_F    ;
    };

    union 
    { 
        __IO  uint32_t TRIM_ADSAR_VALUE8                     ; // 0x0120
        ADC_TRIM_ADSAR_VALUE8_FIELD_T TRIM_ADSAR_VALUE8_F    ;
    };

    union 
    { 
        __IO  uint32_t TRIM_ADSAR_COEFF0                     ; // 0x0124
        ADC_TRIM_ADSAR_COEFF0_FIELD_T TRIM_ADSAR_COEFF0_F    ;
    };

    union 
    { 
        __IO  uint32_t TRIM_ADSAR_COEFF1                     ; // 0x0128
        ADC_TRIM_ADSAR_COEFF1_FIELD_T TRIM_ADSAR_COEFF1_F    ;
    };

} ADC_REG_TypeDef;

#endif
