//----------------------------------------------------------------------
//         COPYRIGHT (C) 2022 TINYCHIP SEMICONDUCTOR                    
    //              CONFIDENTIAL & ALL RIGHTS RESERVED                      
//----------------------------------------------------------------------
// File name      : print_uart_reg_def.h                                
// Author         : mfpan                                               
// E-Mail         : mfpan@tinychip.com.cn                               
//----------------------------------------------------------------------
// Description    :                                                     
// Register Header File of PRINT_UART                                
//----------------------------------------------------------------------
// Reversion History:                                                   
// 2022-10-21 17:24:13 -- automatically generated by reg_gen.pl Revision 1.11          
//----------------------------------------------------------------------

#ifndef   PRINT_UART_DEF_H__
#define   PRINT_UART_DEF_H__

// Register Offset Macro Definition
#define PRINT_UART_TX_DATA_OFFSET                               0x0000
#define PRINT_UART_PRESCALE_OFFSET                              0x0004
#define PRINT_UART_STATUS_OFFSET                                0x0008

// Register Address Macro Definition
#define PRINT_UART_TX_DATA_ADDR                                 ( PRINT_UART_BASE_ADDR + PRINT_UART_TX_DATA_OFFSET)
#define PRINT_UART_PRESCALE_ADDR                                ( PRINT_UART_BASE_ADDR + PRINT_UART_PRESCALE_OFFSET)
#define PRINT_UART_STATUS_ADDR                                  ( PRINT_UART_BASE_ADDR + PRINT_UART_STATUS_OFFSET)

// Register Field Macro Definition
#define PRINT_UART_TX_DATA_TX_DATA_SHIFT                            0
#define PRINT_UART_TX_DATA_TX_DATA_MASK                             0x000000FF
#define PRINT_UART_TX_DATA_TX_DATA_SET(n)                           (((uint32_t)(n) << 0  ) & 0x000000FF)
#define PRINT_UART_TX_DATA_TX_DATA_CLR                              0xFFFFFF00

#define PRINT_UART_PRESCALE_PRESCALE_SHIFT                          0
#define PRINT_UART_PRESCALE_PRESCALE_MASK                           0x00000FFF
#define PRINT_UART_PRESCALE_PRESCALE_SET(n)                         (((uint32_t)(n) << 0  ) & 0x00000FFF)
#define PRINT_UART_PRESCALE_PRESCALE_CLR                            0xFFFFF000

#define PRINT_UART_STATUS_TX_BUSY_SHIFT                             0
#define PRINT_UART_STATUS_TX_BUSY_MASK                              0x00000001
#define PRINT_UART_STATUS_TX_BUSY_SET(n)                            (((uint32_t)(n) << 0  ) & 0x00000001)
#define PRINT_UART_STATUS_TX_BUSY_CLR                               0xFFFFFFFE

// Register Structure Definition
typedef struct
{
    __IO uint32_t TX_DATA         : 8  ; // 7  : 0 
    __IO uint32_t RESERVED0       : 24 ; // 31 : 8 
} PRINT_UART_TX_DATA_FIELD_T;

typedef struct
{
    __IO uint32_t PRESCALE        : 12 ; // 11 : 0 
    __IO uint32_t RESERVED0       : 20 ; // 31 : 12 
} PRINT_UART_PRESCALE_FIELD_T;

typedef struct
{
    __IO uint32_t TX_BUSY         : 1  ; // 0  : 0 
    __IO uint32_t RESERVED0       : 31 ; // 31 : 1 
} PRINT_UART_STATUS_FIELD_T;

// Register Map Structure Definition
typedef struct
{
    union 
    { 
        __IO  uint32_t TX_DATA             ; // 0x0000
        PRINT_UART_TX_DATA_FIELD_T TX_DATA_F;
    };

    union 
    { 
        __IO  uint32_t PRESCALE            ; // 0x0004
        PRINT_UART_PRESCALE_FIELD_T PRESCALE_F;
    };

    union 
    { 
        __IO  uint32_t STATUS              ; // 0x0008
        PRINT_UART_STATUS_FIELD_T STATUS_F ;
    };

} PRINT_UART_REG_TypeDef;

#endif
