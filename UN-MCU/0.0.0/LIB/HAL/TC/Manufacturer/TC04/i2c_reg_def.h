//----------------------------------------------------------------------
//         COPYRIGHT (C) 2022 TINYCHIP SEMICONDUCTOR                    
    //              CONFIDENTIAL & ALL RIGHTS RESERVED                      
//----------------------------------------------------------------------
// File name      : i2c_reg_def.h                                       
// Author         : mfpan                                               
// E-Mail         : mfpan@tinychip.com.cn                               
//----------------------------------------------------------------------
// Description    :                                                     
// Register Header File of I2C                                       
//----------------------------------------------------------------------
// Reversion History:                                                   
// 2022-10-21 17:24:12 -- automatically generated by reg_gen.pl Revision 1.11          
//----------------------------------------------------------------------

#ifndef   I2C_DEF_H__
#define   I2C_DEF_H__

// Register Offset Macro Definition
#define I2C_MCR_OFFSET                                          0x0000
#define I2C_SCR_OFFSET                                          0x0004
#define I2C_SAR_OFFSET                                          0x0008
#define I2C_TPR_OFFSET                                          0x000C
#define I2C_TRDR_OFFSET                                         0x0010
#define I2C_TOR_OFFSET                                          0x0014
#define I2C_STR_OFFSET                                          0x0018
#define I2C_FSR_OFFSET                                          0x001C
#define I2C_IMR_OFFSET                                          0x0020
#define I2C_ICR_OFFSET                                          0x0024
#define I2C_ISR_OFFSET                                          0x0028
#define I2C_IRSR_OFFSET                                         0x002C

// Register Address Macro Definition
#define I2C_MCR_ADDR                                            ( I2C_BASE_ADDR + I2C_MCR_OFFSET)
#define I2C_SCR_ADDR                                            ( I2C_BASE_ADDR + I2C_SCR_OFFSET)
#define I2C_SAR_ADDR                                            ( I2C_BASE_ADDR + I2C_SAR_OFFSET)
#define I2C_TPR_ADDR                                            ( I2C_BASE_ADDR + I2C_TPR_OFFSET)
#define I2C_TRDR_ADDR                                           ( I2C_BASE_ADDR + I2C_TRDR_OFFSET)
#define I2C_TOR_ADDR                                            ( I2C_BASE_ADDR + I2C_TOR_OFFSET)
#define I2C_STR_ADDR                                            ( I2C_BASE_ADDR + I2C_STR_OFFSET)
#define I2C_FSR_ADDR                                            ( I2C_BASE_ADDR + I2C_FSR_OFFSET)
#define I2C_IMR_ADDR                                            ( I2C_BASE_ADDR + I2C_IMR_OFFSET)
#define I2C_ICR_ADDR                                            ( I2C_BASE_ADDR + I2C_ICR_OFFSET)
#define I2C_ISR_ADDR                                            ( I2C_BASE_ADDR + I2C_ISR_OFFSET)
#define I2C_IRSR_ADDR                                           ( I2C_BASE_ADDR + I2C_IRSR_OFFSET)

// Register Field Macro Definition
#define I2C_MCR_RX_FIFO_THRESHOLD_SHIFT                            20
#define I2C_MCR_RX_FIFO_THRESHOLD_MASK                             0x00F00000
#define I2C_MCR_RX_FIFO_THRESHOLD_SET(n)                           (((uint32_t)(n) << 20 ) & 0x00F00000)
#define I2C_MCR_RX_FIFO_THRESHOLD_CLR                              0xFF0FFFFF

#define I2C_MCR_TX_FIFO_THRESHOLD_SHIFT                            16
#define I2C_MCR_TX_FIFO_THRESHOLD_MASK                             0x000F0000
#define I2C_MCR_TX_FIFO_THRESHOLD_SET(n)                           (((uint32_t)(n) << 16 ) & 0x000F0000)
#define I2C_MCR_TX_FIFO_THRESHOLD_CLR                              0xFFF0FFFF

#define I2C_MCR_DISABLE_MASTER_SHIFT                               8
#define I2C_MCR_DISABLE_MASTER_MASK                                0x00000100
#define I2C_MCR_DISABLE_MASTER_SET(n)                              (((uint32_t)(n) << 8  ) & 0x00000100)
#define I2C_MCR_DISABLE_MASTER_CLR                                 0xFFFFFEFF

#define I2C_MCR_AUTOCG_EN_SHIFT                                    7
#define I2C_MCR_AUTOCG_EN_MASK                                     0x00000080
#define I2C_MCR_AUTOCG_EN_SET(n)                                   (((uint32_t)(n) << 7  ) & 0x00000080)
#define I2C_MCR_AUTOCG_EN_CLR                                      0xFFFFFF7F

#define I2C_MCR_AGGRESSIVE_MASTER_SHIFT                            6
#define I2C_MCR_AGGRESSIVE_MASTER_MASK                             0x00000040
#define I2C_MCR_AGGRESSIVE_MASTER_SET(n)                           (((uint32_t)(n) << 6  ) & 0x00000040)
#define I2C_MCR_AGGRESSIVE_MASTER_CLR                              0xFFFFFFBF

#define I2C_MCR_RX_DMA_EN_SHIFT                                    5
#define I2C_MCR_RX_DMA_EN_MASK                                     0x00000020
#define I2C_MCR_RX_DMA_EN_SET(n)                                   (((uint32_t)(n) << 5  ) & 0x00000020)
#define I2C_MCR_RX_DMA_EN_CLR                                      0xFFFFFFDF

#define I2C_MCR_TX_DMA_EN_SHIFT                                    4
#define I2C_MCR_TX_DMA_EN_MASK                                     0x00000010
#define I2C_MCR_TX_DMA_EN_SET(n)                                   (((uint32_t)(n) << 4  ) & 0x00000010)
#define I2C_MCR_TX_DMA_EN_CLR                                      0xFFFFFFEF

#define I2C_MCR_CONTROL_MODE_SHIFT                                 3
#define I2C_MCR_CONTROL_MODE_MASK                                  0x00000008
#define I2C_MCR_CONTROL_MODE_SET(n)                                (((uint32_t)(n) << 3  ) & 0x00000008)
#define I2C_MCR_CONTROL_MODE_CLR                                   0xFFFFFFF7

#define I2C_MCR_START_BYTE_EN_SHIFT                                2
#define I2C_MCR_START_BYTE_EN_MASK                                 0x00000004
#define I2C_MCR_START_BYTE_EN_SET(n)                               (((uint32_t)(n) << 2  ) & 0x00000004)
#define I2C_MCR_START_BYTE_EN_CLR                                  0xFFFFFFFB

#define I2C_MCR_DISABLE_SCL_STRETCH_SHIFT                          1
#define I2C_MCR_DISABLE_SCL_STRETCH_MASK                           0x00000002
#define I2C_MCR_DISABLE_SCL_STRETCH_SET(n)                         (((uint32_t)(n) << 1  ) & 0x00000002)
#define I2C_MCR_DISABLE_SCL_STRETCH_CLR                            0xFFFFFFFD

#define I2C_MCR_I2C_EN_SHIFT                                       0
#define I2C_MCR_I2C_EN_MASK                                        0x00000001
#define I2C_MCR_I2C_EN_SET(n)                                      (((uint32_t)(n) << 0  ) & 0x00000001)
#define I2C_MCR_I2C_EN_CLR                                         0xFFFFFFFE

#define I2C_SCR_BYTE_NUM_SHIFT                                     23
#define I2C_SCR_BYTE_NUM_MASK                                      0xFF800000
#define I2C_SCR_BYTE_NUM_SET(n)                                    (((uint32_t)(n) << 23 ) & 0xFF800000)
#define I2C_SCR_BYTE_NUM_CLR                                       0x007FFFFF

#define I2C_SCR_BYTE_NUM_UNKNOWN_SHIFT                             22
#define I2C_SCR_BYTE_NUM_UNKNOWN_MASK                              0x00400000
#define I2C_SCR_BYTE_NUM_UNKNOWN_SET(n)                            (((uint32_t)(n) << 22 ) & 0x00400000)
#define I2C_SCR_BYTE_NUM_UNKNOWN_CLR                               0xFFBFFFFF

#define I2C_SCR_FLUSH_RX_FIFO_SHIFT                                21
#define I2C_SCR_FLUSH_RX_FIFO_MASK                                 0x00200000
#define I2C_SCR_FLUSH_RX_FIFO_SET(n)                               (((uint32_t)(n) << 21 ) & 0x00200000)
#define I2C_SCR_FLUSH_RX_FIFO_CLR                                  0xFFDFFFFF

#define I2C_SCR_FLUSH_TX_FIFO_SHIFT                                20
#define I2C_SCR_FLUSH_TX_FIFO_MASK                                 0x00100000
#define I2C_SCR_FLUSH_TX_FIFO_SET(n)                               (((uint32_t)(n) << 20 ) & 0x00100000)
#define I2C_SCR_FLUSH_TX_FIFO_CLR                                  0xFFEFFFFF

#define I2C_SCR_ACK_VALUE_SHIFT                                    19
#define I2C_SCR_ACK_VALUE_MASK                                     0x00080000
#define I2C_SCR_ACK_VALUE_SET(n)                                   (((uint32_t)(n) << 19 ) & 0x00080000)
#define I2C_SCR_ACK_VALUE_CLR                                      0xFFF7FFFF

#define I2C_SCR_ACK_SHIFT                                          18
#define I2C_SCR_ACK_MASK                                           0x00040000
#define I2C_SCR_ACK_SET(n)                                         (((uint32_t)(n) << 18 ) & 0x00040000)
#define I2C_SCR_ACK_CLR                                            0xFFFBFFFF

#define I2C_SCR_STOP_SHIFT                                         17
#define I2C_SCR_STOP_MASK                                          0x00020000
#define I2C_SCR_STOP_SET(n)                                        (((uint32_t)(n) << 17 ) & 0x00020000)
#define I2C_SCR_STOP_CLR                                           0xFFFDFFFF

#define I2C_SCR_RESTART_SHIFT                                      16
#define I2C_SCR_RESTART_MASK                                       0x00010000
#define I2C_SCR_RESTART_SET(n)                                     (((uint32_t)(n) << 16 ) & 0x00010000)
#define I2C_SCR_RESTART_CLR                                        0xFFFEFFFF

#define I2C_SCR_START_SHIFT                                        15
#define I2C_SCR_START_MASK                                         0x00008000
#define I2C_SCR_START_SET(n)                                       (((uint32_t)(n) << 15 ) & 0x00008000)
#define I2C_SCR_START_CLR                                          0xFFFF7FFF

#define I2C_SCR_TARGET_RWN_SHIFT                                   14
#define I2C_SCR_TARGET_RWN_MASK                                    0x00004000
#define I2C_SCR_TARGET_RWN_SET(n)                                  (((uint32_t)(n) << 14 ) & 0x00004000)
#define I2C_SCR_TARGET_RWN_CLR                                     0xFFFFBFFF

#define I2C_SCR_TARGET_SLAVE_ADDR_MODE_SHIFT                       13
#define I2C_SCR_TARGET_SLAVE_ADDR_MODE_MASK                        0x00002000
#define I2C_SCR_TARGET_SLAVE_ADDR_MODE_SET(n)                      (((uint32_t)(n) << 13 ) & 0x00002000)
#define I2C_SCR_TARGET_SLAVE_ADDR_MODE_CLR                         0xFFFFDFFF

#define I2C_SCR_TARGET_SLAVE_ADDR_SHIFT                            0
#define I2C_SCR_TARGET_SLAVE_ADDR_MASK                             0x000003FF
#define I2C_SCR_TARGET_SLAVE_ADDR_SET(n)                           (((uint32_t)(n) << 0  ) & 0x000003FF)
#define I2C_SCR_TARGET_SLAVE_ADDR_CLR                              0xFFFFFC00

#define I2C_SAR_GENERAL_CALL_EN_SHIFT                              16
#define I2C_SAR_GENERAL_CALL_EN_MASK                               0x00010000
#define I2C_SAR_GENERAL_CALL_EN_SET(n)                             (((uint32_t)(n) << 16 ) & 0x00010000)
#define I2C_SAR_GENERAL_CALL_EN_CLR                                0xFFFEFFFF

#define I2C_SAR_SLAVE_ADDR_MODE_SHIFT                              13
#define I2C_SAR_SLAVE_ADDR_MODE_MASK                               0x00002000
#define I2C_SAR_SLAVE_ADDR_MODE_SET(n)                             (((uint32_t)(n) << 13 ) & 0x00002000)
#define I2C_SAR_SLAVE_ADDR_MODE_CLR                                0xFFFFDFFF

#define I2C_SAR_SLAVE_ADDR_EN_SHIFT                                12
#define I2C_SAR_SLAVE_ADDR_EN_MASK                                 0x00001000
#define I2C_SAR_SLAVE_ADDR_EN_SET(n)                               (((uint32_t)(n) << 12 ) & 0x00001000)
#define I2C_SAR_SLAVE_ADDR_EN_CLR                                  0xFFFFEFFF

#define I2C_SAR_SLAVE_ADDR_SHIFT                                   0
#define I2C_SAR_SLAVE_ADDR_MASK                                    0x000003FF
#define I2C_SAR_SLAVE_ADDR_SET(n)                                  (((uint32_t)(n) << 0  ) & 0x000003FF)
#define I2C_SAR_SLAVE_ADDR_CLR                                     0xFFFFFC00

#define I2C_TPR_SPIKE_FILTER_CNUM_SHIFT                            24
#define I2C_TPR_SPIKE_FILTER_CNUM_MASK                             0x0F000000
#define I2C_TPR_SPIKE_FILTER_CNUM_SET(n)                           (((uint32_t)(n) << 24 ) & 0x0F000000)
#define I2C_TPR_SPIKE_FILTER_CNUM_CLR                              0xF0FFFFFF

#define I2C_TPR_SDA_HOLD_TIME_SHIFT                                20
#define I2C_TPR_SDA_HOLD_TIME_MASK                                 0x00700000
#define I2C_TPR_SDA_HOLD_TIME_SET(n)                               (((uint32_t)(n) << 20 ) & 0x00700000)
#define I2C_TPR_SDA_HOLD_TIME_CLR                                  0xFF8FFFFF

#define I2C_TPR_SDA_SETUP_TIME_SHIFT                               16
#define I2C_TPR_SDA_SETUP_TIME_MASK                                0x00070000
#define I2C_TPR_SDA_SETUP_TIME_SET(n)                              (((uint32_t)(n) << 16 ) & 0x00070000)
#define I2C_TPR_SDA_SETUP_TIME_CLR                                 0xFFF8FFFF

#define I2C_TPR_SCLH_SHIFT                                         8
#define I2C_TPR_SCLH_MASK                                          0x0000FF00
#define I2C_TPR_SCLH_SET(n)                                        (((uint32_t)(n) << 8  ) & 0x0000FF00)
#define I2C_TPR_SCLH_CLR                                           0xFFFF00FF

#define I2C_TPR_SCLL_SHIFT                                         0
#define I2C_TPR_SCLL_MASK                                          0x000000FF
#define I2C_TPR_SCLL_SET(n)                                        (((uint32_t)(n) << 0  ) & 0x000000FF)
#define I2C_TPR_SCLL_CLR                                           0xFFFFFF00

#define I2C_TRDR_TX_DATA_RX_DATA_SHIFT                             0
#define I2C_TRDR_TX_DATA_RX_DATA_MASK                              0x000000FF
#define I2C_TRDR_TX_DATA_RX_DATA_SET(n)                            (((uint32_t)(n) << 0  ) & 0x000000FF)
#define I2C_TRDR_TX_DATA_RX_DATA_CLR                               0xFFFFFF00

#define I2C_TOR_SCL_STRETCH_TIMEOUT_TIME_SHIFT                     16
#define I2C_TOR_SCL_STRETCH_TIMEOUT_TIME_MASK                      0x03FF0000
#define I2C_TOR_SCL_STRETCH_TIMEOUT_TIME_SET(n)                    (((uint32_t)(n) << 16 ) & 0x03FF0000)
#define I2C_TOR_SCL_STRETCH_TIMEOUT_TIME_CLR                       0xFC00FFFF

#define I2C_TOR_WAIT_IDLE_TIMEOUT_TIME_SHIFT                       0
#define I2C_TOR_WAIT_IDLE_TIMEOUT_TIME_MASK                        0x000003FF
#define I2C_TOR_WAIT_IDLE_TIMEOUT_TIME_SET(n)                      (((uint32_t)(n) << 0  ) & 0x000003FF)
#define I2C_TOR_WAIT_IDLE_TIMEOUT_TIME_CLR                         0xFFFFFC00

#define I2C_STR_TXRX_DATA_NUM_SHIFT                                16
#define I2C_STR_TXRX_DATA_NUM_MASK                                 0x01FF0000
#define I2C_STR_TXRX_DATA_NUM_SET(n)                               (((uint32_t)(n) << 16 ) & 0x01FF0000)
#define I2C_STR_TXRX_DATA_NUM_CLR                                  0xFE00FFFF

#define I2C_STR_SLAVE_RWN_SHIFT                                    10
#define I2C_STR_SLAVE_RWN_MASK                                     0x00000400
#define I2C_STR_SLAVE_RWN_SET(n)                                   (((uint32_t)(n) << 10 ) & 0x00000400)
#define I2C_STR_SLAVE_RWN_CLR                                      0xFFFFFBFF

#define I2C_STR_SLAVE_ADDRESSED_IND_SHIFT                          9
#define I2C_STR_SLAVE_ADDRESSED_IND_MASK                           0x00000200
#define I2C_STR_SLAVE_ADDRESSED_IND_SET(n)                         (((uint32_t)(n) << 9  ) & 0x00000200)
#define I2C_STR_SLAVE_ADDRESSED_IND_CLR                            0xFFFFFDFF

#define I2C_STR_SLAVE_ADDRESSED_FLAG_SHIFT                         8
#define I2C_STR_SLAVE_ADDRESSED_FLAG_MASK                          0x00000100
#define I2C_STR_SLAVE_ADDRESSED_FLAG_SET(n)                        (((uint32_t)(n) << 8  ) & 0x00000100)
#define I2C_STR_SLAVE_ADDRESSED_FLAG_CLR                           0xFFFFFEFF

#define I2C_STR_DATA_PHASE_SHIFT                                   2
#define I2C_STR_DATA_PHASE_MASK                                    0x00000004
#define I2C_STR_DATA_PHASE_SET(n)                                  (((uint32_t)(n) << 2  ) & 0x00000004)
#define I2C_STR_DATA_PHASE_CLR                                     0xFFFFFFFB

#define I2C_STR_ADDRESS_PHASE_SHIFT                                1
#define I2C_STR_ADDRESS_PHASE_MASK                                 0x00000002
#define I2C_STR_ADDRESS_PHASE_SET(n)                               (((uint32_t)(n) << 1  ) & 0x00000002)
#define I2C_STR_ADDRESS_PHASE_CLR                                  0xFFFFFFFD

#define I2C_STR_BUSY_SHIFT                                         0
#define I2C_STR_BUSY_MASK                                          0x00000001
#define I2C_STR_BUSY_SET(n)                                        (((uint32_t)(n) << 0  ) & 0x00000001)
#define I2C_STR_BUSY_CLR                                           0xFFFFFFFE

#define I2C_FSR_RX_FIFO_DATA_NUM_SHIFT                             8
#define I2C_FSR_RX_FIFO_DATA_NUM_MASK                              0x00001F00
#define I2C_FSR_RX_FIFO_DATA_NUM_SET(n)                            (((uint32_t)(n) << 8  ) & 0x00001F00)
#define I2C_FSR_RX_FIFO_DATA_NUM_CLR                               0xFFFFE0FF

#define I2C_FSR_TX_FIFO_FREE_NUM_SHIFT                             0
#define I2C_FSR_TX_FIFO_FREE_NUM_MASK                              0x0000001F
#define I2C_FSR_TX_FIFO_FREE_NUM_SET(n)                            (((uint32_t)(n) << 0  ) & 0x0000001F)
#define I2C_FSR_TX_FIFO_FREE_NUM_CLR                               0xFFFFFFE0

#define I2C_IMR_DETECT_REPEAT_START_SHIFT                          19
#define I2C_IMR_DETECT_REPEAT_START_MASK                           0x00080000
#define I2C_IMR_DETECT_REPEAT_START_SET(n)                         (((uint32_t)(n) << 19 ) & 0x00080000)
#define I2C_IMR_DETECT_REPEAT_START_CLR                            0xFFF7FFFF

#define I2C_IMR_DETECT_START_SHIFT                                 18
#define I2C_IMR_DETECT_START_MASK                                  0x00040000
#define I2C_IMR_DETECT_START_SET(n)                                (((uint32_t)(n) << 18 ) & 0x00040000)
#define I2C_IMR_DETECT_START_CLR                                   0xFFFBFFFF

#define I2C_IMR_DEDICATE_POINT_SHIFT                               17
#define I2C_IMR_DEDICATE_POINT_MASK                                0x00020000
#define I2C_IMR_DEDICATE_POINT_SET(n)                              (((uint32_t)(n) << 17 ) & 0x00020000)
#define I2C_IMR_DEDICATE_POINT_CLR                                 0xFFFDFFFF

#define I2C_IMR_STRETCH_SCL_TIMEOUT_SHIFT                          16
#define I2C_IMR_STRETCH_SCL_TIMEOUT_MASK                           0x00010000
#define I2C_IMR_STRETCH_SCL_TIMEOUT_SET(n)                         (((uint32_t)(n) << 16 ) & 0x00010000)
#define I2C_IMR_STRETCH_SCL_TIMEOUT_CLR                            0xFFFEFFFF

#define I2C_IMR_WAIT_FOR_BUS_IDLE_TIMEOUT_SHIFT                    15
#define I2C_IMR_WAIT_FOR_BUS_IDLE_TIMEOUT_MASK                     0x00008000
#define I2C_IMR_WAIT_FOR_BUS_IDLE_TIMEOUT_SET(n)                   (((uint32_t)(n) << 15 ) & 0x00008000)
#define I2C_IMR_WAIT_FOR_BUS_IDLE_TIMEOUT_CLR                      0xFFFF7FFF

#define I2C_IMR_WAIT_RX_FIFO_SHIFT                                 14
#define I2C_IMR_WAIT_RX_FIFO_MASK                                  0x00004000
#define I2C_IMR_WAIT_RX_FIFO_SET(n)                                (((uint32_t)(n) << 14 ) & 0x00004000)
#define I2C_IMR_WAIT_RX_FIFO_CLR                                   0xFFFFBFFF

#define I2C_IMR_WAIT_TX_FIFO_SHIFT                                 13
#define I2C_IMR_WAIT_TX_FIFO_MASK                                  0x00002000
#define I2C_IMR_WAIT_TX_FIFO_SET(n)                                (((uint32_t)(n) << 13 ) & 0x00002000)
#define I2C_IMR_WAIT_TX_FIFO_CLR                                   0xFFFFDFFF

#define I2C_IMR_ARBITRATATION_LOST_SHIFT                           12
#define I2C_IMR_ARBITRATATION_LOST_MASK                            0x00001000
#define I2C_IMR_ARBITRATATION_LOST_SET(n)                          (((uint32_t)(n) << 12 ) & 0x00001000)
#define I2C_IMR_ARBITRATATION_LOST_CLR                             0xFFFFEFFF

#define I2C_IMR_BUS_ERROR_SHIFT                                    11
#define I2C_IMR_BUS_ERROR_MASK                                     0x00000800
#define I2C_IMR_BUS_ERROR_SET(n)                                   (((uint32_t)(n) << 11 ) & 0x00000800)
#define I2C_IMR_BUS_ERROR_CLR                                      0xFFFFF7FF

#define I2C_IMR_DETECT_STOP_SHIFT                                  10
#define I2C_IMR_DETECT_STOP_MASK                                   0x00000400
#define I2C_IMR_DETECT_STOP_SET(n)                                 (((uint32_t)(n) << 10 ) & 0x00000400)
#define I2C_IMR_DETECT_STOP_CLR                                    0xFFFFFBFF

#define I2C_IMR_TRANSFER_DONE_SHIFT                                9
#define I2C_IMR_TRANSFER_DONE_MASK                                 0x00000200
#define I2C_IMR_TRANSFER_DONE_SET(n)                               (((uint32_t)(n) << 9  ) & 0x00000200)
#define I2C_IMR_TRANSFER_DONE_CLR                                  0xFFFFFDFF

#define I2C_IMR_SLAVE_ADDR_MATCHED_SHIFT                           8
#define I2C_IMR_SLAVE_ADDR_MATCHED_MASK                            0x00000100
#define I2C_IMR_SLAVE_ADDR_MATCHED_SET(n)                          (((uint32_t)(n) << 8  ) & 0x00000100)
#define I2C_IMR_SLAVE_ADDR_MATCHED_CLR                             0xFFFFFEFF

#define I2C_IMR_RX_NACK_SHIFT                                      7
#define I2C_IMR_RX_NACK_MASK                                       0x00000080
#define I2C_IMR_RX_NACK_SET(n)                                     (((uint32_t)(n) << 7  ) & 0x00000080)
#define I2C_IMR_RX_NACK_CLR                                        0xFFFFFF7F

#define I2C_IMR_RX_ONE_DATA_SHIFT                                  6
#define I2C_IMR_RX_ONE_DATA_MASK                                   0x00000040
#define I2C_IMR_RX_ONE_DATA_SET(n)                                 (((uint32_t)(n) << 6  ) & 0x00000040)
#define I2C_IMR_RX_ONE_DATA_CLR                                    0xFFFFFFBF

#define I2C_IMR_TX_ONE_DATA_SHIFT                                  5
#define I2C_IMR_TX_ONE_DATA_MASK                                   0x00000020
#define I2C_IMR_TX_ONE_DATA_SET(n)                                 (((uint32_t)(n) << 5  ) & 0x00000020)
#define I2C_IMR_TX_ONE_DATA_CLR                                    0xFFFFFFDF

#define I2C_IMR_RX_FIFO_OVERFLOW_SHIFT                             4
#define I2C_IMR_RX_FIFO_OVERFLOW_MASK                              0x00000010
#define I2C_IMR_RX_FIFO_OVERFLOW_SET(n)                            (((uint32_t)(n) << 4  ) & 0x00000010)
#define I2C_IMR_RX_FIFO_OVERFLOW_CLR                               0xFFFFFFEF

#define I2C_IMR_RX_FIFO_FULL_SHIFT                                 3
#define I2C_IMR_RX_FIFO_FULL_MASK                                  0x00000008
#define I2C_IMR_RX_FIFO_FULL_SET(n)                                (((uint32_t)(n) << 3  ) & 0x00000008)
#define I2C_IMR_RX_FIFO_FULL_CLR                                   0xFFFFFFF7

#define I2C_IMR_TX_FIFO_OVERFLOW_SHIFT                             2
#define I2C_IMR_TX_FIFO_OVERFLOW_MASK                              0x00000004
#define I2C_IMR_TX_FIFO_OVERFLOW_SET(n)                            (((uint32_t)(n) << 2  ) & 0x00000004)
#define I2C_IMR_TX_FIFO_OVERFLOW_CLR                               0xFFFFFFFB

#define I2C_IMR_TX_FIFO_UNDERRUN_SHIFT                             1
#define I2C_IMR_TX_FIFO_UNDERRUN_MASK                              0x00000002
#define I2C_IMR_TX_FIFO_UNDERRUN_SET(n)                            (((uint32_t)(n) << 1  ) & 0x00000002)
#define I2C_IMR_TX_FIFO_UNDERRUN_CLR                               0xFFFFFFFD

#define I2C_IMR_TX_FIFO_EMPTY_SHIFT                                0
#define I2C_IMR_TX_FIFO_EMPTY_MASK                                 0x00000001
#define I2C_IMR_TX_FIFO_EMPTY_SET(n)                               (((uint32_t)(n) << 0  ) & 0x00000001)
#define I2C_IMR_TX_FIFO_EMPTY_CLR                                  0xFFFFFFFE

#define I2C_ICR_DETECT_REPEAT_START_SHIFT                          19
#define I2C_ICR_DETECT_REPEAT_START_MASK                           0x00080000
#define I2C_ICR_DETECT_REPEAT_START_SET(n)                         (((uint32_t)(n) << 19 ) & 0x00080000)
#define I2C_ICR_DETECT_REPEAT_START_CLR                            0xFFF7FFFF

#define I2C_ICR_DETECT_START_SHIFT                                 18
#define I2C_ICR_DETECT_START_MASK                                  0x00040000
#define I2C_ICR_DETECT_START_SET(n)                                (((uint32_t)(n) << 18 ) & 0x00040000)
#define I2C_ICR_DETECT_START_CLR                                   0xFFFBFFFF

#define I2C_ICR_DEDICATE_POINT_SHIFT                               17
#define I2C_ICR_DEDICATE_POINT_MASK                                0x00020000
#define I2C_ICR_DEDICATE_POINT_SET(n)                              (((uint32_t)(n) << 17 ) & 0x00020000)
#define I2C_ICR_DEDICATE_POINT_CLR                                 0xFFFDFFFF

#define I2C_ICR_STRETCH_SCL_TIMEOUT_SHIFT                          16
#define I2C_ICR_STRETCH_SCL_TIMEOUT_MASK                           0x00010000
#define I2C_ICR_STRETCH_SCL_TIMEOUT_SET(n)                         (((uint32_t)(n) << 16 ) & 0x00010000)
#define I2C_ICR_STRETCH_SCL_TIMEOUT_CLR                            0xFFFEFFFF

#define I2C_ICR_WAIT_FOR_BUS_IDLE_TIMEOUT_SHIFT                    15
#define I2C_ICR_WAIT_FOR_BUS_IDLE_TIMEOUT_MASK                     0x00008000
#define I2C_ICR_WAIT_FOR_BUS_IDLE_TIMEOUT_SET(n)                   (((uint32_t)(n) << 15 ) & 0x00008000)
#define I2C_ICR_WAIT_FOR_BUS_IDLE_TIMEOUT_CLR                      0xFFFF7FFF

#define I2C_ICR_WAIT_RX_FIFO_SHIFT                                 14
#define I2C_ICR_WAIT_RX_FIFO_MASK                                  0x00004000
#define I2C_ICR_WAIT_RX_FIFO_SET(n)                                (((uint32_t)(n) << 14 ) & 0x00004000)
#define I2C_ICR_WAIT_RX_FIFO_CLR                                   0xFFFFBFFF

#define I2C_ICR_WAIT_TX_FIFO_SHIFT                                 13
#define I2C_ICR_WAIT_TX_FIFO_MASK                                  0x00002000
#define I2C_ICR_WAIT_TX_FIFO_SET(n)                                (((uint32_t)(n) << 13 ) & 0x00002000)
#define I2C_ICR_WAIT_TX_FIFO_CLR                                   0xFFFFDFFF

#define I2C_ICR_ARBITRATATION_LOST_SHIFT                           12
#define I2C_ICR_ARBITRATATION_LOST_MASK                            0x00001000
#define I2C_ICR_ARBITRATATION_LOST_SET(n)                          (((uint32_t)(n) << 12 ) & 0x00001000)
#define I2C_ICR_ARBITRATATION_LOST_CLR                             0xFFFFEFFF

#define I2C_ICR_BUS_ERROR_SHIFT                                    11
#define I2C_ICR_BUS_ERROR_MASK                                     0x00000800
#define I2C_ICR_BUS_ERROR_SET(n)                                   (((uint32_t)(n) << 11 ) & 0x00000800)
#define I2C_ICR_BUS_ERROR_CLR                                      0xFFFFF7FF

#define I2C_ICR_DETECT_STOP_SHIFT                                  10
#define I2C_ICR_DETECT_STOP_MASK                                   0x00000400
#define I2C_ICR_DETECT_STOP_SET(n)                                 (((uint32_t)(n) << 10 ) & 0x00000400)
#define I2C_ICR_DETECT_STOP_CLR                                    0xFFFFFBFF

#define I2C_ICR_TRANSFER_DONE_SHIFT                                9
#define I2C_ICR_TRANSFER_DONE_MASK                                 0x00000200
#define I2C_ICR_TRANSFER_DONE_SET(n)                               (((uint32_t)(n) << 9  ) & 0x00000200)
#define I2C_ICR_TRANSFER_DONE_CLR                                  0xFFFFFDFF

#define I2C_ICR_SLAVE_ADDR_MATCHED_SHIFT                           8
#define I2C_ICR_SLAVE_ADDR_MATCHED_MASK                            0x00000100
#define I2C_ICR_SLAVE_ADDR_MATCHED_SET(n)                          (((uint32_t)(n) << 8  ) & 0x00000100)
#define I2C_ICR_SLAVE_ADDR_MATCHED_CLR                             0xFFFFFEFF

#define I2C_ICR_RX_NACK_SHIFT                                      7
#define I2C_ICR_RX_NACK_MASK                                       0x00000080
#define I2C_ICR_RX_NACK_SET(n)                                     (((uint32_t)(n) << 7  ) & 0x00000080)
#define I2C_ICR_RX_NACK_CLR                                        0xFFFFFF7F

#define I2C_ICR_RX_ONE_DATA_SHIFT                                  6
#define I2C_ICR_RX_ONE_DATA_MASK                                   0x00000040
#define I2C_ICR_RX_ONE_DATA_SET(n)                                 (((uint32_t)(n) << 6  ) & 0x00000040)
#define I2C_ICR_RX_ONE_DATA_CLR                                    0xFFFFFFBF

#define I2C_ICR_TX_ONE_DATA_SHIFT                                  5
#define I2C_ICR_TX_ONE_DATA_MASK                                   0x00000020
#define I2C_ICR_TX_ONE_DATA_SET(n)                                 (((uint32_t)(n) << 5  ) & 0x00000020)
#define I2C_ICR_TX_ONE_DATA_CLR                                    0xFFFFFFDF

#define I2C_ICR_RX_FIFO_OVERFLOW_SHIFT                             4
#define I2C_ICR_RX_FIFO_OVERFLOW_MASK                              0x00000010
#define I2C_ICR_RX_FIFO_OVERFLOW_SET(n)                            (((uint32_t)(n) << 4  ) & 0x00000010)
#define I2C_ICR_RX_FIFO_OVERFLOW_CLR                               0xFFFFFFEF

#define I2C_ICR_RX_FIFO_FULL_SHIFT                                 3
#define I2C_ICR_RX_FIFO_FULL_MASK                                  0x00000008
#define I2C_ICR_RX_FIFO_FULL_SET(n)                                (((uint32_t)(n) << 3  ) & 0x00000008)
#define I2C_ICR_RX_FIFO_FULL_CLR                                   0xFFFFFFF7

#define I2C_ICR_TX_FIFO_OVERFLOW_SHIFT                             2
#define I2C_ICR_TX_FIFO_OVERFLOW_MASK                              0x00000004
#define I2C_ICR_TX_FIFO_OVERFLOW_SET(n)                            (((uint32_t)(n) << 2  ) & 0x00000004)
#define I2C_ICR_TX_FIFO_OVERFLOW_CLR                               0xFFFFFFFB

#define I2C_ICR_TX_FIFO_UNDERRUN_SHIFT                             1
#define I2C_ICR_TX_FIFO_UNDERRUN_MASK                              0x00000002
#define I2C_ICR_TX_FIFO_UNDERRUN_SET(n)                            (((uint32_t)(n) << 1  ) & 0x00000002)
#define I2C_ICR_TX_FIFO_UNDERRUN_CLR                               0xFFFFFFFD

#define I2C_ICR_TX_FIFO_EMPTY_SHIFT                                0
#define I2C_ICR_TX_FIFO_EMPTY_MASK                                 0x00000001
#define I2C_ICR_TX_FIFO_EMPTY_SET(n)                               (((uint32_t)(n) << 0  ) & 0x00000001)
#define I2C_ICR_TX_FIFO_EMPTY_CLR                                  0xFFFFFFFE

#define I2C_ISR_DETECT_REPEAT_START_SHIFT                          19
#define I2C_ISR_DETECT_REPEAT_START_MASK                           0x00080000
#define I2C_ISR_DETECT_REPEAT_START_SET(n)                         (((uint32_t)(n) << 19 ) & 0x00080000)
#define I2C_ISR_DETECT_REPEAT_START_CLR                            0xFFF7FFFF

#define I2C_ISR_DETECT_START_SHIFT                                 18
#define I2C_ISR_DETECT_START_MASK                                  0x00040000
#define I2C_ISR_DETECT_START_SET(n)                                (((uint32_t)(n) << 18 ) & 0x00040000)
#define I2C_ISR_DETECT_START_CLR                                   0xFFFBFFFF

#define I2C_ISR_DEDICATE_POINT_SHIFT                               17
#define I2C_ISR_DEDICATE_POINT_MASK                                0x00020000
#define I2C_ISR_DEDICATE_POINT_SET(n)                              (((uint32_t)(n) << 17 ) & 0x00020000)
#define I2C_ISR_DEDICATE_POINT_CLR                                 0xFFFDFFFF

#define I2C_ISR_STRETCH_SCL_TIMEOUT_SHIFT                          16
#define I2C_ISR_STRETCH_SCL_TIMEOUT_MASK                           0x00010000
#define I2C_ISR_STRETCH_SCL_TIMEOUT_SET(n)                         (((uint32_t)(n) << 16 ) & 0x00010000)
#define I2C_ISR_STRETCH_SCL_TIMEOUT_CLR                            0xFFFEFFFF

#define I2C_ISR_WAIT_FOR_BUS_IDLE_TIMEOUT_SHIFT                    15
#define I2C_ISR_WAIT_FOR_BUS_IDLE_TIMEOUT_MASK                     0x00008000
#define I2C_ISR_WAIT_FOR_BUS_IDLE_TIMEOUT_SET(n)                   (((uint32_t)(n) << 15 ) & 0x00008000)
#define I2C_ISR_WAIT_FOR_BUS_IDLE_TIMEOUT_CLR                      0xFFFF7FFF

#define I2C_ISR_WAIT_RX_FIFO_SHIFT                                 14
#define I2C_ISR_WAIT_RX_FIFO_MASK                                  0x00004000
#define I2C_ISR_WAIT_RX_FIFO_SET(n)                                (((uint32_t)(n) << 14 ) & 0x00004000)
#define I2C_ISR_WAIT_RX_FIFO_CLR                                   0xFFFFBFFF

#define I2C_ISR_WAIT_TX_FIFO_SHIFT                                 13
#define I2C_ISR_WAIT_TX_FIFO_MASK                                  0x00002000
#define I2C_ISR_WAIT_TX_FIFO_SET(n)                                (((uint32_t)(n) << 13 ) & 0x00002000)
#define I2C_ISR_WAIT_TX_FIFO_CLR                                   0xFFFFDFFF

#define I2C_ISR_ARBITRATATION_LOST_SHIFT                           12
#define I2C_ISR_ARBITRATATION_LOST_MASK                            0x00001000
#define I2C_ISR_ARBITRATATION_LOST_SET(n)                          (((uint32_t)(n) << 12 ) & 0x00001000)
#define I2C_ISR_ARBITRATATION_LOST_CLR                             0xFFFFEFFF

#define I2C_ISR_BUS_ERROR_SHIFT                                    11
#define I2C_ISR_BUS_ERROR_MASK                                     0x00000800
#define I2C_ISR_BUS_ERROR_SET(n)                                   (((uint32_t)(n) << 11 ) & 0x00000800)
#define I2C_ISR_BUS_ERROR_CLR                                      0xFFFFF7FF

#define I2C_ISR_DETECT_STOP_SHIFT                                  10
#define I2C_ISR_DETECT_STOP_MASK                                   0x00000400
#define I2C_ISR_DETECT_STOP_SET(n)                                 (((uint32_t)(n) << 10 ) & 0x00000400)
#define I2C_ISR_DETECT_STOP_CLR                                    0xFFFFFBFF

#define I2C_ISR_TRANSFER_DONE_SHIFT                                9
#define I2C_ISR_TRANSFER_DONE_MASK                                 0x00000200
#define I2C_ISR_TRANSFER_DONE_SET(n)                               (((uint32_t)(n) << 9  ) & 0x00000200)
#define I2C_ISR_TRANSFER_DONE_CLR                                  0xFFFFFDFF

#define I2C_ISR_SLAVE_ADDR_MATCHED_SHIFT                           8
#define I2C_ISR_SLAVE_ADDR_MATCHED_MASK                            0x00000100
#define I2C_ISR_SLAVE_ADDR_MATCHED_SET(n)                          (((uint32_t)(n) << 8  ) & 0x00000100)
#define I2C_ISR_SLAVE_ADDR_MATCHED_CLR                             0xFFFFFEFF

#define I2C_ISR_RX_NACK_SHIFT                                      7
#define I2C_ISR_RX_NACK_MASK                                       0x00000080
#define I2C_ISR_RX_NACK_SET(n)                                     (((uint32_t)(n) << 7  ) & 0x00000080)
#define I2C_ISR_RX_NACK_CLR                                        0xFFFFFF7F

#define I2C_ISR_RX_ONE_DATA_SHIFT                                  6
#define I2C_ISR_RX_ONE_DATA_MASK                                   0x00000040
#define I2C_ISR_RX_ONE_DATA_SET(n)                                 (((uint32_t)(n) << 6  ) & 0x00000040)
#define I2C_ISR_RX_ONE_DATA_CLR                                    0xFFFFFFBF

#define I2C_ISR_TX_ONE_DATA_SHIFT                                  5
#define I2C_ISR_TX_ONE_DATA_MASK                                   0x00000020
#define I2C_ISR_TX_ONE_DATA_SET(n)                                 (((uint32_t)(n) << 5  ) & 0x00000020)
#define I2C_ISR_TX_ONE_DATA_CLR                                    0xFFFFFFDF

#define I2C_ISR_RX_FIFO_OVERFLOW_SHIFT                             4
#define I2C_ISR_RX_FIFO_OVERFLOW_MASK                              0x00000010
#define I2C_ISR_RX_FIFO_OVERFLOW_SET(n)                            (((uint32_t)(n) << 4  ) & 0x00000010)
#define I2C_ISR_RX_FIFO_OVERFLOW_CLR                               0xFFFFFFEF

#define I2C_ISR_RX_FIFO_FULL_SHIFT                                 3
#define I2C_ISR_RX_FIFO_FULL_MASK                                  0x00000008
#define I2C_ISR_RX_FIFO_FULL_SET(n)                                (((uint32_t)(n) << 3  ) & 0x00000008)
#define I2C_ISR_RX_FIFO_FULL_CLR                                   0xFFFFFFF7

#define I2C_ISR_TX_FIFO_OVERFLOW_SHIFT                             2
#define I2C_ISR_TX_FIFO_OVERFLOW_MASK                              0x00000004
#define I2C_ISR_TX_FIFO_OVERFLOW_SET(n)                            (((uint32_t)(n) << 2  ) & 0x00000004)
#define I2C_ISR_TX_FIFO_OVERFLOW_CLR                               0xFFFFFFFB

#define I2C_ISR_TX_FIFO_UNDERRUN_SHIFT                             1
#define I2C_ISR_TX_FIFO_UNDERRUN_MASK                              0x00000002
#define I2C_ISR_TX_FIFO_UNDERRUN_SET(n)                            (((uint32_t)(n) << 1  ) & 0x00000002)
#define I2C_ISR_TX_FIFO_UNDERRUN_CLR                               0xFFFFFFFD

#define I2C_ISR_TX_FIFO_EMPTY_SHIFT                                0
#define I2C_ISR_TX_FIFO_EMPTY_MASK                                 0x00000001
#define I2C_ISR_TX_FIFO_EMPTY_SET(n)                               (((uint32_t)(n) << 0  ) & 0x00000001)
#define I2C_ISR_TX_FIFO_EMPTY_CLR                                  0xFFFFFFFE

#define I2C_IRSR_DETECT_REPEAT_START_SHIFT                         19
#define I2C_IRSR_DETECT_REPEAT_START_MASK                          0x00080000
#define I2C_IRSR_DETECT_REPEAT_START_SET(n)                        (((uint32_t)(n) << 19 ) & 0x00080000)
#define I2C_IRSR_DETECT_REPEAT_START_CLR                           0xFFF7FFFF

#define I2C_IRSR_DETECT_START_SHIFT                                18
#define I2C_IRSR_DETECT_START_MASK                                 0x00040000
#define I2C_IRSR_DETECT_START_SET(n)                               (((uint32_t)(n) << 18 ) & 0x00040000)
#define I2C_IRSR_DETECT_START_CLR                                  0xFFFBFFFF

#define I2C_IRSR_DEDICATE_POINT_SHIFT                              17
#define I2C_IRSR_DEDICATE_POINT_MASK                               0x00020000
#define I2C_IRSR_DEDICATE_POINT_SET(n)                             (((uint32_t)(n) << 17 ) & 0x00020000)
#define I2C_IRSR_DEDICATE_POINT_CLR                                0xFFFDFFFF

#define I2C_IRSR_STRETCH_SCL_TIMEOUT_SHIFT                         16
#define I2C_IRSR_STRETCH_SCL_TIMEOUT_MASK                          0x00010000
#define I2C_IRSR_STRETCH_SCL_TIMEOUT_SET(n)                        (((uint32_t)(n) << 16 ) & 0x00010000)
#define I2C_IRSR_STRETCH_SCL_TIMEOUT_CLR                           0xFFFEFFFF

#define I2C_IRSR_WAIT_FOR_BUS_IDLE_TIMEOUT_SHIFT                   15
#define I2C_IRSR_WAIT_FOR_BUS_IDLE_TIMEOUT_MASK                    0x00008000
#define I2C_IRSR_WAIT_FOR_BUS_IDLE_TIMEOUT_SET(n)                  (((uint32_t)(n) << 15 ) & 0x00008000)
#define I2C_IRSR_WAIT_FOR_BUS_IDLE_TIMEOUT_CLR                     0xFFFF7FFF

#define I2C_IRSR_WAIT_RX_FIFO_SHIFT                                14
#define I2C_IRSR_WAIT_RX_FIFO_MASK                                 0x00004000
#define I2C_IRSR_WAIT_RX_FIFO_SET(n)                               (((uint32_t)(n) << 14 ) & 0x00004000)
#define I2C_IRSR_WAIT_RX_FIFO_CLR                                  0xFFFFBFFF

#define I2C_IRSR_WAIT_TX_FIFO_SHIFT                                13
#define I2C_IRSR_WAIT_TX_FIFO_MASK                                 0x00002000
#define I2C_IRSR_WAIT_TX_FIFO_SET(n)                               (((uint32_t)(n) << 13 ) & 0x00002000)
#define I2C_IRSR_WAIT_TX_FIFO_CLR                                  0xFFFFDFFF

#define I2C_IRSR_ARBITRATATION_LOST_SHIFT                          12
#define I2C_IRSR_ARBITRATATION_LOST_MASK                           0x00001000
#define I2C_IRSR_ARBITRATATION_LOST_SET(n)                         (((uint32_t)(n) << 12 ) & 0x00001000)
#define I2C_IRSR_ARBITRATATION_LOST_CLR                            0xFFFFEFFF

#define I2C_IRSR_BUS_ERROR_SHIFT                                   11
#define I2C_IRSR_BUS_ERROR_MASK                                    0x00000800
#define I2C_IRSR_BUS_ERROR_SET(n)                                  (((uint32_t)(n) << 11 ) & 0x00000800)
#define I2C_IRSR_BUS_ERROR_CLR                                     0xFFFFF7FF

#define I2C_IRSR_DETECT_STOP_SHIFT                                 10
#define I2C_IRSR_DETECT_STOP_MASK                                  0x00000400
#define I2C_IRSR_DETECT_STOP_SET(n)                                (((uint32_t)(n) << 10 ) & 0x00000400)
#define I2C_IRSR_DETECT_STOP_CLR                                   0xFFFFFBFF

#define I2C_IRSR_TRANSFER_DONE_SHIFT                               9
#define I2C_IRSR_TRANSFER_DONE_MASK                                0x00000200
#define I2C_IRSR_TRANSFER_DONE_SET(n)                              (((uint32_t)(n) << 9  ) & 0x00000200)
#define I2C_IRSR_TRANSFER_DONE_CLR                                 0xFFFFFDFF

#define I2C_IRSR_SLAVE_ADDR_MATCHED_SHIFT                          8
#define I2C_IRSR_SLAVE_ADDR_MATCHED_MASK                           0x00000100
#define I2C_IRSR_SLAVE_ADDR_MATCHED_SET(n)                         (((uint32_t)(n) << 8  ) & 0x00000100)
#define I2C_IRSR_SLAVE_ADDR_MATCHED_CLR                            0xFFFFFEFF

#define I2C_IRSR_RX_NACK_SHIFT                                     7
#define I2C_IRSR_RX_NACK_MASK                                      0x00000080
#define I2C_IRSR_RX_NACK_SET(n)                                    (((uint32_t)(n) << 7  ) & 0x00000080)
#define I2C_IRSR_RX_NACK_CLR                                       0xFFFFFF7F

#define I2C_IRSR_RX_ONE_DATA_SHIFT                                 6
#define I2C_IRSR_RX_ONE_DATA_MASK                                  0x00000040
#define I2C_IRSR_RX_ONE_DATA_SET(n)                                (((uint32_t)(n) << 6  ) & 0x00000040)
#define I2C_IRSR_RX_ONE_DATA_CLR                                   0xFFFFFFBF

#define I2C_IRSR_TX_ONE_DATA_SHIFT                                 5
#define I2C_IRSR_TX_ONE_DATA_MASK                                  0x00000020
#define I2C_IRSR_TX_ONE_DATA_SET(n)                                (((uint32_t)(n) << 5  ) & 0x00000020)
#define I2C_IRSR_TX_ONE_DATA_CLR                                   0xFFFFFFDF

#define I2C_IRSR_RX_FIFO_OVERFLOW_SHIFT                            4
#define I2C_IRSR_RX_FIFO_OVERFLOW_MASK                             0x00000010
#define I2C_IRSR_RX_FIFO_OVERFLOW_SET(n)                           (((uint32_t)(n) << 4  ) & 0x00000010)
#define I2C_IRSR_RX_FIFO_OVERFLOW_CLR                              0xFFFFFFEF

#define I2C_IRSR_RX_FIFO_FULL_SHIFT                                3
#define I2C_IRSR_RX_FIFO_FULL_MASK                                 0x00000008
#define I2C_IRSR_RX_FIFO_FULL_SET(n)                               (((uint32_t)(n) << 3  ) & 0x00000008)
#define I2C_IRSR_RX_FIFO_FULL_CLR                                  0xFFFFFFF7

#define I2C_IRSR_TX_FIFO_OVERFLOW_SHIFT                            2
#define I2C_IRSR_TX_FIFO_OVERFLOW_MASK                             0x00000004
#define I2C_IRSR_TX_FIFO_OVERFLOW_SET(n)                           (((uint32_t)(n) << 2  ) & 0x00000004)
#define I2C_IRSR_TX_FIFO_OVERFLOW_CLR                              0xFFFFFFFB

#define I2C_IRSR_TX_FIFO_UNDERRUN_SHIFT                            1
#define I2C_IRSR_TX_FIFO_UNDERRUN_MASK                             0x00000002
#define I2C_IRSR_TX_FIFO_UNDERRUN_SET(n)                           (((uint32_t)(n) << 1  ) & 0x00000002)
#define I2C_IRSR_TX_FIFO_UNDERRUN_CLR                              0xFFFFFFFD

#define I2C_IRSR_TX_FIFO_EMPTY_SHIFT                               0
#define I2C_IRSR_TX_FIFO_EMPTY_MASK                                0x00000001
#define I2C_IRSR_TX_FIFO_EMPTY_SET(n)                              (((uint32_t)(n) << 0  ) & 0x00000001)
#define I2C_IRSR_TX_FIFO_EMPTY_CLR                                 0xFFFFFFFE

// Register Structure Definition
typedef struct
{
    __IO uint32_t I2C_EN                    : 1  ; // 0  : 0 
    __IO uint32_t DISABLE_SCL_STRETCH       : 1  ; // 1  : 1 
    __IO uint32_t START_BYTE_EN             : 1  ; // 2  : 2 
    __IO uint32_t CONTROL_MODE              : 1  ; // 3  : 3 
    __IO uint32_t TX_DMA_EN                 : 1  ; // 4  : 4 
    __IO uint32_t RX_DMA_EN                 : 1  ; // 5  : 5 
    __IO uint32_t AGGRESSIVE_MASTER         : 1  ; // 6  : 6 
    __IO uint32_t AUTOCG_EN                 : 1  ; // 7  : 7 
    __IO uint32_t DISABLE_MASTER            : 1  ; // 8  : 8 
    __IO uint32_t RESERVED1                 : 7  ; // 15 : 9 
    __IO uint32_t TX_FIFO_THRESHOLD         : 4  ; // 19 : 16 
    __IO uint32_t RX_FIFO_THRESHOLD         : 4  ; // 23 : 20 
    __IO uint32_t RESERVED0                 : 8  ; // 31 : 24 
} I2C_MCR_FIELD_T;

typedef struct
{
    __IO uint32_t TARGET_SLAVE_ADDR         : 10 ; // 9  : 0 
    __IO uint32_t RESERVED0                 : 3  ; // 12 : 10 
    __IO uint32_t TARGET_SLAVE_ADDR_MODE    : 1  ; // 13 : 13 
    __IO uint32_t TARGET_RWN                : 1  ; // 14 : 14 
    __IO uint32_t START                     : 1  ; // 15 : 15 
    __IO uint32_t RESTART                   : 1  ; // 16 : 16 
    __IO uint32_t STOP                      : 1  ; // 17 : 17 
    __IO uint32_t ACK                       : 1  ; // 18 : 18 
    __IO uint32_t ACK_VALUE                 : 1  ; // 19 : 19 
    __IO uint32_t FLUSH_TX_FIFO             : 1  ; // 20 : 20 
    __IO uint32_t FLUSH_RX_FIFO             : 1  ; // 21 : 21 
    __IO uint32_t BYTE_NUM_UNKNOWN          : 1  ; // 22 : 22 
    __IO uint32_t BYTE_NUM                  : 9  ; // 31 : 23 
} I2C_SCR_FIELD_T;

typedef struct
{
    __IO uint32_t SLAVE_ADDR                : 10 ; // 9  : 0 
    __IO uint32_t RESERVED2                 : 2  ; // 11 : 10 
    __IO uint32_t SLAVE_ADDR_EN             : 1  ; // 12 : 12 
    __IO uint32_t SLAVE_ADDR_MODE           : 1  ; // 13 : 13 
    __IO uint32_t RESERVED1                 : 2  ; // 15 : 14 
    __IO uint32_t GENERAL_CALL_EN           : 1  ; // 16 : 16 
    __IO uint32_t RESERVED0                 : 15 ; // 31 : 17 
} I2C_SAR_FIELD_T;

typedef struct
{
    __IO uint32_t SCLL                      : 8  ; // 7  : 0 
    __IO uint32_t SCLH                      : 8  ; // 15 : 8 
    __IO uint32_t SDA_SETUP_TIME            : 3  ; // 18 : 16 
    __IO uint32_t RESERVED2                 : 1  ; // 19 : 19 
    __IO uint32_t SDA_HOLD_TIME             : 3  ; // 22 : 20 
    __IO uint32_t RESERVED1                 : 1  ; // 23 : 23 
    __IO uint32_t SPIKE_FILTER_CNUM         : 4  ; // 27 : 24 
    __IO uint32_t RESERVED0                 : 4  ; // 31 : 28 
} I2C_TPR_FIELD_T;

typedef struct
{
    __IO uint32_t DATA                      : 8  ; // 7  : 0 
    __IO uint32_t RESERVED0                 : 24 ; // 31 : 8 
} I2C_TRDR_FIELD_T;

typedef struct
{
    __IO uint32_t WAIT_IDLE_TIMEOUT_TIME    : 10 ; // 9  : 0 
    __IO uint32_t RESERVED1                 : 6  ; // 15 : 10 
    __IO uint32_t SCL_STRETCH_TIMEOUT_TIME  : 10 ; // 25 : 16 
    __IO uint32_t RESERVED0                 : 6  ; // 31 : 26 
} I2C_TOR_FIELD_T;

typedef struct
{
    __IO uint32_t BUSY                      : 1  ; // 0  : 0 
    __IO uint32_t ADDRESS_PHASE             : 1  ; // 1  : 1 
    __IO uint32_t DATA_PHASE                : 1  ; // 2  : 2 
    __IO uint32_t RESERVED2                 : 5  ; // 7  : 3 
    __IO uint32_t SLAVE_ADDRESSED_FLAG      : 1  ; // 8  : 8 
    __IO uint32_t SLAVE_ADDRESSED_IND       : 1  ; // 9  : 9 
    __IO uint32_t SLAVE_RWN                 : 1  ; // 10 : 10 
    __IO uint32_t RESERVED1                 : 5  ; // 15 : 11 
    __IO uint32_t TXRX_DATA_NUM             : 9  ; // 24 : 16 
    __IO uint32_t RESERVED0                 : 7  ; // 31 : 25 
} I2C_STR_FIELD_T;

typedef struct
{
    __IO uint32_t TX_FIFO_FREE_NUM          : 5  ; // 4  : 0 
    __IO uint32_t RESERVED1                 : 3  ; // 7  : 5 
    __IO uint32_t RX_FIFO_DATA_NUM          : 5  ; // 12 : 8 
    __IO uint32_t RESERVED0                 : 19 ; // 31 : 13 
} I2C_FSR_FIELD_T;

typedef struct
{
    __IO uint32_t TX_FIFO_EMPTY             : 1  ; // 0  : 0 
    __IO uint32_t TX_FIFO_UNDERRUN          : 1  ; // 1  : 1 
    __IO uint32_t TX_FIFO_OVERFLOW          : 1  ; // 2  : 2 
    __IO uint32_t RX_FIFO_FULL              : 1  ; // 3  : 3 
    __IO uint32_t RX_FIFO_OVERFLOW          : 1  ; // 4  : 4 
    __IO uint32_t TX_ONE_DATA               : 1  ; // 5  : 5 
    __IO uint32_t RX_ONE_DATA               : 1  ; // 6  : 6 
    __IO uint32_t RX_NACK                   : 1  ; // 7  : 7 
    __IO uint32_t SLAVE_ADDR_MATCHED        : 1  ; // 8  : 8 
    __IO uint32_t TRANSFER_DONE             : 1  ; // 9  : 9 
    __IO uint32_t DETECT_STOP               : 1  ; // 10 : 10 
    __IO uint32_t BUS_ERROR                 : 1  ; // 11 : 11 
    __IO uint32_t ARBITRATATION_LOST        : 1  ; // 12 : 12 
    __IO uint32_t WAIT_TX_FIFO              : 1  ; // 13 : 13 
    __IO uint32_t WAIT_RX_FIFO              : 1  ; // 14 : 14 
    __IO uint32_t WAIT_FOR_BUS_IDLE_TIMEOUT : 1  ; // 15 : 15 
    __IO uint32_t STRETCH_SCL_TIMEOUT       : 1  ; // 16 : 16 
    __IO uint32_t DEDICATE_POINT            : 1  ; // 17 : 17 
    __IO uint32_t DETECT_START              : 1  ; // 18 : 18 
    __IO uint32_t DETECT_REPEAT_START       : 1  ; // 19 : 19 
    __IO uint32_t RESERVED0                 : 12 ; // 31 : 20 
} I2C_IMR_FIELD_T;

typedef struct
{
    __IO uint32_t TX_FIFO_EMPTY             : 1  ; // 0  : 0 
    __IO uint32_t TX_FIFO_UNDERRUN          : 1  ; // 1  : 1 
    __IO uint32_t TX_FIFO_OVERFLOW          : 1  ; // 2  : 2 
    __IO uint32_t RX_FIFO_FULL              : 1  ; // 3  : 3 
    __IO uint32_t RX_FIFO_OVERFLOW          : 1  ; // 4  : 4 
    __IO uint32_t TX_ONE_DATA               : 1  ; // 5  : 5 
    __IO uint32_t RX_ONE_DATA               : 1  ; // 6  : 6 
    __IO uint32_t RX_NACK                   : 1  ; // 7  : 7 
    __IO uint32_t SLAVE_ADDR_MATCHED        : 1  ; // 8  : 8 
    __IO uint32_t TRANSFER_DONE             : 1  ; // 9  : 9 
    __IO uint32_t DETECT_STOP               : 1  ; // 10 : 10 
    __IO uint32_t BUS_ERROR                 : 1  ; // 11 : 11 
    __IO uint32_t ARBITRATATION_LOST        : 1  ; // 12 : 12 
    __IO uint32_t WAIT_TX_FIFO              : 1  ; // 13 : 13 
    __IO uint32_t WAIT_RX_FIFO              : 1  ; // 14 : 14 
    __IO uint32_t WAIT_FOR_BUS_IDLE_TIMEOUT : 1  ; // 15 : 15 
    __IO uint32_t STRETCH_SCL_TIMEOUT       : 1  ; // 16 : 16 
    __IO uint32_t DEDICATE_POINT            : 1  ; // 17 : 17 
    __IO uint32_t DETECT_START              : 1  ; // 18 : 18 
    __IO uint32_t DETECT_REPEAT_START       : 1  ; // 19 : 19 
    __IO uint32_t RESERVED0                 : 12 ; // 31 : 20 
} I2C_ICR_FIELD_T;

typedef struct
{
    __IO uint32_t TX_FIFO_EMPTY             : 1  ; // 0  : 0 
    __IO uint32_t TX_FIFO_UNDERRUN          : 1  ; // 1  : 1 
    __IO uint32_t TX_FIFO_OVERFLOW          : 1  ; // 2  : 2 
    __IO uint32_t RX_FIFO_FULL              : 1  ; // 3  : 3 
    __IO uint32_t RX_FIFO_OVERFLOW          : 1  ; // 4  : 4 
    __IO uint32_t TX_ONE_DATA               : 1  ; // 5  : 5 
    __IO uint32_t RX_ONE_DATA               : 1  ; // 6  : 6 
    __IO uint32_t RX_NACK                   : 1  ; // 7  : 7 
    __IO uint32_t SLAVE_ADDR_MATCHED        : 1  ; // 8  : 8 
    __IO uint32_t TRANSFER_DONE             : 1  ; // 9  : 9 
    __IO uint32_t DETECT_STOP               : 1  ; // 10 : 10 
    __IO uint32_t BUS_ERROR                 : 1  ; // 11 : 11 
    __IO uint32_t ARBITRATATION_LOST        : 1  ; // 12 : 12 
    __IO uint32_t WAIT_TX_FIFO              : 1  ; // 13 : 13 
    __IO uint32_t WAIT_RX_FIFO              : 1  ; // 14 : 14 
    __IO uint32_t WAIT_FOR_BUS_IDLE_TIMEOUT : 1  ; // 15 : 15 
    __IO uint32_t STRETCH_SCL_TIMEOUT       : 1  ; // 16 : 16 
    __IO uint32_t DEDICATE_POINT            : 1  ; // 17 : 17 
    __IO uint32_t DETECT_START              : 1  ; // 18 : 18 
    __IO uint32_t DETECT_REPEAT_START       : 1  ; // 19 : 19 
    __IO uint32_t RESERVED0                 : 12 ; // 31 : 20 
} I2C_ISR_FIELD_T;

typedef struct
{
    __IO uint32_t TX_FIFO_EMPTY             : 1  ; // 0  : 0 
    __IO uint32_t TX_FIFO_UNDERRUN          : 1  ; // 1  : 1 
    __IO uint32_t TX_FIFO_OVERFLOW          : 1  ; // 2  : 2 
    __IO uint32_t RX_FIFO_FULL              : 1  ; // 3  : 3 
    __IO uint32_t RX_FIFO_OVERFLOW          : 1  ; // 4  : 4 
    __IO uint32_t TX_ONE_DATA               : 1  ; // 5  : 5 
    __IO uint32_t RX_ONE_DATA               : 1  ; // 6  : 6 
    __IO uint32_t RX_NACK                   : 1  ; // 7  : 7 
    __IO uint32_t SLAVE_ADDR_MATCHED        : 1  ; // 8  : 8 
    __IO uint32_t TRANSFER_DONE             : 1  ; // 9  : 9 
    __IO uint32_t DETECT_STOP               : 1  ; // 10 : 10 
    __IO uint32_t BUS_ERROR                 : 1  ; // 11 : 11 
    __IO uint32_t ARBITRATATION_LOST        : 1  ; // 12 : 12 
    __IO uint32_t WAIT_TX_FIFO              : 1  ; // 13 : 13 
    __IO uint32_t WAIT_RX_FIFO              : 1  ; // 14 : 14 
    __IO uint32_t WAIT_FOR_BUS_IDLE_TIMEOUT : 1  ; // 15 : 15 
    __IO uint32_t STRETCH_SCL_TIMEOUT       : 1  ; // 16 : 16 
    __IO uint32_t DEDICATE_POINT            : 1  ; // 17 : 17 
    __IO uint32_t DETECT_START              : 1  ; // 18 : 18 
    __IO uint32_t DETECT_REPEAT_START       : 1  ; // 19 : 19 
    __IO uint32_t RESERVED0                 : 12 ; // 31 : 20 
} I2C_IRSR_FIELD_T;

// Register Map Structure Definition
typedef struct
{
    union 
    { 
        __IO  uint32_t MCR         ; // 0x0000
        I2C_MCR_FIELD_T MCR_F      ;
    };

    union 
    { 
        __IO  uint32_t SCR         ; // 0x0004
        I2C_SCR_FIELD_T SCR_F      ;
    };

    union 
    { 
        __IO  uint32_t SAR         ; // 0x0008
        I2C_SAR_FIELD_T SAR_F      ;
    };

    union 
    { 
        __IO  uint32_t TPR         ; // 0x000C
        I2C_TPR_FIELD_T TPR_F      ;
    };

    union 
    { 
        __IO  uint32_t TRDR        ; // 0x0010
        I2C_TRDR_FIELD_T TRDR_F    ;
    };

    union 
    { 
        __IO  uint32_t TOR         ; // 0x0014
        I2C_TOR_FIELD_T TOR_F      ;
    };

    union 
    { 
        __IO  uint32_t STR         ; // 0x0018
        I2C_STR_FIELD_T STR_F      ;
    };

    union 
    { 
        __IO  uint32_t FSR         ; // 0x001C
        I2C_FSR_FIELD_T FSR_F      ;
    };

    union 
    { 
        __IO  uint32_t IMR         ; // 0x0020
        I2C_IMR_FIELD_T IMR_F      ;
    };

    union 
    { 
        __IO  uint32_t ICR         ; // 0x0024
        I2C_ICR_FIELD_T ICR_F      ;
    };

    union 
    { 
        __IO  uint32_t ISR         ; // 0x0028
        I2C_ISR_FIELD_T ISR_F      ;
    };

    union 
    { 
        __IO  uint32_t IRSR        ; // 0x002C
        I2C_IRSR_FIELD_T IRSR_F    ;
    };

} I2C_REG_TypeDef;

#endif
