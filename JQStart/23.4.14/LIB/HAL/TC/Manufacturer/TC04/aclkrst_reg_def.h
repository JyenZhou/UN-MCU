//----------------------------------------------------------------------
//         COPYRIGHT (C) 2022 TINYCHIP SEMICONDUCTOR                    
    //              CONFIDENTIAL & ALL RIGHTS RESERVED                      
//----------------------------------------------------------------------
// File name      : aclkrst_reg_def.h                                   
// Author         : mfpan                                               
// E-Mail         : mfpan@tinychip.com.cn                               
//----------------------------------------------------------------------
// Description    :                                                     
// Register Header File of ACLKRST                                   
//----------------------------------------------------------------------
// Reversion History:                                                   
// 2022-10-21 17:24:9 -- automatically generated by reg_gen.pl Revision 1.11          
//----------------------------------------------------------------------

#ifndef   ACLKRST_DEF_H__
#define   ACLKRST_DEF_H__

// Register Offset Macro Definition
#define ACLKRST_HCLK_SEL_OFFSET                                 0x0004
#define ACLKRST_RST_STATUS_OFFSET                               0x0008
#define ACLKRST_PAD_RSTN_FLT_OFFSET                             0x000C
#define ACLKRST_WR_LOCK_CTRL_OFFSET                             0x0FFC

// Register Address Macro Definition
#define ACLKRST_HCLK_SEL_ADDR                                   ( ACLKRST_BASE_ADDR + ACLKRST_HCLK_SEL_OFFSET)
#define ACLKRST_RST_STATUS_ADDR                                 ( ACLKRST_BASE_ADDR + ACLKRST_RST_STATUS_OFFSET)
#define ACLKRST_PAD_RSTN_FLT_ADDR                               ( ACLKRST_BASE_ADDR + ACLKRST_PAD_RSTN_FLT_OFFSET)
#define ACLKRST_WR_LOCK_CTRL_ADDR                               ( ACLKRST_BASE_ADDR + ACLKRST_WR_LOCK_CTRL_OFFSET)

// Register Field Macro Definition
#define ACLKRST_HCLK_SEL_HCLK_SEL_SHIFT                              0
#define ACLKRST_HCLK_SEL_HCLK_SEL_MASK                               0x00000003
#define ACLKRST_HCLK_SEL_HCLK_SEL_SET(n)                             (((uint32_t)(n) << 0  ) & 0x00000003)
#define ACLKRST_HCLK_SEL_HCLK_SEL_CLR                                0xFFFFFFFC

#define ACLKRST_RST_STATUS_WDG_RST_FLAG_SHIFT                        8
#define ACLKRST_RST_STATUS_WDG_RST_FLAG_MASK                         0x00000100
#define ACLKRST_RST_STATUS_WDG_RST_FLAG_SET(n)                       (((uint32_t)(n) << 8  ) & 0x00000100)
#define ACLKRST_RST_STATUS_WDG_RST_FLAG_CLR                          0xFFFFFEFF

#define ACLKRST_RST_STATUS_LVD15_RST_FLAG_SHIFT                      7
#define ACLKRST_RST_STATUS_LVD15_RST_FLAG_MASK                       0x00000080
#define ACLKRST_RST_STATUS_LVD15_RST_FLAG_SET(n)                     (((uint32_t)(n) << 7  ) & 0x00000080)
#define ACLKRST_RST_STATUS_LVD15_RST_FLAG_CLR                        0xFFFFFF7F

#define ACLKRST_RST_STATUS_LVD_RST_FLAG_SHIFT                        6
#define ACLKRST_RST_STATUS_LVD_RST_FLAG_MASK                         0x00000040
#define ACLKRST_RST_STATUS_LVD_RST_FLAG_SET(n)                       (((uint32_t)(n) << 6  ) & 0x00000040)
#define ACLKRST_RST_STATUS_LVD_RST_FLAG_CLR                          0xFFFFFFBF

#define ACLKRST_RST_STATUS_PAD_RST_FLAG_SHIFT                        5
#define ACLKRST_RST_STATUS_PAD_RST_FLAG_MASK                         0x00000020
#define ACLKRST_RST_STATUS_PAD_RST_FLAG_SET(n)                       (((uint32_t)(n) << 5  ) & 0x00000020)
#define ACLKRST_RST_STATUS_PAD_RST_FLAG_CLR                          0xFFFFFFDF

#define ACLKRST_RST_STATUS_POR_RST_FLAG_SHIFT                        4
#define ACLKRST_RST_STATUS_POR_RST_FLAG_MASK                         0x00000010
#define ACLKRST_RST_STATUS_POR_RST_FLAG_SET(n)                       (((uint32_t)(n) << 4  ) & 0x00000010)
#define ACLKRST_RST_STATUS_POR_RST_FLAG_CLR                          0xFFFFFFEF

#define ACLKRST_RST_STATUS_RST_VECT_SHIFT                            1
#define ACLKRST_RST_STATUS_RST_VECT_MASK                             0x0000000E
#define ACLKRST_RST_STATUS_RST_VECT_SET(n)                           (((uint32_t)(n) << 1  ) & 0x0000000E)
#define ACLKRST_RST_STATUS_RST_VECT_CLR                              0xFFFFFFF1

#define ACLKRST_RST_STATUS_CLR_RST_SHIFT                             0
#define ACLKRST_RST_STATUS_CLR_RST_MASK                              0x00000001
#define ACLKRST_RST_STATUS_CLR_RST_SET(n)                            (((uint32_t)(n) << 0  ) & 0x00000001)
#define ACLKRST_RST_STATUS_CLR_RST_CLR                               0xFFFFFFFE

#define ACLKRST_PAD_RSTN_FLT_FILTER_CNT_MAX_SHIFT                    0
#define ACLKRST_PAD_RSTN_FLT_FILTER_CNT_MAX_MASK                     0x0000FFFF
#define ACLKRST_PAD_RSTN_FLT_FILTER_CNT_MAX_SET(n)                   (((uint32_t)(n) << 0  ) & 0x0000FFFF)
#define ACLKRST_PAD_RSTN_FLT_FILTER_CNT_MAX_CLR                      0xFFFF0000

#define ACLKRST_WR_LOCK_CTRL_WR_LOCK_SHIFT                           0
#define ACLKRST_WR_LOCK_CTRL_WR_LOCK_MASK                            0x00000001
#define ACLKRST_WR_LOCK_CTRL_WR_LOCK_SET(n)                          (((uint32_t)(n) << 0  ) & 0x00000001)
#define ACLKRST_WR_LOCK_CTRL_WR_LOCK_CLR                             0xFFFFFFFE

// Register Structure Definition
typedef struct
{
    __IO uint32_t HCLK_SEL        : 2  ; // 1  : 0 
    __IO uint32_t RESERVED0       : 30 ; // 31 : 2 
} ACLKRST_HCLK_SEL_FIELD_T;

typedef struct
{
    __IO uint32_t CLR_RST         : 1  ; // 0  : 0 
    __IO uint32_t RST_VECT        : 3  ; // 3  : 1 
    __IO uint32_t POR_RST_FLAG    : 1  ; // 4  : 4 
    __IO uint32_t PAD_RST_FLAG    : 1  ; // 5  : 5 
    __IO uint32_t LVD_RST_FLAG    : 1  ; // 6  : 6 
    __IO uint32_t LVD15_RST_FLAG  : 1  ; // 7  : 7 
    __IO uint32_t WDG_RST_FLAG    : 1  ; // 8  : 8 
    __IO uint32_t RESERVED0       : 23 ; // 31 : 9 
} ACLKRST_RST_STATUS_FIELD_T;

typedef struct
{
    __IO uint32_t FILTER_CNT_MAX  : 16 ; // 15 : 0 
    __IO uint32_t RESERVED0       : 16 ; // 31 : 16 
} ACLKRST_PAD_RSTN_FLT_FIELD_T;

typedef struct
{
    __IO uint32_t WR_LOCK         : 1  ; // 0  : 0 
    __IO uint32_t RESERVED0       : 31 ; // 31 : 1 
} ACLKRST_WR_LOCK_CTRL_FIELD_T;

// Register Map Structure Definition
typedef struct
{
    uint32_t RESERVED0                          ;

    union 
    { 
        __IO  uint32_t HCLK_SEL                    ; // 0x0004
        ACLKRST_HCLK_SEL_FIELD_T HCLK_SEL_F        ;
    };

    union 
    { 
        __IO  uint32_t RST_STATUS                  ; // 0x0008
        ACLKRST_RST_STATUS_FIELD_T RST_STATUS_F    ;
    };

    union 
    { 
        __IO  uint32_t PAD_RSTN_FLT                ; // 0x000C
        ACLKRST_PAD_RSTN_FLT_FIELD_T PAD_RSTN_FLT_F;
    };

    uint32_t RESERVED1[1019]                          ;

    union 
    { 
        __IO  uint32_t WR_LOCK_CTRL                ; // 0x0FFC
        ACLKRST_WR_LOCK_CTRL_FIELD_T WR_LOCK_CTRL_F;
    };

} ACLKRST_REG_TypeDef;

#endif
