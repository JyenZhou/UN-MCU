//----------------------------------------------------------------------
//         COPYRIGHT (C) 2022 TINYCHIP SEMICONDUCTOR                    
    //              CONFIDENTIAL & ALL RIGHTS RESERVED                      
//----------------------------------------------------------------------
// File name      : uart_reg_def.h                                      
// Author         : mfpan                                               
// E-Mail         : mfpan@tinychip.com.cn                               
//----------------------------------------------------------------------
// Description    :                                                     
// Register Header File of UART                                      
//----------------------------------------------------------------------
// Reversion History:                                                   
// 2022-10-21 17:24:14 -- automatically generated by reg_gen.pl Revision 1.11          
//----------------------------------------------------------------------

#ifndef   UART_DEF_H__
#define   UART_DEF_H__

// Register Offset Macro Definition
#define UART_RTBR_OFFSET                                        0x0000
#define UART_DLR_OFFSET                                         0x0004
#define UART_IMR_OFFSET                                         0x0008
#define UART_ICR_OFFSET                                         0x000C
#define UART_ISR_OFFSET                                         0x0010
#define UART_IRSR_OFFSET                                        0x0014
#define UART_FCR_OFFSET                                         0x0018
#define UART_LCR_OFFSET                                         0x001C
#define UART_MCR_OFFSET                                         0x0020
#define UART_LSR_OFFSET                                         0x0024
#define UART_MSR_OFFSET                                         0x0028
#define UART_SCR_OFFSET                                         0x002C
#define UART_MFCR_OFFSET                                        0x0030
#define UART_EFCR_OFFSET                                        0x0034
#define UART_LPDR_OFFSET                                        0x0038
#define UART_FCNR_OFFSET                                        0x003C
#define UART_ADCR_OFFSET                                        0x0040
#define UART_ADRR_OFFSET                                        0x0044
#define UART_RTCR_OFFSET                                        0x0048
#define UART_RCMR_OFFSET                                        0x004C

// Register Address Macro Definition
#define UART_RTBR_ADDR                                          ( UART_BASE_ADDR + UART_RTBR_OFFSET)
#define UART_DLR_ADDR                                           ( UART_BASE_ADDR + UART_DLR_OFFSET)
#define UART_IMR_ADDR                                           ( UART_BASE_ADDR + UART_IMR_OFFSET)
#define UART_ICR_ADDR                                           ( UART_BASE_ADDR + UART_ICR_OFFSET)
#define UART_ISR_ADDR                                           ( UART_BASE_ADDR + UART_ISR_OFFSET)
#define UART_IRSR_ADDR                                          ( UART_BASE_ADDR + UART_IRSR_OFFSET)
#define UART_FCR_ADDR                                           ( UART_BASE_ADDR + UART_FCR_OFFSET)
#define UART_LCR_ADDR                                           ( UART_BASE_ADDR + UART_LCR_OFFSET)
#define UART_MCR_ADDR                                           ( UART_BASE_ADDR + UART_MCR_OFFSET)
#define UART_LSR_ADDR                                           ( UART_BASE_ADDR + UART_LSR_OFFSET)
#define UART_MSR_ADDR                                           ( UART_BASE_ADDR + UART_MSR_OFFSET)
#define UART_SCR_ADDR                                           ( UART_BASE_ADDR + UART_SCR_OFFSET)
#define UART_MFCR_ADDR                                          ( UART_BASE_ADDR + UART_MFCR_OFFSET)
#define UART_EFCR_ADDR                                          ( UART_BASE_ADDR + UART_EFCR_OFFSET)
#define UART_LPDR_ADDR                                          ( UART_BASE_ADDR + UART_LPDR_OFFSET)
#define UART_FCNR_ADDR                                          ( UART_BASE_ADDR + UART_FCNR_OFFSET)
#define UART_ADCR_ADDR                                          ( UART_BASE_ADDR + UART_ADCR_OFFSET)
#define UART_ADRR_ADDR                                          ( UART_BASE_ADDR + UART_ADRR_OFFSET)
#define UART_RTCR_ADDR                                          ( UART_BASE_ADDR + UART_RTCR_OFFSET)
#define UART_RCMR_ADDR                                          ( UART_BASE_ADDR + UART_RCMR_OFFSET)

// Register Field Macro Definition
#define UART_RTBR_RBTHR_SHIFT                                                  0
#define UART_RTBR_RBTHR_MASK                                                   0x000000FF
#define UART_RTBR_RBTHR_SET(n)                                                 (((uint32_t)(n) << 0  ) & 0x000000FF)
#define UART_RTBR_RBTHR_CLR                                                    0xFFFFFF00

#define UART_DLR_DLH_SHIFT                                                     8
#define UART_DLR_DLH_MASK                                                      0x0000FF00
#define UART_DLR_DLH_SET(n)                                                    (((uint32_t)(n) << 8  ) & 0x0000FF00)
#define UART_DLR_DLH_CLR                                                       0xFFFF00FF

#define UART_DLR_DLL_SHIFT                                                     0
#define UART_DLR_DLL_MASK                                                      0x000000FF
#define UART_DLR_DLL_SET(n)                                                    (((uint32_t)(n) << 0  ) & 0x000000FF)
#define UART_DLR_DLL_CLR                                                       0xFFFFFF00

#define UART_IMR_AUTO_BAUDRATE_FINISH_INT_MSK_SHIFT                            8
#define UART_IMR_AUTO_BAUDRATE_FINISH_INT_MSK_MASK                             0x00000100
#define UART_IMR_AUTO_BAUDRATE_FINISH_INT_MSK_SET(n)                           (((uint32_t)(n) << 8  ) & 0x00000100)
#define UART_IMR_AUTO_BAUDRATE_FINISH_INT_MSK_CLR                              0xFFFFFEFF

#define UART_IMR_RX_CH_MATCH_INT_MSK_SHIFT                                     7
#define UART_IMR_RX_CH_MATCH_INT_MSK_MASK                                      0x00000080
#define UART_IMR_RX_CH_MATCH_INT_MSK_SET(n)                                    (((uint32_t)(n) << 7  ) & 0x00000080)
#define UART_IMR_RX_CH_MATCH_INT_MSK_CLR                                       0xFFFFFF7F

#define UART_IMR_AUTO_BAUDRATE_TIMEOUT_INT_MSK_SHIFT                           6
#define UART_IMR_AUTO_BAUDRATE_TIMEOUT_INT_MSK_MASK                            0x00000040
#define UART_IMR_AUTO_BAUDRATE_TIMEOUT_INT_MSK_SET(n)                          (((uint32_t)(n) << 6  ) & 0x00000040)
#define UART_IMR_AUTO_BAUDRATE_TIMEOUT_INT_MSK_CLR                             0xFFFFFFBF

#define UART_IMR_CFG_LCR_IN_BUSY_INT_MSK_SHIFT                                 5
#define UART_IMR_CFG_LCR_IN_BUSY_INT_MSK_MASK                                  0x00000020
#define UART_IMR_CFG_LCR_IN_BUSY_INT_MSK_SET(n)                                (((uint32_t)(n) << 5  ) & 0x00000020)
#define UART_IMR_CFG_LCR_IN_BUSY_INT_MSK_CLR                                   0xFFFFFFDF

#define UART_IMR_MDM_STATUS_INT_MSK_SHIFT                                      4
#define UART_IMR_MDM_STATUS_INT_MSK_MASK                                       0x00000010
#define UART_IMR_MDM_STATUS_INT_MSK_SET(n)                                     (((uint32_t)(n) << 4  ) & 0x00000010)
#define UART_IMR_MDM_STATUS_INT_MSK_CLR                                        0xFFFFFFEF

#define UART_IMR_TX_DATA_REQ_INT_MSK_SHIFT                                     3
#define UART_IMR_TX_DATA_REQ_INT_MSK_MASK                                      0x00000008
#define UART_IMR_TX_DATA_REQ_INT_MSK_SET(n)                                    (((uint32_t)(n) << 3  ) & 0x00000008)
#define UART_IMR_TX_DATA_REQ_INT_MSK_CLR                                       0xFFFFFFF7

#define UART_IMR_RX_TIMEOUT_INT_MSK_SHIFT                                      2
#define UART_IMR_RX_TIMEOUT_INT_MSK_MASK                                       0x00000004
#define UART_IMR_RX_TIMEOUT_INT_MSK_SET(n)                                     (((uint32_t)(n) << 2  ) & 0x00000004)
#define UART_IMR_RX_TIMEOUT_INT_MSK_CLR                                        0xFFFFFFFB

#define UART_IMR_RX_DATA_AVAIL_INT_MSK_SHIFT                                   1
#define UART_IMR_RX_DATA_AVAIL_INT_MSK_MASK                                    0x00000002
#define UART_IMR_RX_DATA_AVAIL_INT_MSK_SET(n)                                  (((uint32_t)(n) << 1  ) & 0x00000002)
#define UART_IMR_RX_DATA_AVAIL_INT_MSK_CLR                                     0xFFFFFFFD

#define UART_IMR_RX_LINE_STATUS_INT_MSK_SHIFT                                  0
#define UART_IMR_RX_LINE_STATUS_INT_MSK_MASK                                   0x00000001
#define UART_IMR_RX_LINE_STATUS_INT_MSK_SET(n)                                 (((uint32_t)(n) << 0  ) & 0x00000001)
#define UART_IMR_RX_LINE_STATUS_INT_MSK_CLR                                    0xFFFFFFFE

#define UART_ICR_AUTO_BAUDRATE_FINISH_INT_CLR_SHIFT                            8
#define UART_ICR_AUTO_BAUDRATE_FINISH_INT_CLR_MASK                             0x00000100
#define UART_ICR_AUTO_BAUDRATE_FINISH_INT_CLR_SET(n)                           (((uint32_t)(n) << 8  ) & 0x00000100)
#define UART_ICR_AUTO_BAUDRATE_FINISH_INT_CLR_CLR                              0xFFFFFEFF

#define UART_ICR_RX_CH_MATCH_INT_CLR_SHIFT                                     7
#define UART_ICR_RX_CH_MATCH_INT_CLR_MASK                                      0x00000080
#define UART_ICR_RX_CH_MATCH_INT_CLR_SET(n)                                    (((uint32_t)(n) << 7  ) & 0x00000080)
#define UART_ICR_RX_CH_MATCH_INT_CLR_CLR                                       0xFFFFFF7F

#define UART_ICR_AUTO_BAUDRATE_TIMEOUT_INT_CLR_SHIFT                           6
#define UART_ICR_AUTO_BAUDRATE_TIMEOUT_INT_CLR_MASK                            0x00000040
#define UART_ICR_AUTO_BAUDRATE_TIMEOUT_INT_CLR_SET(n)                          (((uint32_t)(n) << 6  ) & 0x00000040)
#define UART_ICR_AUTO_BAUDRATE_TIMEOUT_INT_CLR_CLR                             0xFFFFFFBF

#define UART_ICR_CFG_LCR_IN_BUSY_INT_CLR_SHIFT                                 5
#define UART_ICR_CFG_LCR_IN_BUSY_INT_CLR_MASK                                  0x00000020
#define UART_ICR_CFG_LCR_IN_BUSY_INT_CLR_SET(n)                                (((uint32_t)(n) << 5  ) & 0x00000020)
#define UART_ICR_CFG_LCR_IN_BUSY_INT_CLR_CLR                                   0xFFFFFFDF

#define UART_ICR_MDM_STATUS_INT_CLR_SHIFT                                      4
#define UART_ICR_MDM_STATUS_INT_CLR_MASK                                       0x00000010
#define UART_ICR_MDM_STATUS_INT_CLR_SET(n)                                     (((uint32_t)(n) << 4  ) & 0x00000010)
#define UART_ICR_MDM_STATUS_INT_CLR_CLR                                        0xFFFFFFEF

#define UART_ICR_TX_DATA_REQ_INT_CLR_SHIFT                                     3
#define UART_ICR_TX_DATA_REQ_INT_CLR_MASK                                      0x00000008
#define UART_ICR_TX_DATA_REQ_INT_CLR_SET(n)                                    (((uint32_t)(n) << 3  ) & 0x00000008)
#define UART_ICR_TX_DATA_REQ_INT_CLR_CLR                                       0xFFFFFFF7

#define UART_ICR_RX_TIMEOUT_INT_CLR_SHIFT                                      2
#define UART_ICR_RX_TIMEOUT_INT_CLR_MASK                                       0x00000004
#define UART_ICR_RX_TIMEOUT_INT_CLR_SET(n)                                     (((uint32_t)(n) << 2  ) & 0x00000004)
#define UART_ICR_RX_TIMEOUT_INT_CLR_CLR                                        0xFFFFFFFB

#define UART_ICR_RX_DATA_AVAIL_INT_CLR_SHIFT                                   1
#define UART_ICR_RX_DATA_AVAIL_INT_CLR_MASK                                    0x00000002
#define UART_ICR_RX_DATA_AVAIL_INT_CLR_SET(n)                                  (((uint32_t)(n) << 1  ) & 0x00000002)
#define UART_ICR_RX_DATA_AVAIL_INT_CLR_CLR                                     0xFFFFFFFD

#define UART_ICR_RX_LINE_STATUS_INT_CLR_SHIFT                                  0
#define UART_ICR_RX_LINE_STATUS_INT_CLR_MASK                                   0x00000001
#define UART_ICR_RX_LINE_STATUS_INT_CLR_SET(n)                                 (((uint32_t)(n) << 0  ) & 0x00000001)
#define UART_ICR_RX_LINE_STATUS_INT_CLR_CLR                                    0xFFFFFFFE

#define UART_ISR_AUTO_BAUDRATE_FINISH_INT_STATUS_SHIFT                         8
#define UART_ISR_AUTO_BAUDRATE_FINISH_INT_STATUS_MASK                          0x00000100
#define UART_ISR_AUTO_BAUDRATE_FINISH_INT_STATUS_SET(n)                        (((uint32_t)(n) << 8  ) & 0x00000100)
#define UART_ISR_AUTO_BAUDRATE_FINISH_INT_STATUS_CLR                           0xFFFFFEFF

#define UART_ISR_RX_CH_MATCH_INT_STATUS_SHIFT                                  7
#define UART_ISR_RX_CH_MATCH_INT_STATUS_MASK                                   0x00000080
#define UART_ISR_RX_CH_MATCH_INT_STATUS_SET(n)                                 (((uint32_t)(n) << 7  ) & 0x00000080)
#define UART_ISR_RX_CH_MATCH_INT_STATUS_CLR                                    0xFFFFFF7F

#define UART_ISR_AUTO_BAUDRATE_TIMEOUT_INT_STATUS_SHIFT                        6
#define UART_ISR_AUTO_BAUDRATE_TIMEOUT_INT_STATUS_MASK                         0x00000040
#define UART_ISR_AUTO_BAUDRATE_TIMEOUT_INT_STATUS_SET(n)                       (((uint32_t)(n) << 6  ) & 0x00000040)
#define UART_ISR_AUTO_BAUDRATE_TIMEOUT_INT_STATUS_CLR                          0xFFFFFFBF

#define UART_ISR_CFG_LCR_IN_BUSY_INT_STATUS_SHIFT                              5
#define UART_ISR_CFG_LCR_IN_BUSY_INT_STATUS_MASK                               0x00000020
#define UART_ISR_CFG_LCR_IN_BUSY_INT_STATUS_SET(n)                             (((uint32_t)(n) << 5  ) & 0x00000020)
#define UART_ISR_CFG_LCR_IN_BUSY_INT_STATUS_CLR                                0xFFFFFFDF

#define UART_ISR_MDM_STATUS_INT_STATUS_SHIFT                                   4
#define UART_ISR_MDM_STATUS_INT_STATUS_MASK                                    0x00000010
#define UART_ISR_MDM_STATUS_INT_STATUS_SET(n)                                  (((uint32_t)(n) << 4  ) & 0x00000010)
#define UART_ISR_MDM_STATUS_INT_STATUS_CLR                                     0xFFFFFFEF

#define UART_ISR_TX_DATA_REQ_INT_STATUS_SHIFT                                  3
#define UART_ISR_TX_DATA_REQ_INT_STATUS_MASK                                   0x00000008
#define UART_ISR_TX_DATA_REQ_INT_STATUS_SET(n)                                 (((uint32_t)(n) << 3  ) & 0x00000008)
#define UART_ISR_TX_DATA_REQ_INT_STATUS_CLR                                    0xFFFFFFF7

#define UART_ISR_RX_TIMEOUT_INT_STATUS_SHIFT                                   2
#define UART_ISR_RX_TIMEOUT_INT_STATUS_MASK                                    0x00000004
#define UART_ISR_RX_TIMEOUT_INT_STATUS_SET(n)                                  (((uint32_t)(n) << 2  ) & 0x00000004)
#define UART_ISR_RX_TIMEOUT_INT_STATUS_CLR                                     0xFFFFFFFB

#define UART_ISR_RX_DATA_AVAIL_INT_STATUS_SHIFT                                1
#define UART_ISR_RX_DATA_AVAIL_INT_STATUS_MASK                                 0x00000002
#define UART_ISR_RX_DATA_AVAIL_INT_STATUS_SET(n)                               (((uint32_t)(n) << 1  ) & 0x00000002)
#define UART_ISR_RX_DATA_AVAIL_INT_STATUS_CLR                                  0xFFFFFFFD

#define UART_ISR_RX_LINE_STATUS_INT_STATUS_SHIFT                               0
#define UART_ISR_RX_LINE_STATUS_INT_STATUS_MASK                                0x00000001
#define UART_ISR_RX_LINE_STATUS_INT_STATUS_SET(n)                              (((uint32_t)(n) << 0  ) & 0x00000001)
#define UART_ISR_RX_LINE_STATUS_INT_STATUS_CLR                                 0xFFFFFFFE

#define UART_IRSR_AUTO_BAUDRATE_FINISH_INT_RAW_STATUS_SHIFT                    8
#define UART_IRSR_AUTO_BAUDRATE_FINISH_INT_RAW_STATUS_MASK                     0x00000100
#define UART_IRSR_AUTO_BAUDRATE_FINISH_INT_RAW_STATUS_SET(n)                   (((uint32_t)(n) << 8  ) & 0x00000100)
#define UART_IRSR_AUTO_BAUDRATE_FINISH_INT_RAW_STATUS_CLR                      0xFFFFFEFF

#define UART_IRSR_RX_CH_MATCH_INT_RAW_STATUS_SHIFT                             7
#define UART_IRSR_RX_CH_MATCH_INT_RAW_STATUS_MASK                              0x00000080
#define UART_IRSR_RX_CH_MATCH_INT_RAW_STATUS_SET(n)                            (((uint32_t)(n) << 7  ) & 0x00000080)
#define UART_IRSR_RX_CH_MATCH_INT_RAW_STATUS_CLR                               0xFFFFFF7F

#define UART_IRSR_AUTO_BAUDRATE_TIMEOUT_INT_RAW_STATUS_SHIFT                   6
#define UART_IRSR_AUTO_BAUDRATE_TIMEOUT_INT_RAW_STATUS_MASK                    0x00000040
#define UART_IRSR_AUTO_BAUDRATE_TIMEOUT_INT_RAW_STATUS_SET(n)                  (((uint32_t)(n) << 6  ) & 0x00000040)
#define UART_IRSR_AUTO_BAUDRATE_TIMEOUT_INT_RAW_STATUS_CLR                     0xFFFFFFBF

#define UART_IRSR_CFG_LCR_IN_BUSY_INT_RAW_STATUS_SHIFT                         5
#define UART_IRSR_CFG_LCR_IN_BUSY_INT_RAW_STATUS_MASK                          0x00000020
#define UART_IRSR_CFG_LCR_IN_BUSY_INT_RAW_STATUS_SET(n)                        (((uint32_t)(n) << 5  ) & 0x00000020)
#define UART_IRSR_CFG_LCR_IN_BUSY_INT_RAW_STATUS_CLR                           0xFFFFFFDF

#define UART_IRSR_MDM_STATUS_INT_RAW_STATUS_SHIFT                              4
#define UART_IRSR_MDM_STATUS_INT_RAW_STATUS_MASK                               0x00000010
#define UART_IRSR_MDM_STATUS_INT_RAW_STATUS_SET(n)                             (((uint32_t)(n) << 4  ) & 0x00000010)
#define UART_IRSR_MDM_STATUS_INT_RAW_STATUS_CLR                                0xFFFFFFEF

#define UART_IRSR_TX_DATA_REQ_INT_RAW_STATUS_SHIFT                             3
#define UART_IRSR_TX_DATA_REQ_INT_RAW_STATUS_MASK                              0x00000008
#define UART_IRSR_TX_DATA_REQ_INT_RAW_STATUS_SET(n)                            (((uint32_t)(n) << 3  ) & 0x00000008)
#define UART_IRSR_TX_DATA_REQ_INT_RAW_STATUS_CLR                               0xFFFFFFF7

#define UART_IRSR_RX_TIMEOUT_INT_RAW_STATUS_SHIFT                              2
#define UART_IRSR_RX_TIMEOUT_INT_RAW_STATUS_MASK                               0x00000004
#define UART_IRSR_RX_TIMEOUT_INT_RAW_STATUS_SET(n)                             (((uint32_t)(n) << 2  ) & 0x00000004)
#define UART_IRSR_RX_TIMEOUT_INT_RAW_STATUS_CLR                                0xFFFFFFFB

#define UART_IRSR_RX_DATA_AVAIL_INT_RAW_STATUS_SHIFT                           1
#define UART_IRSR_RX_DATA_AVAIL_INT_RAW_STATUS_MASK                            0x00000002
#define UART_IRSR_RX_DATA_AVAIL_INT_RAW_STATUS_SET(n)                          (((uint32_t)(n) << 1  ) & 0x00000002)
#define UART_IRSR_RX_DATA_AVAIL_INT_RAW_STATUS_CLR                             0xFFFFFFFD

#define UART_IRSR_RX_LINE_STATUS_INT_RAW_STATUS_SHIFT                          0
#define UART_IRSR_RX_LINE_STATUS_INT_RAW_STATUS_MASK                           0x00000001
#define UART_IRSR_RX_LINE_STATUS_INT_RAW_STATUS_SET(n)                         (((uint32_t)(n) << 0  ) & 0x00000001)
#define UART_IRSR_RX_LINE_STATUS_INT_RAW_STATUS_CLR                            0xFFFFFFFE

#define UART_FCR_RFATL_SHIFT                                                   6
#define UART_FCR_RFATL_MASK                                                    0x000000C0
#define UART_FCR_RFATL_SET(n)                                                  (((uint32_t)(n) << 6  ) & 0x000000C0)
#define UART_FCR_RFATL_CLR                                                     0xFFFFFF3F

#define UART_FCR_TFETL_SHIFT                                                   4
#define UART_FCR_TFETL_MASK                                                    0x00000030
#define UART_FCR_TFETL_SET(n)                                                  (((uint32_t)(n) << 4  ) & 0x00000030)
#define UART_FCR_TFETL_CLR                                                     0xFFFFFFCF

#define UART_FCR_RSTTF_SHIFT                                                   2
#define UART_FCR_RSTTF_MASK                                                    0x00000004
#define UART_FCR_RSTTF_SET(n)                                                  (((uint32_t)(n) << 2  ) & 0x00000004)
#define UART_FCR_RSTTF_CLR                                                     0xFFFFFFFB

#define UART_FCR_RSTRF_SHIFT                                                   1
#define UART_FCR_RSTRF_MASK                                                    0x00000002
#define UART_FCR_RSTRF_SET(n)                                                  (((uint32_t)(n) << 1  ) & 0x00000002)
#define UART_FCR_RSTRF_CLR                                                     0xFFFFFFFD

#define UART_FCR_FIFOEN_SHIFT                                                  0
#define UART_FCR_FIFOEN_MASK                                                   0x00000001
#define UART_FCR_FIFOEN_SET(n)                                                 (((uint32_t)(n) << 0  ) & 0x00000001)
#define UART_FCR_FIFOEN_CLR                                                    0xFFFFFFFE

#define UART_LCR_BLS_SHIFT                                                     7
#define UART_LCR_BLS_MASK                                                      0x00000080
#define UART_LCR_BLS_SET(n)                                                    (((uint32_t)(n) << 7  ) & 0x00000080)
#define UART_LCR_BLS_CLR                                                       0xFFFFFF7F

#define UART_LCR_SETB_SHIFT                                                    6
#define UART_LCR_SETB_MASK                                                     0x00000040
#define UART_LCR_SETB_SET(n)                                                   (((uint32_t)(n) << 6  ) & 0x00000040)
#define UART_LCR_SETB_CLR                                                      0xFFFFFFBF

#define UART_LCR_SP_SHIFT                                                      5
#define UART_LCR_SP_MASK                                                       0x00000020
#define UART_LCR_SP_SET(n)                                                     (((uint32_t)(n) << 5  ) & 0x00000020)
#define UART_LCR_SP_CLR                                                        0xFFFFFFDF

#define UART_LCR_EPS_SHIFT                                                     4
#define UART_LCR_EPS_MASK                                                      0x00000010
#define UART_LCR_EPS_SET(n)                                                    (((uint32_t)(n) << 4  ) & 0x00000010)
#define UART_LCR_EPS_CLR                                                       0xFFFFFFEF

#define UART_LCR_PE_SHIFT                                                      3
#define UART_LCR_PE_MASK                                                       0x00000008
#define UART_LCR_PE_SET(n)                                                     (((uint32_t)(n) << 3  ) & 0x00000008)
#define UART_LCR_PE_CLR                                                        0xFFFFFFF7

#define UART_LCR_SBN_SHIFT                                                     2
#define UART_LCR_SBN_MASK                                                      0x00000004
#define UART_LCR_SBN_SET(n)                                                    (((uint32_t)(n) << 2  ) & 0x00000004)
#define UART_LCR_SBN_CLR                                                       0xFFFFFFFB

#define UART_LCR_CHARL_SHIFT                                                   0
#define UART_LCR_CHARL_MASK                                                    0x00000003
#define UART_LCR_CHARL_SET(n)                                                  (((uint32_t)(n) << 0  ) & 0x00000003)
#define UART_LCR_CHARL_CLR                                                     0xFFFFFFFC

#define UART_MCR_LM_SHIFT                                                      4
#define UART_MCR_LM_MASK                                                       0x00000010
#define UART_MCR_LM_SET(n)                                                     (((uint32_t)(n) << 4  ) & 0x00000010)
#define UART_MCR_LM_CLR                                                        0xFFFFFFEF

#define UART_MCR_OUT2_SHIFT                                                    3
#define UART_MCR_OUT2_MASK                                                     0x00000008
#define UART_MCR_OUT2_SET(n)                                                   (((uint32_t)(n) << 3  ) & 0x00000008)
#define UART_MCR_OUT2_CLR                                                      0xFFFFFFF7

#define UART_MCR_OUT1_SHIFT                                                    2
#define UART_MCR_OUT1_MASK                                                     0x00000004
#define UART_MCR_OUT1_SET(n)                                                   (((uint32_t)(n) << 2  ) & 0x00000004)
#define UART_MCR_OUT1_CLR                                                      0xFFFFFFFB

#define UART_MCR_RTS_SHIFT                                                     1
#define UART_MCR_RTS_MASK                                                      0x00000002
#define UART_MCR_RTS_SET(n)                                                    (((uint32_t)(n) << 1  ) & 0x00000002)
#define UART_MCR_RTS_CLR                                                       0xFFFFFFFD

#define UART_MCR_DTR_SHIFT                                                     0
#define UART_MCR_DTR_MASK                                                      0x00000001
#define UART_MCR_DTR_SET(n)                                                    (((uint32_t)(n) << 0  ) & 0x00000001)
#define UART_MCR_DTR_CLR                                                       0xFFFFFFFE

#define UART_LSR_RBI_SHIFT                                                     10
#define UART_LSR_RBI_MASK                                                      0x00000400
#define UART_LSR_RBI_SET(n)                                                    (((uint32_t)(n) << 10 ) & 0x00000400)
#define UART_LSR_RBI_CLR                                                       0xFFFFFBFF

#define UART_LSR_TBI_SHIFT                                                     9
#define UART_LSR_TBI_MASK                                                      0x00000200
#define UART_LSR_TBI_SET(n)                                                    (((uint32_t)(n) << 9  ) & 0x00000200)
#define UART_LSR_TBI_CLR                                                       0xFFFFFDFF

#define UART_LSR_TOE_SHIFT                                                     8
#define UART_LSR_TOE_MASK                                                      0x00000100
#define UART_LSR_TOE_SET(n)                                                    (((uint32_t)(n) << 8  ) & 0x00000100)
#define UART_LSR_TOE_CLR                                                       0xFFFFFEFF

#define UART_LSR_FE_SHIFT                                                      7
#define UART_LSR_FE_MASK                                                       0x00000080
#define UART_LSR_FE_SET(n)                                                     (((uint32_t)(n) << 7  ) & 0x00000080)
#define UART_LSR_FE_CLR                                                        0xFFFFFF7F

#define UART_LSR_TE_SHIFT                                                      6
#define UART_LSR_TE_MASK                                                       0x00000040
#define UART_LSR_TE_SET(n)                                                     (((uint32_t)(n) << 6  ) & 0x00000040)
#define UART_LSR_TE_CLR                                                        0xFFFFFFBF

#define UART_LSR_TDR_SHIFT                                                     5
#define UART_LSR_TDR_MASK                                                      0x00000020
#define UART_LSR_TDR_SET(n)                                                    (((uint32_t)(n) << 5  ) & 0x00000020)
#define UART_LSR_TDR_CLR                                                       0xFFFFFFDF

#define UART_LSR_RB_SHIFT                                                      4
#define UART_LSR_RB_MASK                                                       0x00000010
#define UART_LSR_RB_SET(n)                                                     (((uint32_t)(n) << 4  ) & 0x00000010)
#define UART_LSR_RB_CLR                                                        0xFFFFFFEF

#define UART_LSR_RFE_SHIFT                                                     3
#define UART_LSR_RFE_MASK                                                      0x00000008
#define UART_LSR_RFE_SET(n)                                                    (((uint32_t)(n) << 3  ) & 0x00000008)
#define UART_LSR_RFE_CLR                                                       0xFFFFFFF7

#define UART_LSR_RPE_SHIFT                                                     2
#define UART_LSR_RPE_MASK                                                      0x00000004
#define UART_LSR_RPE_SET(n)                                                    (((uint32_t)(n) << 2  ) & 0x00000004)
#define UART_LSR_RPE_CLR                                                       0xFFFFFFFB

#define UART_LSR_ROE_SHIFT                                                     1
#define UART_LSR_ROE_MASK                                                      0x00000002
#define UART_LSR_ROE_SET(n)                                                    (((uint32_t)(n) << 1  ) & 0x00000002)
#define UART_LSR_ROE_CLR                                                       0xFFFFFFFD

#define UART_LSR_RDA_SHIFT                                                     0
#define UART_LSR_RDA_MASK                                                      0x00000001
#define UART_LSR_RDA_SET(n)                                                    (((uint32_t)(n) << 0  ) & 0x00000001)
#define UART_LSR_RDA_CLR                                                       0xFFFFFFFE

#define UART_MSR_DCD_SHIFT                                                     7
#define UART_MSR_DCD_MASK                                                      0x00000080
#define UART_MSR_DCD_SET(n)                                                    (((uint32_t)(n) << 7  ) & 0x00000080)
#define UART_MSR_DCD_CLR                                                       0xFFFFFF7F

#define UART_MSR_RI_SHIFT                                                      6
#define UART_MSR_RI_MASK                                                       0x00000040
#define UART_MSR_RI_SET(n)                                                     (((uint32_t)(n) << 6  ) & 0x00000040)
#define UART_MSR_RI_CLR                                                        0xFFFFFFBF

#define UART_MSR_DRS_SHIFT                                                     5
#define UART_MSR_DRS_MASK                                                      0x00000020
#define UART_MSR_DRS_SET(n)                                                    (((uint32_t)(n) << 5  ) & 0x00000020)
#define UART_MSR_DRS_CLR                                                       0xFFFFFFDF

#define UART_MSR_CTS_SHIFT                                                     4
#define UART_MSR_CTS_MASK                                                      0x00000010
#define UART_MSR_CTS_SET(n)                                                    (((uint32_t)(n) << 4  ) & 0x00000010)
#define UART_MSR_CTS_CLR                                                       0xFFFFFFEF

#define UART_MSR_DCDC_SHIFT                                                    3
#define UART_MSR_DCDC_MASK                                                     0x00000008
#define UART_MSR_DCDC_SET(n)                                                   (((uint32_t)(n) << 3  ) & 0x00000008)
#define UART_MSR_DCDC_CLR                                                      0xFFFFFFF7

#define UART_MSR_RIC_SHIFT                                                     2
#define UART_MSR_RIC_MASK                                                      0x00000004
#define UART_MSR_RIC_SET(n)                                                    (((uint32_t)(n) << 2  ) & 0x00000004)
#define UART_MSR_RIC_CLR                                                       0xFFFFFFFB

#define UART_MSR_DSRC_SHIFT                                                    1
#define UART_MSR_DSRC_MASK                                                     0x00000002
#define UART_MSR_DSRC_SET(n)                                                   (((uint32_t)(n) << 1  ) & 0x00000002)
#define UART_MSR_DSRC_CLR                                                      0xFFFFFFFD

#define UART_MSR_CTSC_SHIFT                                                    0
#define UART_MSR_CTSC_MASK                                                     0x00000001
#define UART_MSR_CTSC_SET(n)                                                   (((uint32_t)(n) << 0  ) & 0x00000001)
#define UART_MSR_CTSC_CLR                                                      0xFFFFFFFE

#define UART_SCR_SCRATCHREG_SHIFT                                              0
#define UART_SCR_SCRATCHREG_MASK                                               0x000000FF
#define UART_SCR_SCRATCHREG_SET(n)                                             (((uint32_t)(n) << 0  ) & 0x000000FF)
#define UART_SCR_SCRATCHREG_CLR                                                0xFFFFFF00

#define UART_MFCR_RX_EN_SHIFT                                                  13
#define UART_MFCR_RX_EN_MASK                                                   0x00002000
#define UART_MFCR_RX_EN_SET(n)                                                 (((uint32_t)(n) << 13 ) & 0x00002000)
#define UART_MFCR_RX_EN_CLR                                                    0xFFFFDFFF

#define UART_MFCR_TX_EN_SHIFT                                                  12
#define UART_MFCR_TX_EN_MASK                                                   0x00001000
#define UART_MFCR_TX_EN_SET(n)                                                 (((uint32_t)(n) << 12 ) & 0x00001000)
#define UART_MFCR_TX_EN_CLR                                                    0xFFFFEFFF

#define UART_MFCR_PF_SHIFT                                                     8
#define UART_MFCR_PF_MASK                                                      0x00000300
#define UART_MFCR_PF_SET(n)                                                    (((uint32_t)(n) << 8  ) & 0x00000300)
#define UART_MFCR_PF_CLR                                                       0xFFFFFCFF

#define UART_MFCR_AFCE_SHIFT                                                   5
#define UART_MFCR_AFCE_MASK                                                    0x00000020
#define UART_MFCR_AFCE_SET(n)                                                  (((uint32_t)(n) << 5  ) & 0x00000020)
#define UART_MFCR_AFCE_CLR                                                     0xFFFFFFDF

#define UART_MFCR_AFRE_SHIFT                                                   4
#define UART_MFCR_AFRE_MASK                                                    0x00000010
#define UART_MFCR_AFRE_SET(n)                                                  (((uint32_t)(n) << 4  ) & 0x00000010)
#define UART_MFCR_AFRE_CLR                                                     0xFFFFFFEF

#define UART_MFCR_DE_SHIFT                                                     2
#define UART_MFCR_DE_MASK                                                      0x00000004
#define UART_MFCR_DE_SET(n)                                                    (((uint32_t)(n) << 2  ) & 0x00000004)
#define UART_MFCR_DE_CLR                                                       0xFFFFFFFB

#define UART_MFCR_NCE_SHIFT                                                    1
#define UART_MFCR_NCE_MASK                                                     0x00000002
#define UART_MFCR_NCE_SET(n)                                                   (((uint32_t)(n) << 1  ) & 0x00000002)
#define UART_MFCR_NCE_CLR                                                      0xFFFFFFFD

#define UART_MFCR_UE_SHIFT                                                     0
#define UART_MFCR_UE_MASK                                                      0x00000001
#define UART_MFCR_UE_SET(n)                                                    (((uint32_t)(n) << 0  ) & 0x00000001)
#define UART_MFCR_UE_CLR                                                       0xFFFFFFFE

#define UART_EFCR_FRACD_SHIFT                                                  8
#define UART_EFCR_FRACD_MASK                                                   0x00000F00
#define UART_EFCR_FRACD_SET(n)                                                 (((uint32_t)(n) << 8  ) & 0x00000F00)
#define UART_EFCR_FRACD_CLR                                                    0xFFFFF0FF

#define UART_EFCR_RXP_SHIFT                                                    4
#define UART_EFCR_RXP_MASK                                                     0x00000010
#define UART_EFCR_RXP_SET(n)                                                   (((uint32_t)(n) << 4  ) & 0x00000010)
#define UART_EFCR_RXP_CLR                                                      0xFFFFFFEF

#define UART_EFCR_TXP_SHIFT                                                    3
#define UART_EFCR_TXP_MASK                                                     0x00000008
#define UART_EFCR_TXP_SET(n)                                                   (((uint32_t)(n) << 3  ) & 0x00000008)
#define UART_EFCR_TXP_CLR                                                      0xFFFFFFF7

#define UART_EFCR_SLP_SHIFT                                                    2
#define UART_EFCR_SLP_MASK                                                     0x00000004
#define UART_EFCR_SLP_SET(n)                                                   (((uint32_t)(n) << 2  ) & 0x00000004)
#define UART_EFCR_SLP_CLR                                                      0xFFFFFFFB

#define UART_EFCR_RXM_SHIFT                                                    1
#define UART_EFCR_RXM_MASK                                                     0x00000002
#define UART_EFCR_RXM_SET(n)                                                   (((uint32_t)(n) << 1  ) & 0x00000002)
#define UART_EFCR_RXM_CLR                                                      0xFFFFFFFD

#define UART_EFCR_TXM_SHIFT                                                    0
#define UART_EFCR_TXM_MASK                                                     0x00000001
#define UART_EFCR_TXM_SET(n)                                                   (((uint32_t)(n) << 0  ) & 0x00000001)
#define UART_EFCR_TXM_CLR                                                      0xFFFFFFFE

#define UART_LPDR_SIRD_SHIFT                                                   0
#define UART_LPDR_SIRD_MASK                                                    0x0000FFFF
#define UART_LPDR_SIRD_SET(n)                                                  (((uint32_t)(n) << 0  ) & 0x0000FFFF)
#define UART_LPDR_SIRD_CLR                                                     0xFFFF0000

#define UART_FCNR_RXFNUM_SHIFT                                                 16
#define UART_FCNR_RXFNUM_MASK                                                  0x00FF0000
#define UART_FCNR_RXFNUM_SET(n)                                                (((uint32_t)(n) << 16 ) & 0x00FF0000)
#define UART_FCNR_RXFNUM_CLR                                                   0xFF00FFFF

#define UART_FCNR_TXFNUM_SHIFT                                                 0
#define UART_FCNR_TXFNUM_MASK                                                  0x000000FF
#define UART_FCNR_TXFNUM_SET(n)                                                (((uint32_t)(n) << 0  ) & 0x000000FF)
#define UART_FCNR_TXFNUM_CLR                                                   0xFFFFFF00

#define UART_ADCR_ABPS_SHIFT                                                   2
#define UART_ADCR_ABPS_MASK                                                    0x00000004
#define UART_ADCR_ABPS_SET(n)                                                  (((uint32_t)(n) << 2  ) & 0x00000004)
#define UART_ADCR_ABPS_CLR                                                     0xFFFFFFFB

#define UART_ADCR_ABE_SHIFT                                                    0
#define UART_ADCR_ABE_MASK                                                     0x00000001
#define UART_ADCR_ABE_SET(n)                                                   (((uint32_t)(n) << 0  ) & 0x00000001)
#define UART_ADCR_ABE_CLR                                                      0xFFFFFFFE

#define UART_ADRR_ABF_SHIFT                                                    16
#define UART_ADRR_ABF_MASK                                                     0x000F0000
#define UART_ADRR_ABF_SET(n)                                                   (((uint32_t)(n) << 16 ) & 0x000F0000)
#define UART_ADRR_ABF_CLR                                                      0xFFF0FFFF

#define UART_ADRR_ABI_SHIFT                                                    0
#define UART_ADRR_ABI_MASK                                                     0x0000FFFF
#define UART_ADRR_ABI_SET(n)                                                   (((uint32_t)(n) << 0  ) & 0x0000FFFF)
#define UART_ADRR_ABI_CLR                                                      0xFFFF0000

#define UART_RTCR_RIBM_SHIFT                                                   0
#define UART_RTCR_RIBM_MASK                                                    0xFFFFFFFF
#define UART_RTCR_RIBM_SET(n)                                                  (((uint32_t)(n) << 0  ) & 0xFFFFFFFF)
#define UART_RTCR_RIBM_CLR                                                     0x00000000

#define UART_RCMR_RCMSC_SHIFT                                                  10
#define UART_RCMR_RCMSC_MASK                                                   0x00000400
#define UART_RCMR_RCMSC_SET(n)                                                 (((uint32_t)(n) << 10 ) & 0x00000400)
#define UART_RCMR_RCMSC_CLR                                                    0xFFFFFBFF

#define UART_RCMR_RCMS_SHIFT                                                   9
#define UART_RCMR_RCMS_MASK                                                    0x00000200
#define UART_RCMR_RCMS_SET(n)                                                  (((uint32_t)(n) << 9  ) & 0x00000200)
#define UART_RCMR_RCMS_CLR                                                     0xFFFFFDFF

#define UART_RCMR_RCME_SHIFT                                                   8
#define UART_RCMR_RCME_MASK                                                    0x00000100
#define UART_RCMR_RCME_SET(n)                                                  (((uint32_t)(n) << 8  ) & 0x00000100)
#define UART_RCMR_RCME_CLR                                                     0xFFFFFEFF

#define UART_RCMR_RCM_SHIFT                                                    0
#define UART_RCMR_RCM_MASK                                                     0x000000FF
#define UART_RCMR_RCM_SET(n)                                                   (((uint32_t)(n) << 0  ) & 0x000000FF)
#define UART_RCMR_RCM_CLR                                                      0xFFFFFF00

// Register Structure Definition
typedef struct
{
    __IO uint32_t RBTHR                                : 8  ; // 7  : 0 
    __IO uint32_t RESERVED0                            : 24 ; // 31 : 8 
} UART_RTBR_FIELD_T;

typedef struct
{
    __IO uint32_t DLL                                  : 8  ; // 7  : 0 
    __IO uint32_t DLH                                  : 8  ; // 15 : 8 
    __IO uint32_t RESERVED0                            : 16 ; // 31 : 16 
} UART_DLR_FIELD_T;

typedef struct
{
    __IO uint32_t RX_LINE_STATUS_INT_MSK               : 1  ; // 0  : 0 
    __IO uint32_t RX_DATA_AVAIL_INT_MSK                : 1  ; // 1  : 1 
    __IO uint32_t RX_TIMEOUT_INT_MSK                   : 1  ; // 2  : 2 
    __IO uint32_t TX_DATA_REQ_INT_MSK                  : 1  ; // 3  : 3 
    __IO uint32_t MDM_STATUS_INT_MSK                   : 1  ; // 4  : 4 
    __IO uint32_t CFG_LCR_IN_BUSY_INT_MSK              : 1  ; // 5  : 5 
    __IO uint32_t AUTO_BAUDRATE_TIMEOUT_INT_MSK        : 1  ; // 6  : 6 
    __IO uint32_t RX_CH_MATCH_INT_MSK                  : 1  ; // 7  : 7 
    __IO uint32_t AUTO_BAUDRATE_FINISH_INT_MSK         : 1  ; // 8  : 8 
    __IO uint32_t RESERVED0                            : 23 ; // 31 : 9 
} UART_IMR_FIELD_T;

typedef struct
{
    __IO uint32_t RX_LINE_STATUS_INT_CLR               : 1  ; // 0  : 0 
    __IO uint32_t RX_DATA_AVAIL_INT_CLR                : 1  ; // 1  : 1 
    __IO uint32_t RX_TIMEOUT_INT_CLR                   : 1  ; // 2  : 2 
    __IO uint32_t TX_DATA_REQ_INT_CLR                  : 1  ; // 3  : 3 
    __IO uint32_t MDM_STATUS_INT_CLR                   : 1  ; // 4  : 4 
    __IO uint32_t CFG_LCR_IN_BUSY_INT_CLR              : 1  ; // 5  : 5 
    __IO uint32_t AUTO_BAUDRATE_TIMEOUT_INT_CLR        : 1  ; // 6  : 6 
    __IO uint32_t RX_CH_MATCH_INT_CLR                  : 1  ; // 7  : 7 
    __IO uint32_t AUTO_BAUDRATE_FINISH_INT_CLR         : 1  ; // 8  : 8 
    __IO uint32_t RESERVED0                            : 23 ; // 31 : 9 
} UART_ICR_FIELD_T;

typedef struct
{
    __IO uint32_t RX_LINE_STATUS_INT_STATUS            : 1  ; // 0  : 0 
    __IO uint32_t RX_DATA_AVAIL_INT_STATUS             : 1  ; // 1  : 1 
    __IO uint32_t RX_TIMEOUT_INT_STATUS                : 1  ; // 2  : 2 
    __IO uint32_t TX_DATA_REQ_INT_STATUS               : 1  ; // 3  : 3 
    __IO uint32_t MDM_STATUS_INT_STATUS                : 1  ; // 4  : 4 
    __IO uint32_t CFG_LCR_IN_BUSY_INT_STATUS           : 1  ; // 5  : 5 
    __IO uint32_t AUTO_BAUDRATE_TIMEOUT_INT_STATUS     : 1  ; // 6  : 6 
    __IO uint32_t RX_CH_MATCH_INT_STATUS               : 1  ; // 7  : 7 
    __IO uint32_t AUTO_BAUDRATE_FINISH_INT_STATUS      : 1  ; // 8  : 8 
    __IO uint32_t RESERVED0                            : 23 ; // 31 : 9 
} UART_ISR_FIELD_T;

typedef struct
{
    __IO uint32_t RX_LINE_STATUS_INT_RAW_STATUS        : 1  ; // 0  : 0 
    __IO uint32_t RX_DATA_AVAIL_INT_RAW_STATUS         : 1  ; // 1  : 1 
    __IO uint32_t RX_TIMEOUT_INT_RAW_STATUS            : 1  ; // 2  : 2 
    __IO uint32_t TX_DATA_REQ_INT_RAW_STATUS           : 1  ; // 3  : 3 
    __IO uint32_t MDM_STATUS_INT_RAW_STATUS            : 1  ; // 4  : 4 
    __IO uint32_t CFG_LCR_IN_BUSY_INT_RAW_STATUS       : 1  ; // 5  : 5 
    __IO uint32_t AUTO_BAUDRATE_TIMEOUT_INT_RAW_STATUS : 1  ; // 6  : 6 
    __IO uint32_t RX_CH_MATCH_INT_RAW_STATUS           : 1  ; // 7  : 7 
    __IO uint32_t AUTO_BAUDRATE_FINISH_INT_RAW_STATUS  : 1  ; // 8  : 8 
    __IO uint32_t RESERVED0                            : 23 ; // 31 : 9 
} UART_IRSR_FIELD_T;

typedef struct
{
    __IO uint32_t FIFOEN                               : 1  ; // 0  : 0 
    __IO uint32_t RSTRF                                : 1  ; // 1  : 1 
    __IO uint32_t RSTTF                                : 1  ; // 2  : 2 
    __IO uint32_t RESERVED1                            : 1  ; // 3  : 3 
    __IO uint32_t TFETL                                : 2  ; // 5  : 4 
    __IO uint32_t RFATL                                : 2  ; // 7  : 6 
    __IO uint32_t RESERVED0                            : 24 ; // 31 : 8 
} UART_FCR_FIELD_T;

typedef struct
{
    __IO uint32_t CHARL                                : 2  ; // 1  : 0 
    __IO uint32_t SBN                                  : 1  ; // 2  : 2 
    __IO uint32_t PE                                   : 1  ; // 3  : 3 
    __IO uint32_t EPS                                  : 1  ; // 4  : 4 
    __IO uint32_t SP                                   : 1  ; // 5  : 5 
    __IO uint32_t SETB                                 : 1  ; // 6  : 6 
    __IO uint32_t BLS                                  : 1  ; // 7  : 7 
    __IO uint32_t RESERVED0                            : 24 ; // 31 : 8 
} UART_LCR_FIELD_T;

typedef struct
{
    __IO uint32_t DTR                                  : 1  ; // 0  : 0 
    __IO uint32_t RTS                                  : 1  ; // 1  : 1 
    __IO uint32_t OUT1                                 : 1  ; // 2  : 2 
    __IO uint32_t OUT2                                 : 1  ; // 3  : 3 
    __IO uint32_t LM                                   : 1  ; // 4  : 4 
    __IO uint32_t RESERVED0                            : 27 ; // 31 : 5 
} UART_MCR_FIELD_T;

typedef struct
{
    __IO uint32_t RDA                                  : 1  ; // 0  : 0 
    __IO uint32_t ROE                                  : 1  ; // 1  : 1 
    __IO uint32_t RPE                                  : 1  ; // 2  : 2 
    __IO uint32_t RFE                                  : 1  ; // 3  : 3 
    __IO uint32_t RB                                   : 1  ; // 4  : 4 
    __IO uint32_t TDR                                  : 1  ; // 5  : 5 
    __IO uint32_t TE                                   : 1  ; // 6  : 6 
    __IO uint32_t FE                                   : 1  ; // 7  : 7 
    __IO uint32_t TOE                                  : 1  ; // 8  : 8 
    __IO uint32_t TBI                                  : 1  ; // 9  : 9 
    __IO uint32_t RBI                                  : 1  ; // 10 : 10 
    __IO uint32_t RESERVED0                            : 21 ; // 31 : 11 
} UART_LSR_FIELD_T;

typedef struct
{
    __IO uint32_t CTSC                                 : 1  ; // 0  : 0 
    __IO uint32_t DSRC                                 : 1  ; // 1  : 1 
    __IO uint32_t RIC                                  : 1  ; // 2  : 2 
    __IO uint32_t DCDC                                 : 1  ; // 3  : 3 
    __IO uint32_t CTS                                  : 1  ; // 4  : 4 
    __IO uint32_t DRS                                  : 1  ; // 5  : 5 
    __IO uint32_t RI                                   : 1  ; // 6  : 6 
    __IO uint32_t DCD                                  : 1  ; // 7  : 7 
    __IO uint32_t RESERVED0                            : 24 ; // 31 : 8 
} UART_MSR_FIELD_T;

typedef struct
{
    __IO uint32_t SCRATCHREG                           : 8  ; // 7  : 0 
    __IO uint32_t RESERVED0                            : 24 ; // 31 : 8 
} UART_SCR_FIELD_T;

typedef struct
{
    __IO uint32_t UE                                   : 1  ; // 0  : 0 
    __IO uint32_t NCE                                  : 1  ; // 1  : 1 
    __IO uint32_t DE                                   : 1  ; // 2  : 2 
    __IO uint32_t RESERVED3                            : 1  ; // 3  : 3 
    __IO uint32_t AFRE                                 : 1  ; // 4  : 4 
    __IO uint32_t AFCE                                 : 1  ; // 5  : 5 
    __IO uint32_t RESERVED2                            : 2  ; // 7  : 6 
    __IO uint32_t PF                                   : 2  ; // 9  : 8 
    __IO uint32_t RESERVED1                            : 2  ; // 11 : 10 
    __IO uint32_t TX_EN                                : 1  ; // 12 : 12 
    __IO uint32_t RX_EN                                : 1  ; // 13 : 13 
    __IO uint32_t RESERVED0                            : 18 ; // 31 : 14 
} UART_MFCR_FIELD_T;

typedef struct
{
    __IO uint32_t TXM                                  : 1  ; // 0  : 0 
    __IO uint32_t RXM                                  : 1  ; // 1  : 1 
    __IO uint32_t SLP                                  : 1  ; // 2  : 2 
    __IO uint32_t TXP                                  : 1  ; // 3  : 3 
    __IO uint32_t RXP                                  : 1  ; // 4  : 4 
    __IO uint32_t RESERVED                             : 3  ; // 7  : 5 
    __IO uint32_t FRACD                                : 4  ; // 11 : 8 
    __IO uint32_t RESERVED0                            : 20 ; // 31 : 12 
} UART_EFCR_FIELD_T;

typedef struct
{
    __IO uint32_t SIRD                                 : 16 ; // 15 : 0 
    __IO uint32_t RESERVED0                            : 16 ; // 31 : 16 
} UART_LPDR_FIELD_T;

typedef struct
{
    __IO uint32_t TXFNUM                               : 8  ; // 7  : 0 
    __IO uint32_t RESERVED1                            : 8  ; // 15 : 8 
    __IO uint32_t RXFNUM                               : 8  ; // 23 : 16 
    __IO uint32_t RESERVED0                            : 8  ; // 31 : 24 
} UART_FCNR_FIELD_T;

typedef struct
{
    __IO uint32_t ABE                                  : 1  ; // 0  : 0 
    __IO uint32_t RESERVED1                            : 1  ; // 1  : 1 
    __IO uint32_t ABPS                                 : 1  ; // 2  : 2 
    __IO uint32_t RESERVED0                            : 29 ; // 31 : 3 
} UART_ADCR_FIELD_T;

typedef struct
{
    __IO uint32_t ABI                                  : 16 ; // 15 : 0 
    __IO uint32_t ABF                                  : 4  ; // 19 : 16 
    __IO uint32_t RESERVED0                            : 12 ; // 31 : 20 
} UART_ADRR_FIELD_T;

typedef struct
{
    __IO uint32_t RIBM                                 : 32 ; // 31 : 0 
} UART_RTCR_FIELD_T;

typedef struct
{
    __IO uint32_t RCM                                  : 8  ; // 7  : 0 
    __IO uint32_t RCME                                 : 1  ; // 8  : 8 
    __IO uint32_t RCMS                                 : 1  ; // 9  : 9 
    __IO uint32_t RCMSC                                : 1  ; // 10 : 10 
    __IO uint32_t RESERVED0                            : 21 ; // 31 : 11 
} UART_RCMR_FIELD_T;

// Register Map Structure Definition
typedef struct
{
    union 
    { 
        __IO  uint32_t RTBR        ; // 0x0000
        UART_RTBR_FIELD_T RTBR_F   ;
    };

    union 
    { 
        __IO  uint32_t DLR         ; // 0x0004
        UART_DLR_FIELD_T DLR_F     ;
    };

    union 
    { 
        __IO  uint32_t IMR         ; // 0x0008
        UART_IMR_FIELD_T IMR_F     ;
    };

    union 
    { 
        __IO  uint32_t ICR         ; // 0x000C
        UART_ICR_FIELD_T ICR_F     ;
    };

    union 
    { 
        __IO  uint32_t ISR         ; // 0x0010
        UART_ISR_FIELD_T ISR_F     ;
    };

    union 
    { 
        __IO  uint32_t IRSR        ; // 0x0014
        UART_IRSR_FIELD_T IRSR_F   ;
    };

    union 
    { 
        __IO  uint32_t FCR         ; // 0x0018
        UART_FCR_FIELD_T FCR_F     ;
    };

    union 
    { 
        __IO  uint32_t LCR         ; // 0x001C
        UART_LCR_FIELD_T LCR_F     ;
    };

    union 
    { 
        __IO  uint32_t MCR         ; // 0x0020
        UART_MCR_FIELD_T MCR_F     ;
    };

    union 
    { 
        __IO  uint32_t LSR         ; // 0x0024
        UART_LSR_FIELD_T LSR_F     ;
    };

    union 
    { 
        __IO  uint32_t MSR         ; // 0x0028
        UART_MSR_FIELD_T MSR_F     ;
    };

    union 
    { 
        __IO  uint32_t SCR         ; // 0x002C
        UART_SCR_FIELD_T SCR_F     ;
    };

    union 
    { 
        __IO  uint32_t MFCR        ; // 0x0030
        UART_MFCR_FIELD_T MFCR_F   ;
    };

    union 
    { 
        __IO  uint32_t EFCR        ; // 0x0034
        UART_EFCR_FIELD_T EFCR_F   ;
    };

    union 
    { 
        __IO  uint32_t LPDR        ; // 0x0038
        UART_LPDR_FIELD_T LPDR_F   ;
    };

    union 
    { 
        __IO  uint32_t FCNR        ; // 0x003C
        UART_FCNR_FIELD_T FCNR_F   ;
    };

    union 
    { 
        __IO  uint32_t ADCR        ; // 0x0040
        UART_ADCR_FIELD_T ADCR_F   ;
    };

    union 
    { 
        __IO  uint32_t ADRR        ; // 0x0044
        UART_ADRR_FIELD_T ADRR_F   ;
    };

    union 
    { 
        __IO  uint32_t RTCR        ; // 0x0048
        UART_RTCR_FIELD_T RTCR_F   ;
    };

    union 
    { 
        __IO  uint32_t RCMR        ; // 0x004C
        UART_RCMR_FIELD_T RCMR_F   ;
    };

} UART_REG_TypeDef;

#endif
